[DEBUG] 2020-10-29 20:59:45.251 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-29 20:59:45.277 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-29 20:59:45.314 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-29 20:59:45.731 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-29 20:59:45.739 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-29 20:59:46.351 [http-nio-8080-exec-2] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-29 20:59:46.352 [http-nio-8080-exec-2] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-29 20:59:46.410 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-29 20:59:47.655 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-29 20:59:47.714 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-29 20:59:47.722 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-10-29 20:59:47.775 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-29 20:59:47.859 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@50efd0ef
[DEBUG] 2020-10-29 20:59:47.859 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@50efd0ef
[DEBUG] 2020-10-29 20:59:47.859 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@50efd0ef
[DEBUG] 2020-10-29 20:59:47.868 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@67376767
[DEBUG] 2020-10-29 20:59:47.870 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7a415c94
[DEBUG] 2020-10-29 20:59:47.872 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@f1220c8
[DEBUG] 2020-10-29 20:59:47.873 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3638bd37
[DEBUG] 2020-10-29 20:59:47.873 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3638bd37
[DEBUG] 2020-10-29 20:59:47.874 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3638bd37
[DEBUG] 2020-10-29 20:59:47.875 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5797d3dd
[DEBUG] 2020-10-29 20:59:47.876 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5797d3dd
[DEBUG] 2020-10-29 20:59:47.876 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5797d3dd
[DEBUG] 2020-10-29 20:59:47.878 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@47a2a21d
[DEBUG] 2020-10-29 20:59:47.879 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@47a2a21d
[DEBUG] 2020-10-29 20:59:47.879 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@47a2a21d
[DEBUG] 2020-10-29 20:59:47.880 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1c925049
[DEBUG] 2020-10-29 20:59:47.881 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1c925049
[DEBUG] 2020-10-29 20:59:47.881 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c925049
[DEBUG] 2020-10-29 20:59:47.882 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@61f5870
[DEBUG] 2020-10-29 20:59:47.882 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@61f5870
[DEBUG] 2020-10-29 20:59:47.882 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@61f5870
[DEBUG] 2020-10-29 20:59:47.895 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2207ff9f
[DEBUG] 2020-10-29 20:59:47.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2207ff9f
[DEBUG] 2020-10-29 20:59:47.896 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2207ff9f
[DEBUG] 2020-10-29 20:59:47.899 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30e08197
[DEBUG] 2020-10-29 20:59:47.906 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30e08197
[DEBUG] 2020-10-29 20:59:47.907 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@30e08197
[DEBUG] 2020-10-29 20:59:47.909 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@35cbf1c3
[DEBUG] 2020-10-29 20:59:47.909 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@35cbf1c3
[DEBUG] 2020-10-29 20:59:47.910 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d98f3f4
[DEBUG] 2020-10-29 20:59:47.910 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d98f3f4
[DEBUG] 2020-10-29 20:59:47.911 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@34483f8e
[DEBUG] 2020-10-29 20:59:47.911 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@34483f8e
[DEBUG] 2020-10-29 20:59:47.926 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@340f993a
[DEBUG] 2020-10-29 20:59:47.927 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f8824bf
[DEBUG] 2020-10-29 20:59:47.932 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@35c371a6
[DEBUG] 2020-10-29 20:59:47.933 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35c371a6
[DEBUG] 2020-10-29 20:59:47.938 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@372376a1
[DEBUG] 2020-10-29 20:59:47.939 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@372376a1
[DEBUG] 2020-10-29 20:59:47.952 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@14b32c76
[DEBUG] 2020-10-29 20:59:47.953 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14b32c76
[DEBUG] 2020-10-29 20:59:47.957 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@507baea5
[DEBUG] 2020-10-29 20:59:47.957 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@507baea5
[DEBUG] 2020-10-29 20:59:47.958 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d90fade
[DEBUG] 2020-10-29 20:59:47.958 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d90fade
[DEBUG] 2020-10-29 20:59:47.960 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@72463671
[DEBUG] 2020-10-29 20:59:47.960 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@72463671
[DEBUG] 2020-10-29 20:59:47.962 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33f073e4
[DEBUG] 2020-10-29 20:59:47.962 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33f073e4
[DEBUG] 2020-10-29 20:59:47.970 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@20a8c3b5
[DEBUG] 2020-10-29 20:59:47.970 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@20a8c3b5
[DEBUG] 2020-10-29 20:59:47.973 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48d5f83e
[DEBUG] 2020-10-29 20:59:47.973 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@48d5f83e
[DEBUG] 2020-10-29 20:59:47.976 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@fb4f09e
[DEBUG] 2020-10-29 20:59:47.976 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@fb4f09e
[DEBUG] 2020-10-29 20:59:47.978 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@653d7b25
[DEBUG] 2020-10-29 20:59:47.978 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@653d7b25
[DEBUG] 2020-10-29 20:59:47.979 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cdbad6c
[DEBUG] 2020-10-29 20:59:47.979 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cdbad6c
[DEBUG] 2020-10-29 20:59:47.979 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cdbad6c
[DEBUG] 2020-10-29 20:59:47.985 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@38bd3312
[DEBUG] 2020-10-29 20:59:47.990 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5d7b7fd7
[DEBUG] 2020-10-29 20:59:47.993 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d7b7fd7
[DEBUG] 2020-10-29 20:59:47.993 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d7b7fd7
[DEBUG] 2020-10-29 20:59:47.998 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61071bee
[DEBUG] 2020-10-29 20:59:48.002 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@29ede09a
[DEBUG] 2020-10-29 20:59:48.002 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29ede09a
[DEBUG] 2020-10-29 20:59:48.005 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@aa7eb49
[DEBUG] 2020-10-29 20:59:48.005 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@aa7eb49
[DEBUG] 2020-10-29 20:59:48.006 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1c185ea1
[DEBUG] 2020-10-29 20:59:48.006 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1c185ea1
[DEBUG] 2020-10-29 20:59:48.013 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@25bde5f7
[DEBUG] 2020-10-29 20:59:48.013 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@25bde5f7
[DEBUG] 2020-10-29 20:59:48.023 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5feccaec
[DEBUG] 2020-10-29 20:59:48.024 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5feccaec
[DEBUG] 2020-10-29 20:59:48.024 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2fd925a0
[DEBUG] 2020-10-29 20:59:48.026 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@26ac500b
[DEBUG] 2020-10-29 20:59:48.026 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@26ac500b
[DEBUG] 2020-10-29 20:59:48.026 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@26ac500b
[DEBUG] 2020-10-29 20:59:48.028 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@26af6da
[DEBUG] 2020-10-29 20:59:48.029 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@26af6da
[DEBUG] 2020-10-29 20:59:48.029 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@26af6da
[DEBUG] 2020-10-29 20:59:48.055 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4723eadb
[DEBUG] 2020-10-29 20:59:48.056 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@11d91efd
[DEBUG] 2020-10-29 20:59:48.061 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6e939146
[DEBUG] 2020-10-29 20:59:48.062 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e939146
[DEBUG] 2020-10-29 20:59:48.062 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6e939146
[DEBUG] 2020-10-29 20:59:48.073 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cac958b
[DEBUG] 2020-10-29 20:59:48.074 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cac958b
[DEBUG] 2020-10-29 20:59:48.074 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cac958b
[DEBUG] 2020-10-29 20:59:48.077 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2d6b6844
[DEBUG] 2020-10-29 20:59:48.078 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@78515538
[DEBUG] 2020-10-29 20:59:48.080 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7e231d13
[DEBUG] 2020-10-29 20:59:48.080 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e231d13
[DEBUG] 2020-10-29 20:59:48.086 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@174b1811
[DEBUG] 2020-10-29 20:59:48.094 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2b66cf0d
[DEBUG] 2020-10-29 20:59:48.095 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2b66cf0d
[DEBUG] 2020-10-29 20:59:48.097 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@26ecf080
[DEBUG] 2020-10-29 20:59:48.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26ecf080
[DEBUG] 2020-10-29 20:59:48.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b871724
[DEBUG] 2020-10-29 20:59:48.098 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19705661
[DEBUG] 2020-10-29 20:59:48.122 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4ff23c34
[DEBUG] 2020-10-29 20:59:48.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6d1a38dc
[DEBUG] 2020-10-29 20:59:48.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d1a38dc
[DEBUG] 2020-10-29 20:59:48.146 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51c0e3c8
[DEBUG] 2020-10-29 20:59:48.147 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a7a107
[DEBUG] 2020-10-29 20:59:48.151 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@357e55e1
[DEBUG] 2020-10-29 20:59:48.152 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5fe71a0c
[DEBUG] 2020-10-29 20:59:48.152 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@96f7c9b
[DEBUG] 2020-10-29 20:59:48.161 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30f95b28
[DEBUG] 2020-10-29 20:59:48.161 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77efc18b
[DEBUG] 2020-10-29 20:59:48.161 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@103f8200
[DEBUG] 2020-10-29 20:59:48.359 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-29 20:59:48.361 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-29 20:59:48.367 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-29 20:59:48.368 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-29 20:59:48.374 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-29 20:59:48.376 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-29 20:59:48.377 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-29 20:59:48.379 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-29 20:59:48.391 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-29 20:59:48.392 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-29 20:59:48.396 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-29 20:59:48.397 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-29 20:59:48.413 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-29 20:59:48.414 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-29 20:59:48.453 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/Billing
[INFO ] 2020-10-29 20:59:48.453 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-29 20:59:48.454 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-29 20:59:49.916 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-29 20:59:50.958 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-29 20:59:50.985 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-29 20:59:50.986 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-29 20:59:51.186 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-29 20:59:51.280 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-29 20:59:51.413 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-29 20:59:51.580 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-29 20:59:51.599 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@426ab236] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38fc926a]
[DEBUG] 2020-10-29 20:59:51.850 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.User
[DEBUG] 2020-10-29 20:59:51.962 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-29 20:59:52.023 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-10-29 20:59:52.027 [http-nio-8080-exec-2] EntityBinder - Bind entity BillingSystem.entity.User on table user
[DEBUG] 2020-10-29 20:59:52.110 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.131 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-29 20:59:52.133 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:id]
[DEBUG] 2020-10-29 20:59:52.136 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-29 20:59:52.141 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-10-29 20:59:52.157 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-29 20:59:52.159 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.159 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-10-29 20:59:52.159 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:address]
[DEBUG] 2020-10-29 20:59:52.159 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-10-29 20:59:52.160 [http-nio-8080-exec-2] PropertyBinder - Building property address
[DEBUG] 2020-10-29 20:59:52.161 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-29 20:59:52.164 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.175 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.198 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.199 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.200 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billings_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-29 20:59:52.203 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-29 20:59:52.203 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-10-29 20:59:52.203 [http-nio-8080-exec-2] CollectionBinder - Collection role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:52.209 [http-nio-8080-exec-2] PropertyBinder - Building property billings
[DEBUG] 2020-10-29 20:59:52.210 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.210 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-10-29 20:59:52.210 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:city]
[DEBUG] 2020-10-29 20:59:52.210 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-10-29 20:59:52.213 [http-nio-8080-exec-2] PropertyBinder - Building property city
[DEBUG] 2020-10-29 20:59:52.213 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.213 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property dateOfBirth with lazy=false
[DEBUG] 2020-10-29 20:59:52.225 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:dateOfBirth]
[DEBUG] 2020-10-29 20:59:52.225 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for dateOfBirth
[DEBUG] 2020-10-29 20:59:52.227 [http-nio-8080-exec-2] PropertyBinder - Building property dateOfBirth
[DEBUG] 2020-10-29 20:59:52.228 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.228 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-10-29 20:59:52.228 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:description]
[DEBUG] 2020-10-29 20:59:52.228 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-10-29 20:59:52.228 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-10-29 20:59:52.228 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.229 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-10-29 20:59:52.229 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:name]
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] PropertyBinder - Building property name
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:password]
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.230 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-10-29 20:59:52.234 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:phone]
[DEBUG] 2020-10-29 20:59:52.235 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-10-29 20:59:52.236 [http-nio-8080-exec-2] PropertyBinder - Building property phone
[DEBUG] 2020-10-29 20:59:52.236 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=role, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.237 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2020-10-29 20:59:52.237 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:role]
[DEBUG] 2020-10-29 20:59:52.237 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2020-10-29 20:59:52.237 [http-nio-8080-exec-2] PropertyBinder - Building property role
[DEBUG] 2020-10-29 20:59:52.238 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.239 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-10-29 20:59:52.241 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:state]
[DEBUG] 2020-10-29 20:59:52.244 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-10-29 20:59:52.245 [http-nio-8080-exec-2] PropertyBinder - Building property state
[DEBUG] 2020-10-29 20:59:52.252 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.252 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-10-29 20:59:52.252 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:userName]
[DEBUG] 2020-10-29 20:59:52.252 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-10-29 20:59:52.252 [http-nio-8080-exec-2] PropertyBinder - Building property userName
[DEBUG] 2020-10-29 20:59:52.252 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=zip_code, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.253 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-10-29 20:59:52.253 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:zipcode]
[DEBUG] 2020-10-29 20:59:52.253 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-10-29 20:59:52.253 [http-nio-8080-exec-2] PropertyBinder - Building property zipcode
[DEBUG] 2020-10-29 20:59:52.255 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Billing
[DEBUG] 2020-10-29 20:59:52.255 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-29 20:59:52.255 [http-nio-8080-exec-2] EntityBinder - Import with entity name Billing
[DEBUG] 2020-10-29 20:59:52.255 [http-nio-8080-exec-2] EntityBinder - Bind entity BillingSystem.entity.Billing on table billing
[DEBUG] 2020-10-29 20:59:52.265 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.265 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-29 20:59:52.265 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:id]
[DEBUG] 2020-10-29 20:59:52.266 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-29 20:59:52.266 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-10-29 20:59:52.266 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-29 20:59:52.266 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=bill_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.267 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property billAmount with lazy=false
[DEBUG] 2020-10-29 20:59:52.267 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:billAmount]
[DEBUG] 2020-10-29 20:59:52.267 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for billAmount
[DEBUG] 2020-10-29 20:59:52.267 [http-nio-8080-exec-2] PropertyBinder - Building property billAmount
[DEBUG] 2020-10-29 20:59:52.267 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=paid_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.267 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property paidAmount with lazy=false
[DEBUG] 2020-10-29 20:59:52.267 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paidAmount]
[DEBUG] 2020-10-29 20:59:52.268 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for paidAmount
[DEBUG] 2020-10-29 20:59:52.268 [http-nio-8080-exec-2] PropertyBinder - Building property paidAmount
[DEBUG] 2020-10-29 20:59:52.268 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=payment_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.268 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property paymentDate with lazy=false
[DEBUG] 2020-10-29 20:59:52.268 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paymentDate]
[DEBUG] 2020-10-29 20:59:52.269 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for paymentDate
[DEBUG] 2020-10-29 20:59:52.269 [http-nio-8080-exec-2] PropertyBinder - Building property paymentDate
[DEBUG] 2020-10-29 20:59:52.269 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=present_reading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.269 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property presentReading with lazy=false
[DEBUG] 2020-10-29 20:59:52.269 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:presentReading]
[DEBUG] 2020-10-29 20:59:52.270 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for presentReading
[DEBUG] 2020-10-29 20:59:52.273 [http-nio-8080-exec-2] PropertyBinder - Building property presentReading
[DEBUG] 2020-10-29 20:59:52.275 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previous_balance, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property previousBalance with lazy=false
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousBalance]
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for previousBalance
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] PropertyBinder - Building property previousBalance
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=reading_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property readingDate with lazy=false
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:readingDate]
[DEBUG] 2020-10-29 20:59:52.276 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for readingDate
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] PropertyBinder - Building property readingDate
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=reg_no, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property registration with lazy=false
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:registration]
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for registration
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] PropertyBinder - Building property registration
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-29 20:59:52.277 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-29 20:59:52.289 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-10-29 20:59:52.291 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-29 20:59:52.291 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-10-29 20:59:52.291 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-10-29 20:59:52.291 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for dateOfBirth
[DEBUG] 2020-10-29 20:59:52.291 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-10-29 20:59:52.292 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-10-29 20:59:52.292 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-10-29 20:59:52.292 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for state
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for billAmount
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for paidAmount
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for paymentDate
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for presentReading
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for previousBalance
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for readingDate
[DEBUG] 2020-10-29 20:59:52.293 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for registration
[DEBUG] 2020-10-29 20:59:52.302 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-10-29 20:59:52.303 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [billing]
[DEBUG] 2020-10-29 20:59:52.304 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:52.308 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.billings through a foreign key
[DEBUG] 2020-10-29 20:59:52.309 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: BillingSystem.entity.User.billings -> billing
[DEBUG] 2020-10-29 20:59:52.311 [http-nio-8080-exec-2] TableBinder - Retrieving property BillingSystem.entity.Billing.user
[DEBUG] 2020-10-29 20:59:52.311 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user_id, one-to-many: BillingSystem.entity.Billing
[DEBUG] 2020-10-29 20:59:52.311 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-10-29 20:59:52.325 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-10-29 20:59:52.409 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-10-29 20:59:52.411 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-10-29 20:59:52.411 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-10-29 20:59:52.411 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-10-29 20:59:52.411 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-10-29 20:59:52.412 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-10-29 20:59:52.413 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-10-29 20:59:52.413 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-10-29 20:59:52.413 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-10-29 20:59:52.413 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-10-29 20:59:52.413 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-10-29 20:59:52.413 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-10-29 20:59:52.413 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-10-29 20:59:52.627 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-10-29 20:59:52.722 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-10-29 20:59:52.723 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-10-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.9+11-Ubuntu-0ubuntu1.18.04.1, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.9, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-52-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/Billing, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@274e3e5a, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.9+11-Ubuntu-0ubuntu1.18.04.1, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/Billing, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-10-29 20:59:52.819 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-10-29 20:59:52.819 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-10-29 20:59:52.911 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-10-29 20:59:52.914 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-10-29 20:59:52.936 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-10-29 20:59:52.941 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-10-29 20:59:52.941 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@426ab236] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@8995fce]
[DEBUG] 2020-10-29 20:59:53.215 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-10-29 20:59:53.216 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-10-29 20:59:53.322 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-10-29 20:59:53.326 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-10-29 20:59:54.155 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-10-29 20:59:54.157 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-10-29 20:59:54.158 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-10-29 20:59:54.158 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-10-29 20:59:54.272 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:54.273 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update billing set user_id=? where id=?
[DEBUG] 2020-10-29 20:59:54.273 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update billing set  where id=?
[DEBUG] 2020-10-29 20:59:54.273 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update billing set user_id=null where user_id=? and id=?
[DEBUG] 2020-10-29 20:59:54.273 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update billing set user_id=null where user_id=?
[DEBUG] 2020-10-29 20:59:54.280 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.User
[DEBUG] 2020-10-29 20:59:54.280 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-10-29 20:59:54.280 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_1_, user_.city as city3_1_, user_.date_of_birth as date_of_4_1_, user_.description as descript5_1_, user_.name as name6_1_, user_.password as password7_1_, user_.phone as phone8_1_, user_.role as role9_1_, user_.state as state10_1_, user_.user_name as user_na11_1_, user_.zip_code as zip_cod12_1_ from user user_ where user_.id=?
[DEBUG] 2020-10-29 20:59:54.280 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into user (address, city, date_of_birth, description, name, password, phone, role, state, user_name, zip_code, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-29 20:59:54.280 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update user set address=?, city=?, date_of_birth=?, description=?, name=?, password=?, phone=?, role=?, state=?, user_name=?, zip_code=? where id=?
[DEBUG] 2020-10-29 20:59:54.280 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-10-29 20:59:54.280 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into user (address, city, date_of_birth, description, name, password, phone, role, state, user_name, zip_code) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-29 20:59:54.343 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283f048b]
[DEBUG] 2020-10-29 20:59:54.345 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-10-29 20:59:54.345 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-10-29 20:59:54.361 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1cacf953]
[DEBUG] 2020-10-29 20:59:54.364 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@582b963b]
[DEBUG] 2020-10-29 20:59:54.365 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-10-29 20:59:54.365 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-10-29 20:59:54.365 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-10-29 20:59:54.365 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.presentReading
[DEBUG] 2020-10-29 20:59:54.367 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-10-29 20:59:54.369 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-10-29 20:59:54.370 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.registration
[DEBUG] 2020-10-29 20:59:54.370 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-10-29 20:59:54.370 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : dateOfBirth
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-10-29 20:59:54.374 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-10-29 20:59:54.375 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-10-29 20:59:54.375 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-29 20:59:54.409 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-29 20:59:54.429 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-29 20:59:54.439 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.address as address2_1_0_, user0_.city as city3_1_0_, user0_.date_of_birth as date_of_4_1_0_, user0_.description as descript5_1_0_, user0_.name as name6_1_0_, user0_.password as password7_1_0_, user0_.phone as phone8_1_0_, user0_.role as role9_1_0_, user0_.state as state10_1_0_, user0_.user_name as user_na11_1_0_, user0_.zip_code as zip_cod12_1_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.present_reading as present_5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.reading_date as reading_7_0_2_, billings1_.reg_no as reg_no8_0_2_, billings1_.user_id as user_id9_0_2_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-10-29 20:59:54.439 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69524bbb]
[DEBUG] 2020-10-29 20:59:54.440 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-10-29 20:59:54.441 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-10-29 20:59:54.441 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21b4b1ff]
[DEBUG] 2020-10-29 20:59:54.441 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ebef083]
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.presentReading
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.registration
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : dateOfBirth
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-10-29 20:59:54.444 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-10-29 20:59:54.445 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-10-29 20:59:54.445 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-10-29 20:59:54.445 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-10-29 20:59:54.445 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-10-29 20:59:54.445 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-10-29 20:59:54.445 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-29 20:59:54.445 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-29 20:59:54.448 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2020-10-29 20:59:54.449 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.User [READ]: select user0_.id as id1_1_0_, user0_.address as address2_1_0_, user0_.city as city3_1_0_, user0_.date_of_birth as date_of_4_1_0_, user0_.description as descript5_1_0_, user0_.name as name6_1_0_, user0_.password as password7_1_0_, user0_.phone as phone8_1_0_, user0_.role as role9_1_0_, user0_.state as state10_1_0_, user0_.user_name as user_na11_1_0_, user0_.zip_code as zip_cod12_1_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.present_reading as present_5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.reading_date as reading_7_0_2_, billings1_.reg_no as reg_no8_0_2_, billings1_.user_id as user_id9_0_2_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-10-29 20:59:54.467 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.User: select user0_.id as id1_1_1_, user0_.address as address2_1_1_, user0_.city as city3_1_1_, user0_.date_of_birth as date_of_4_1_1_, user0_.description as descript5_1_1_, user0_.name as name6_1_1_, user0_.password as password7_1_1_, user0_.phone as phone8_1_1_, user0_.role as role9_1_1_, user0_.state as state10_1_1_, user0_.user_name as user_na11_1_1_, user0_.zip_code as zip_cod12_1_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.present_reading as present_5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.reading_date as reading_7_0_0_, billings1_.reg_no as reg_no8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.User: select user0_.id as id1_1_1_, user0_.address as address2_1_1_, user0_.city as city3_1_1_, user0_.date_of_birth as date_of_4_1_1_, user0_.description as descript5_1_1_, user0_.name as name6_1_1_, user0_.password as password7_1_1_, user0_.phone as phone8_1_1_, user0_.role as role9_1_1_, user0_.state as state10_1_1_, user0_.user_name as user_na11_1_1_, user0_.zip_code as zip_cod12_1_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.present_reading as present_5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.reading_date as reading_7_0_0_, billings1_.reg_no as reg_no8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Billing
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from billing where id =?
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select billing_.id, billing_.bill_amt as bill_amt2_0_, billing_.paid_amt as paid_amt3_0_, billing_.payment_date as payment_4_0_, billing_.present_reading as present_5_0_, billing_.previous_balance as previous6_0_, billing_.reading_date as reading_7_0_, billing_.reg_no as reg_no8_0_, billing_.user_id as user_id9_0_ from billing billing_ where billing_.id=?
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into billing (bill_amt, paid_amt, payment_date, present_reading, previous_balance, reading_date, reg_no, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update billing set bill_amt=?, paid_amt=?, payment_date=?, present_reading=?, previous_balance=?, reading_date=?, reg_no=?, user_id=? where id=?
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from billing where id=?
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into billing (bill_amt, paid_amt, payment_date, present_reading, previous_balance, reading_date, reg_no, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@102dace8]
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-10-29 20:59:54.468 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-10-29 20:59:54.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : presentReading
[DEBUG] 2020-10-29 20:59:54.469 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-10-29 20:59:54.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-10-29 20:59:54.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registration
[DEBUG] 2020-10-29 20:59:54.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-29 20:59:54.470 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38242eb7]
[DEBUG] 2020-10-29 20:59:54.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-10-29 20:59:54.470 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-29 20:59:54.471 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-29 20:59:54.472 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-29 20:59:54.472 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.Billing [NONE]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.present_reading as present_5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.reading_date as reading_7_0_0_, billing0_.reg_no as reg_no8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_1_1_, user1_.address as address2_1_1_, user1_.city as city3_1_1_, user1_.date_of_birth as date_of_4_1_1_, user1_.description as descript5_1_1_, user1_.name as name6_1_1_, user1_.password as password7_1_1_, user1_.phone as phone8_1_1_, user1_.role as role9_1_1_, user1_.state as state10_1_1_, user1_.user_name as user_na11_1_1_, user1_.zip_code as zip_cod12_1_1_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id where billing0_.id=?
[DEBUG] 2020-10-29 20:59:54.472 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59365031]
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : presentReading
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registration
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@698ea8d]
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-10-29 20:59:54.475 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2020-10-29 20:59:54.478 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-10-29 20:59:54.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-10-29 20:59:54.479 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-10-29 20:59:54.479 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-29 20:59:54.480 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-29 20:59:54.484 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2020-10-29 20:59:54.484 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.Billing [READ]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.present_reading as present_5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.reading_date as reading_7_0_0_, billing0_.reg_no as reg_no8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_1_1_, user1_.address as address2_1_1_, user1_.city as city3_1_1_, user1_.date_of_birth as date_of_4_1_1_, user1_.description as descript5_1_1_, user1_.name as name6_1_1_, user1_.password as password7_1_1_, user1_.phone as phone8_1_1_, user1_.role as role9_1_1_, user1_.state as state10_1_1_, user1_.user_name as user_na11_1_1_, user1_.zip_code as zip_cod12_1_1_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id where billing0_.id=?
[DEBUG] 2020-10-29 20:59:54.488 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.present_reading as present_5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.reading_date as reading_7_0_0_, billing0_.reg_no as reg_no8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-10-29 20:59:54.488 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.present_reading as present_5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.reading_date as reading_7_0_0_, billing0_.reg_no as reg_no8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-10-29 20:59:54.493 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b5b9e36]
[DEBUG] 2020-10-29 20:59:54.493 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@158bd712]
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : presentReading
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : registration
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-10-29 20:59:54.494 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-10-29 20:59:54.499 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-10-29 20:59:54.502 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.billings)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.billings])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.billings].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.billings)
          - SQL table alias mapping - billings0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Billing)
                - SQL table alias mapping - billings0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-10-29 20:59:54.504 [http-nio-8080-exec-2] CollectionLoader - Static select for collection BillingSystem.entity.User.billings: select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:54.619 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-10-29 20:59:54.620 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-10-29 20:59:54.621 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-10-29 20:59:54.661 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-10-29 20:59:54.662 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-10-29 20:59:54.670 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-10-29 20:59:54.670 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-10-29 20:59:54.682 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6fac868e
[DEBUG] 2020-10-29 20:59:54.684 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 2f39f608-5478-4986-8a93-0e1730ee369e (<unnamed>)
[DEBUG] 2020-10-29 20:59:54.684 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-10-29 20:59:55.021 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-10-29 20:59:55.097 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-10-29 20:59:55.171 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1c0289c7
[DEBUG] 2020-10-29 20:59:55.259 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-10-29 20:59:55.279 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-29 20:59:55.296 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'BillingSystem'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-10-29 20:59:55.329 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-10-29 20:59:55.361 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : BillingSystem.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-10-29 20:59:55.361 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-10-29 20:59:55.363 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-10-29 20:59:55.364 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-10-29 20:59:55.410 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-10-29 20:59:55.411 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-10-29 20:59:55.411 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=BillingSystem.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_1_, user0_.city as city3_1_, user0_.date_of_birth as date_of_4_1_, user0_.description as descript5_1_, user0_.name as name6_1_, user0_.password as password7_1_, user0_.phone as phone8_1_, user0_.role as role9_1_, user0_.state as state10_1_, user0_.user_name as user_na11_1_, user0_.zip_code as zip_cod12_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=BillingSystem.entity.User}}

[DEBUG] 2020-10-29 20:59:55.411 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-29 20:59:55.431 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-10-29 20:59:55.431 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.address as address2_1_, user0_.city as city3_1_, user0_.date_of_birth as date_of_4_1_, user0_.description as descript5_1_, user0_.name as name6_1_, user0_.password as password7_1_, user0_.phone as phone8_1_, user0_.role as role9_1_, user0_.state as state10_1_, user0_.user_name as user_na11_1_, user0_.zip_code as zip_cod12_1_ from user user0_
[DEBUG] 2020-10-29 20:59:55.431 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-10-29 20:59:55.512 [http-nio-8080-exec-2] SQL - select user0_.id as id1_1_, user0_.address as address2_1_, user0_.city as city3_1_, user0_.date_of_birth as date_of_4_1_, user0_.description as descript5_1_, user0_.name as name6_1_, user0_.password as password7_1_, user0_.phone as phone8_1_, user0_.role as role9_1_, user0_.state as state10_1_, user0_.user_name as user_na11_1_, user0_.zip_code as zip_cod12_1_ from user user0_
[DEBUG] 2020-10-29 20:59:55.578 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-10-29 20:59:55.591 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#1]
[DEBUG] 2020-10-29 20:59:55.605 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-10-29 20:59:55.605 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#2]
[DEBUG] 2020-10-29 20:59:55.605 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2020-10-29 20:59:55.606 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#3]
[DEBUG] 2020-10-29 20:59:55.610 [http-nio-8080-exec-2] Loader - Result set row: 3
[DEBUG] 2020-10-29 20:59:55.611 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#4]
[DEBUG] 2020-10-29 20:59:55.611 [http-nio-8080-exec-2] Loader - Result set row: 4
[DEBUG] 2020-10-29 20:59:55.611 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#5]
[DEBUG] 2020-10-29 20:59:55.612 [http-nio-8080-exec-2] Loader - Result set row: 5
[DEBUG] 2020-10-29 20:59:55.612 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#6]
[DEBUG] 2020-10-29 20:59:55.612 [http-nio-8080-exec-2] Loader - Result set row: 6
[DEBUG] 2020-10-29 20:59:55.612 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#67]
[DEBUG] 2020-10-29 20:59:55.626 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-10-29 20:59:55.627 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-10-29 20:59:55.627 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.627 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-29 20:59:55.627 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1962-12-31
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = JCoyne
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = Joe
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-10-29 20:59:55.658 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.659 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-10-29 20:59:55.659 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-10-29 20:59:55.659 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-10-29 20:59:55.659 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.659 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1972-12-31
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Fred Hansen
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = FHansen
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = user
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = Fred
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-10-29 20:59:55.660 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.670 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-10-29 20:59:55.670 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#3]
[DEBUG] 2020-10-29 20:59:55.670 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-10-29 20:59:55.670 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.670 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-29 20:59:55.670 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1982-12-31
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Barney Curry
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = BCurry
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 608625444
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-10-29 20:59:55.671 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.673 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = Barney
[DEBUG] 2020-10-29 20:59:55.673 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.673 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#3]
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#4]
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Verona
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.674 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1992-12-31
[DEBUG] 2020-10-29 20:59:55.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-10-29 20:59:55.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Karen Kmack
[DEBUG] 2020-10-29 20:59:55.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = KKmack
[DEBUG] 2020-10-29 20:59:55.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 608625111
[DEBUG] 2020-10-29 20:59:55.678 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.678 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = user
[DEBUG] 2020-10-29 20:59:55.678 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = Karen
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#4]
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#5]
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-10-29 20:59:55.680 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1983-12-31
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Dianne Klein
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = DKlein
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086252662
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = Dianne
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#5]
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#6]
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-10-29 20:59:55.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.685 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-29 20:59:55.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.694 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Sun Prairie
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 2000-12-31
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = DTilman
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086257722
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = user
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = Down
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-10-29 20:59:55.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#6]
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#67]
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1162-12-31
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = user
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = DTilman
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086925566
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = Dawn
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-10-29 20:59:55.696 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#67]
[DEBUG] 2020-10-29 20:59:55.705 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#67]
[DEBUG] 2020-10-29 20:59:55.706 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:55.734 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#67]
[DEBUG] 2020-10-29 20:59:55.767 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.768 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#67]
[DEBUG] 2020-10-29 20:59:55.768 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.768 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-29 20:59:55.768 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-29 20:59:55.769 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-10-29 20:59:55.769 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:55.773 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-10-29 20:59:55.773 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.773 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-10-29 20:59:55.773 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.774 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-29 20:59:55.774 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-29 20:59:55.774 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-10-29 20:59:55.774 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:55.775 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-10-29 20:59:55.776 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.776 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-10-29 20:59:55.776 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.776 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-29 20:59:55.776 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-29 20:59:55.776 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-10-29 20:59:55.776 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:55.789 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-10-29 20:59:55.789 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.789 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-10-29 20:59:55.790 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.790 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-29 20:59:55.790 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-29 20:59:55.794 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-10-29 20:59:55.794 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:55.802 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-10-29 20:59:55.807 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.807 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-10-29 20:59:55.807 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.807 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-29 20:59:55.807 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-29 20:59:55.807 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-10-29 20:59:55.812 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:55.813 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-10-29 20:59:55.814 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.814 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-10-29 20:59:55.814 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.814 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-29 20:59:55.814 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-29 20:59:55.814 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-10-29 20:59:55.814 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.present_reading as present_5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.reading_date as reading_7_0_1_, billings0_.reg_no as reg_no8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-10-29 20:59:55.820 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-10-29 20:59:55.820 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.820 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-10-29 20:59:55.824 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-10-29 20:59:55.824 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-10-29 20:59:55.824 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-10-29 20:59:55.826 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
