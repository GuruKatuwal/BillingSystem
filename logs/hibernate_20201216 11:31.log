[DEBUG] 2020-12-16 11:31:49.045 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-16 11:31:49.063 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-16 11:31:49.089 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-16 11:31:49.465 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-16 11:31:49.481 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-16 11:31:50.054 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-16 11:31:50.059 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-16 11:31:50.156 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-16 11:31:51.426 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-16 11:31:51.582 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-16 11:31:51.598 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-16 11:31:51.728 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-16 11:31:51.911 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4fca56ae
[DEBUG] 2020-12-16 11:31:51.912 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4fca56ae
[DEBUG] 2020-12-16 11:31:51.912 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4fca56ae
[DEBUG] 2020-12-16 11:31:51.914 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@39d90ed9
[DEBUG] 2020-12-16 11:31:51.914 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@22fc4f8e
[DEBUG] 2020-12-16 11:31:51.915 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@25670b85
[DEBUG] 2020-12-16 11:31:51.917 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4f42a7c3
[DEBUG] 2020-12-16 11:31:51.917 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4f42a7c3
[DEBUG] 2020-12-16 11:31:51.917 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f42a7c3
[DEBUG] 2020-12-16 11:31:51.919 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@31011ebb
[DEBUG] 2020-12-16 11:31:51.919 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@31011ebb
[DEBUG] 2020-12-16 11:31:51.919 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31011ebb
[DEBUG] 2020-12-16 11:31:51.920 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1676a1f7
[DEBUG] 2020-12-16 11:31:51.927 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1676a1f7
[DEBUG] 2020-12-16 11:31:51.927 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1676a1f7
[DEBUG] 2020-12-16 11:31:51.929 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2f5b436d
[DEBUG] 2020-12-16 11:31:51.929 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2f5b436d
[DEBUG] 2020-12-16 11:31:51.929 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f5b436d
[DEBUG] 2020-12-16 11:31:51.941 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6e1692d8
[DEBUG] 2020-12-16 11:31:51.941 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6e1692d8
[DEBUG] 2020-12-16 11:31:51.941 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e1692d8
[DEBUG] 2020-12-16 11:31:51.943 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@9d09f84
[DEBUG] 2020-12-16 11:31:51.943 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@9d09f84
[DEBUG] 2020-12-16 11:31:51.943 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9d09f84
[DEBUG] 2020-12-16 11:31:51.944 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@efb6a0f
[DEBUG] 2020-12-16 11:31:51.944 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@efb6a0f
[DEBUG] 2020-12-16 11:31:51.946 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@efb6a0f
[DEBUG] 2020-12-16 11:31:51.950 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a9618a4
[DEBUG] 2020-12-16 11:31:51.951 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a9618a4
[DEBUG] 2020-12-16 11:31:51.952 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5576ddfe
[DEBUG] 2020-12-16 11:31:51.952 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5576ddfe
[DEBUG] 2020-12-16 11:31:51.952 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@706a11d3
[DEBUG] 2020-12-16 11:31:51.952 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@706a11d3
[DEBUG] 2020-12-16 11:31:51.953 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f48454d
[DEBUG] 2020-12-16 11:31:51.953 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@626df890
[DEBUG] 2020-12-16 11:31:51.954 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@47864321
[DEBUG] 2020-12-16 11:31:51.955 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47864321
[DEBUG] 2020-12-16 11:31:51.956 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@48d680fc
[DEBUG] 2020-12-16 11:31:51.956 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@48d680fc
[DEBUG] 2020-12-16 11:31:51.964 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4dbaf4bb
[DEBUG] 2020-12-16 11:31:51.965 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4dbaf4bb
[DEBUG] 2020-12-16 11:31:51.969 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@378bd9b1
[DEBUG] 2020-12-16 11:31:51.975 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@378bd9b1
[DEBUG] 2020-12-16 11:31:51.977 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@28f35eb7
[DEBUG] 2020-12-16 11:31:51.978 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@28f35eb7
[DEBUG] 2020-12-16 11:31:51.982 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@e49d4d0
[DEBUG] 2020-12-16 11:31:51.982 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@e49d4d0
[DEBUG] 2020-12-16 11:31:51.988 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@79ad3128
[DEBUG] 2020-12-16 11:31:51.988 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@79ad3128
[DEBUG] 2020-12-16 11:31:51.994 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6e39b96b
[DEBUG] 2020-12-16 11:31:51.994 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6e39b96b
[DEBUG] 2020-12-16 11:31:51.999 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@39ee5763
[DEBUG] 2020-12-16 11:31:51.999 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@39ee5763
[DEBUG] 2020-12-16 11:31:52.002 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3df93e4f
[DEBUG] 2020-12-16 11:31:52.002 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3df93e4f
[DEBUG] 2020-12-16 11:31:52.003 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@48ce6f73
[DEBUG] 2020-12-16 11:31:52.004 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48ce6f73
[DEBUG] 2020-12-16 11:31:52.005 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2d1291e0
[DEBUG] 2020-12-16 11:31:52.005 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2d1291e0
[DEBUG] 2020-12-16 11:31:52.005 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2d1291e0
[DEBUG] 2020-12-16 11:31:52.006 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e022c38
[DEBUG] 2020-12-16 11:31:52.007 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1a1df97b
[DEBUG] 2020-12-16 11:31:52.007 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a1df97b
[DEBUG] 2020-12-16 11:31:52.007 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a1df97b
[DEBUG] 2020-12-16 11:31:52.008 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53183bfe
[DEBUG] 2020-12-16 11:31:52.009 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2196c11e
[DEBUG] 2020-12-16 11:31:52.009 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2196c11e
[DEBUG] 2020-12-16 11:31:52.018 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@25ac97f3
[DEBUG] 2020-12-16 11:31:52.019 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@25ac97f3
[DEBUG] 2020-12-16 11:31:52.019 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46adabeb
[DEBUG] 2020-12-16 11:31:52.020 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46adabeb
[DEBUG] 2020-12-16 11:31:52.021 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5311ccb3
[DEBUG] 2020-12-16 11:31:52.021 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5311ccb3
[DEBUG] 2020-12-16 11:31:52.022 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3351c8ea
[DEBUG] 2020-12-16 11:31:52.022 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3351c8ea
[DEBUG] 2020-12-16 11:31:52.022 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@322cc483
[DEBUG] 2020-12-16 11:31:52.023 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@257f243
[DEBUG] 2020-12-16 11:31:52.023 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@257f243
[DEBUG] 2020-12-16 11:31:52.024 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@257f243
[DEBUG] 2020-12-16 11:31:52.024 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@296841e9
[DEBUG] 2020-12-16 11:31:52.025 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@296841e9
[DEBUG] 2020-12-16 11:31:52.025 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@296841e9
[DEBUG] 2020-12-16 11:31:52.025 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@127b604b
[DEBUG] 2020-12-16 11:31:52.026 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1dd8d1a3
[DEBUG] 2020-12-16 11:31:52.027 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@70ac5253
[DEBUG] 2020-12-16 11:31:52.027 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@70ac5253
[DEBUG] 2020-12-16 11:31:52.028 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@70ac5253
[DEBUG] 2020-12-16 11:31:52.029 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@769743cd
[DEBUG] 2020-12-16 11:31:52.029 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@769743cd
[DEBUG] 2020-12-16 11:31:52.029 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@769743cd
[DEBUG] 2020-12-16 11:31:52.029 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7174edd8
[DEBUG] 2020-12-16 11:31:52.030 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@23a4e4a
[DEBUG] 2020-12-16 11:31:52.036 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@63c3ccab
[DEBUG] 2020-12-16 11:31:52.036 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@63c3ccab
[DEBUG] 2020-12-16 11:31:52.040 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e9f7387
[DEBUG] 2020-12-16 11:31:52.043 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@df32773
[DEBUG] 2020-12-16 11:31:52.043 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@df32773
[DEBUG] 2020-12-16 11:31:52.045 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@50aa382d
[DEBUG] 2020-12-16 11:31:52.045 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50aa382d
[DEBUG] 2020-12-16 11:31:52.046 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@15325cfe
[DEBUG] 2020-12-16 11:31:52.046 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@70efb9ae
[DEBUG] 2020-12-16 11:31:52.047 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@126f0801
[DEBUG] 2020-12-16 11:31:52.060 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3284cccd
[DEBUG] 2020-12-16 11:31:52.061 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3284cccd
[DEBUG] 2020-12-16 11:31:52.062 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a4e30d2
[DEBUG] 2020-12-16 11:31:52.062 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3102b9e7
[DEBUG] 2020-12-16 11:31:52.062 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61c544af
[DEBUG] 2020-12-16 11:31:52.062 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c0b04e4
[DEBUG] 2020-12-16 11:31:52.062 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47e86117
[DEBUG] 2020-12-16 11:31:52.070 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6381258c
[DEBUG] 2020-12-16 11:31:52.070 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28aae56f
[DEBUG] 2020-12-16 11:31:52.070 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1cb2e8ba
[DEBUG] 2020-12-16 11:31:52.145 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-16 11:31:52.147 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-16 11:31:52.151 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-16 11:31:52.152 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-16 11:31:52.160 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-16 11:31:52.162 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-16 11:31:52.162 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-16 11:31:52.164 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-16 11:31:52.165 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-16 11:31:52.166 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-16 11:31:52.167 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-16 11:31:52.169 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-16 11:31:52.173 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-16 11:31:52.177 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-16 11:31:52.189 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-12-16 11:31:52.189 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-16 11:31:52.189 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-16 11:31:52.663 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-16 11:31:53.499 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-16 11:31:53.502 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-16 11:31:53.502 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-16 11:31:53.654 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-16 11:31:53.741 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-16 11:31:53.930 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-16 11:31:54.061 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-16 11:31:54.069 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57ae5653] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c702921]
[DEBUG] 2020-12-16 11:31:54.212 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:54.265 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-16 11:31:54.282 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2020-12-16 11:31:54.286 [http-nio-8080-exec-5] EntityBinder - Bind entity BillingSystem.entity.User on table user
[DEBUG] 2020-12-16 11:31:54.347 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.368 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-16 11:31:54.370 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:id]
[DEBUG] 2020-12-16 11:31:54.373 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-16 11:31:54.375 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2020-12-16 11:31:54.383 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-16 11:31:54.384 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.385 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-12-16 11:31:54.385 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:address]
[DEBUG] 2020-12-16 11:31:54.385 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-12-16 11:31:54.385 [http-nio-8080-exec-5] PropertyBinder - Building property address
[DEBUG] 2020-12-16 11:31:54.387 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-16 11:31:54.388 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.390 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.425 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.426 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.434 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billings_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-16 11:31:54.437 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-16 11:31:54.437 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-16 11:31:54.444 [http-nio-8080-exec-5] CollectionBinder - Collection role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:54.449 [http-nio-8080-exec-5] PropertyBinder - Building property billings
[DEBUG] 2020-12-16 11:31:54.452 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.457 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-12-16 11:31:54.458 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:city]
[DEBUG] 2020-12-16 11:31:54.458 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-12-16 11:31:54.464 [http-nio-8080-exec-5] PropertyBinder - Building property city
[DEBUG] 2020-12-16 11:31:54.464 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.464 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-16 11:31:54.464 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:description]
[DEBUG] 2020-12-16 11:31:54.465 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-16 11:31:54.466 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:name]
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:password]
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2020-12-16 11:31:54.467 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.468 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-12-16 11:31:54.468 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:phone]
[DEBUG] 2020-12-16 11:31:54.468 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-12-16 11:31:54.468 [http-nio-8080-exec-5] PropertyBinder - Building property phone
[DEBUG] 2020-12-16 11:31:54.468 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-16 11:31:54.468 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.468 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] CollectionBinder - Collection role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:state]
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] PropertyBinder - Building property state
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:username]
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-16 11:31:54.469 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-12-16 11:31:54.470 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=zip_code, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.470 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-12-16 11:31:54.470 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:zipcode]
[DEBUG] 2020-12-16 11:31:54.470 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-12-16 11:31:54.470 [http-nio-8080-exec-5] PropertyBinder - Building property zipcode
[DEBUG] 2020-12-16 11:31:54.480 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Billing
[DEBUG] 2020-12-16 11:31:54.480 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-16 11:31:54.480 [http-nio-8080-exec-5] EntityBinder - Import with entity name Billing
[DEBUG] 2020-12-16 11:31:54.481 [http-nio-8080-exec-5] EntityBinder - Bind entity BillingSystem.entity.Billing on table billing
[DEBUG] 2020-12-16 11:31:54.499 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.499 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-16 11:31:54.499 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:id]
[DEBUG] 2020-12-16 11:31:54.499 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-16 11:31:54.499 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2020-12-16 11:31:54.500 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-16 11:31:54.500 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=bill_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property billAmount with lazy=false
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:billAmount]
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for billAmount
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] PropertyBinder - Building property billAmount
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=presentreading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property presentreading with lazy=false
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:presentreading]
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for presentreading
[DEBUG] 2020-12-16 11:31:54.504 [http-nio-8080-exec-5] PropertyBinder - Building property presentreading
[DEBUG] 2020-12-16 11:31:54.505 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previous_balance, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.507 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property previousBalance with lazy=false
[DEBUG] 2020-12-16 11:31:54.509 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousBalance]
[DEBUG] 2020-12-16 11:31:54.511 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for previousBalance
[DEBUG] 2020-12-16 11:31:54.511 [http-nio-8080-exec-5] PropertyBinder - Building property previousBalance
[DEBUG] 2020-12-16 11:31:54.512 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-16 11:31:54.512 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.517 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-12-16 11:31:54.527 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Role
[DEBUG] 2020-12-16 11:31:54.532 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-16 11:31:54.534 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-16 11:31:54.535 [http-nio-8080-exec-5] EntityBinder - Bind entity BillingSystem.entity.Role on table role
[DEBUG] 2020-12-16 11:31:54.535 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.535 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-16 11:31:54.535 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:id]
[DEBUG] 2020-12-16 11:31:54.535 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-16 11:31:54.535 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2020-12-16 11:31:54.536 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-16 11:31:54.536 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.536 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2020-12-16 11:31:54.536 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:role]
[DEBUG] 2020-12-16 11:31:54.540 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2020-12-16 11:31:54.541 [http-nio-8080-exec-5] PropertyBinder - Building property role
[DEBUG] 2020-12-16 11:31:54.543 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-16 11:31:54.543 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.544 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-12-16 11:31:54.544 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-16 11:31:54.544 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-16 11:31:54.544 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:username]
[DEBUG] 2020-12-16 11:31:54.544 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-16 11:31:54.544 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-12-16 11:31:54.548 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-16 11:31:54.549 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-12-16 11:31:54.549 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-12-16 11:31:54.549 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-16 11:31:54.549 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-12-16 11:31:54.549 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-16 11:31:54.549 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-12-16 11:31:54.550 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for state
[DEBUG] 2020-12-16 11:31:54.550 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for billAmount
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for presentreading
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for previousBalance
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2020-12-16 11:31:54.560 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-16 11:31:54.573 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-16 11:31:54.573 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [billing]
[DEBUG] 2020-12-16 11:31:54.573 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-16 11:31:54.573 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:54.579 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.billings through a foreign key
[DEBUG] 2020-12-16 11:31:54.580 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: BillingSystem.entity.User.billings -> billing
[DEBUG] 2020-12-16 11:31:54.586 [http-nio-8080-exec-5] TableBinder - Retrieving property BillingSystem.entity.Billing.user
[DEBUG] 2020-12-16 11:31:54.586 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_id, one-to-many: BillingSystem.entity.Billing
[DEBUG] 2020-12-16 11:31:54.586 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:54.586 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.roles through a foreign key
[DEBUG] 2020-12-16 11:31:54.586 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: BillingSystem.entity.User.roles -> role
[DEBUG] 2020-12-16 11:31:54.587 [http-nio-8080-exec-5] TableBinder - Retrieving property BillingSystem.entity.Role.role
[DEBUG] 2020-12-16 11:31:54.587 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: role, one-to-many: BillingSystem.entity.Role
[DEBUG] 2020-12-16 11:31:54.587 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:54.588 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:54.588 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:54.593 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:54.593 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:54.593 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:54.663 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2020-12-16 11:31:54.664 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2020-12-16 11:31:54.664 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-12-16 11:31:54.664 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2020-12-16 11:31:54.665 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-12-16 11:31:54.668 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2020-12-16 11:31:54.673 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-12-16 11:31:54.674 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-12-16 11:31:54.674 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2020-12-16 11:31:54.674 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-12-16 11:31:54.674 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2020-12-16 11:31:54.674 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2020-12-16 11:31:54.829 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-12-16 11:31:54.911 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-12-16 11:31:54.914 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-11-04, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.9.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-58-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2df8c245, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-12-16 11:31:55.009 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-16 11:31:55.015 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:55.096 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-16 11:31:55.096 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-16 11:31:55.098 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-16 11:31:55.098 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-16 11:31:55.109 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-12-16 11:31:55.115 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-12-16 11:31:55.115 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57ae5653] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@79b99dba]
[DEBUG] 2020-12-16 11:31:55.306 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-16 11:31:55.308 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:55.411 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-16 11:31:55.411 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:56.131 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-16 11:31:56.131 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-16 11:31:56.132 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-16 11:31:56.132 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-16 11:31:56.207 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-16 11:31:56.208 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-16 11:31:56.209 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-16 11:31:56.209 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-16 11:31:56.293 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:56.294 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update role set role=? where id=?
[DEBUG] 2020-12-16 11:31:56.295 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-12-16 11:31:56.295 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update role set role=null where role=? and id=?
[DEBUG] 2020-12-16 11:31:56.295 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update role set role=null where role=?
[DEBUG] 2020-12-16 11:31:56.298 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:56.299 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update billing set user_id=? where id=?
[DEBUG] 2020-12-16 11:31:56.300 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update billing set  where id=?
[DEBUG] 2020-12-16 11:31:56.300 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update billing set user_id=null where user_id=? and id=?
[DEBUG] 2020-12-16 11:31:56.302 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update billing set user_id=null where user_id=?
[DEBUG] 2020-12-16 11:31:56.313 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.User
[DEBUG] 2020-12-16 11:31:56.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-12-16 11:31:56.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_2_, user_.city as city3_2_, user_.description as descript4_2_, user_.name as name5_2_, user_.password as password6_2_, user_.phone as phone7_2_, user_.state as state8_2_, user_.username as username9_2_, user_.zip_code as zip_cod10_2_ from user user_ where user_.id=?
[DEBUG] 2020-12-16 11:31:56.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into user (address, city, description, name, password, phone, state, username, zip_code, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-16 11:31:56.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update user set address=?, city=?, description=?, name=?, password=?, phone=?, state=?, username=?, zip_code=? where id=?
[DEBUG] 2020-12-16 11:31:56.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-12-16 11:31:56.313 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into user (address, city, description, name, password, phone, state, username, zip_code) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-16 11:31:56.428 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d231e94]
[DEBUG] 2020-12-16 11:31:56.437 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-16 11:31:56.437 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-16 11:31:56.462 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a434f12]
[DEBUG] 2020-12-16 11:31:56.473 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf1c85c]
[DEBUG] 2020-12-16 11:31:56.475 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-16 11:31:56.475 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-16 11:31:56.475 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-16 11:31:56.478 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-16 11:31:56.479 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-16 11:31:56.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-16 11:31:56.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-16 11:31:56.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-16 11:31:56.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-16 11:31:56.484 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-16 11:31:56.486 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-16 11:31:56.486 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c0ef400]
[DEBUG] 2020-12-16 11:31:56.486 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28364e60]
[DEBUG] 2020-12-16 11:31:56.486 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-16 11:31:56.486 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-16 11:31:56.486 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5546b272]
[DEBUG] 2020-12-16 11:31:56.487 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-16 11:31:56.487 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-16 11:31:56.487 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-16 11:31:56.487 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-16 11:31:56.488 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-16 11:31:56.489 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.544 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.605 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-16 11:31:56.610 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id5_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.presentreading as presentr3_0_2_, billings1_.previous_balance as previous4_0_2_, billings1_.user_id as user_id5_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-16 11:31:56.610 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c27d05]
[DEBUG] 2020-12-16 11:31:56.610 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-16 11:31:56.610 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-16 11:31:56.610 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e52781f]
[DEBUG] 2020-12-16 11:31:56.610 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9cab27]
[DEBUG] 2020-12-16 11:31:56.613 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27a42f2f]
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@397f7d6f]
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f8873f]
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-16 11:31:56.614 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-16 11:31:56.615 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-16 11:31:56.615 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-16 11:31:56.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-16 11:31:56.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-16 11:31:56.623 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-16 11:31:56.623 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-16 11:31:56.623 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-16 11:31:56.623 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-16 11:31:56.623 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-16 11:31:56.623 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.623 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.626 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-16 11:31:56.626 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.User [READ]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id5_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.presentreading as presentr3_0_2_, billings1_.previous_balance as previous4_0_2_, billings1_.user_id as user_id5_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.description as descript4_2_1_, user0_.name as name5_2_1_, user0_.password as password6_2_1_, user0_.phone as phone7_2_1_, user0_.state as state8_2_1_, user0_.username as username9_2_1_, user0_.zip_code as zip_cod10_2_1_, billings1_.user_id as user_id5_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.presentreading as presentr3_0_0_, billings1_.previous_balance as previous4_0_0_, billings1_.user_id as user_id5_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.description as descript4_2_1_, user0_.name as name5_2_1_, user0_.password as password6_2_1_, user0_.phone as phone7_2_1_, user0_.state as state8_2_1_, user0_.username as username9_2_1_, user0_.zip_code as zip_cod10_2_1_, billings1_.user_id as user_id5_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.presentreading as presentr3_0_0_, billings1_.previous_balance as previous4_0_0_, billings1_.user_id as user_id5_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Role
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role as role2_1_, role_.user_id as user_id4_1_, role_.username as username3_1_ from role role_ where role_.id=?
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into role (role, user_id, username, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update role set role=?, user_id=?, username=? where id=?
[DEBUG] 2020-12-16 11:31:56.679 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into role (role, user_id, username) values (?, ?, ?)
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12c6ed41]
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7357a28e]
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70c78d55]
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@355870de]
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-16 11:31:56.680 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@142bd9fc]
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62039527]
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-16 11:31:56.681 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-16 11:31:56.682 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-16 11:31:56.682 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-16 11:31:56.682 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-16 11:31:56.682 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-16 11:31:56.688 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-16 11:31:56.689 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-16 11:31:56.689 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.689 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.697 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, billings2_.user_id as user_id5_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.presentreading as presentr3_0_3_, billings2_.previous_balance as previous4_0_3_, billings2_.user_id as user_id5_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7681ea11]
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6455dcf2]
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58157255]
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ffd1db7]
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-16 11:31:56.698 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9abf05e]
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e2c5479]
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.699 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.700 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id5_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-16 11:31:56.708 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, billings2_.user_id as user_id5_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.presentreading as presentr3_0_3_, billings2_.previous_balance as previous4_0_3_, billings2_.user_id as user_id5_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-16 11:31:56.708 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-16 11:31:56.709 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-16 11:31:56.711 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Billing
[DEBUG] 2020-12-16 11:31:56.711 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from billing where id =?
[DEBUG] 2020-12-16 11:31:56.711 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select billing_.id, billing_.bill_amt as bill_amt2_0_, billing_.presentreading as presentr3_0_, billing_.previous_balance as previous4_0_, billing_.user_id as user_id5_0_ from billing billing_ where billing_.id=?
[DEBUG] 2020-12-16 11:31:56.711 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into billing (bill_amt, presentreading, previous_balance, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2020-12-16 11:31:56.711 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update billing set bill_amt=?, presentreading=?, previous_balance=?, user_id=? where id=?
[DEBUG] 2020-12-16 11:31:56.711 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from billing where id=?
[DEBUG] 2020-12-16 11:31:56.711 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into billing (bill_amt, presentreading, previous_balance, user_id) values (?, ?, ?, ?)
[DEBUG] 2020-12-16 11:31:56.712 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e769d9]
[DEBUG] 2020-12-16 11:31:56.712 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-16 11:31:56.714 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eafb06d]
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-16 11:31:56.715 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21b65fba]
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bacab7c]
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-16 11:31:56.716 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e6eb823]
[DEBUG] 2020-12-16 11:31:56.720 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-16 11:31:56.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-16 11:31:56.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-16 11:31:56.725 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-16 11:31:56.725 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.725 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Billing [NONE]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.presentreading as presentr3_0_0_, billing0_.previous_balance as previous4_0_0_, billing0_.user_id as user_id5_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d715d9]
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c56a5dc]
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f031131]
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a4902d]
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c65b3d]
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-16 11:31:56.727 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.728 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.738 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-16 11:31:56.738 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Billing [READ]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.presentreading as presentr3_0_0_, billing0_.previous_balance as previous4_0_0_, billing0_.user_id as user_id5_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-16 11:31:56.738 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.presentreading as presentr3_0_0_, billing0_.previous_balance as previous4_0_0_, billing0_.user_id as user_id5_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-16 11:31:56.738 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.presentreading as presentr3_0_0_, billing0_.previous_balance as previous4_0_0_, billing0_.user_id as user_id5_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-16 11:31:56.761 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77b6b69f]
[DEBUG] 2020-12-16 11:31:56.761 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d17c34b]
[DEBUG] 2020-12-16 11:31:56.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-16 11:31:56.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-16 11:31:56.761 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a7a2847]
[DEBUG] 2020-12-16 11:31:56.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-16 11:31:56.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-16 11:31:56.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3074134b]
[DEBUG] 2020-12-16 11:31:56.763 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bb96c2b]
[DEBUG] 2020-12-16 11:31:56.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-16 11:31:56.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-16 11:31:56.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-16 11:31:56.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-16 11:31:56.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-16 11:31:56.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-16 11:31:56.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-16 11:31:56.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-16 11:31:56.764 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-16 11:31:56.767 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-16 11:31:56.769 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-16 11:31:56.772 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.780 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.788 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.roles].<elements>)
             - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:2>, path=[BillingSystem.entity.User.roles].<elements>.user)
                - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:3>, path=[BillingSystem.entity.User.roles].<elements>.user.billings)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:4>, path=[BillingSystem.entity.User.roles].<elements>.user.billings.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {role2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.User)
                      - SQL table alias mapping - user1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] CollectionLoader - Static select for collection BillingSystem.entity.User.roles: select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b555543]
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f14b16d]
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-16 11:31:56.789 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-16 11:31:56.790 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.billings)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.billings])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.billings].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.billings)
          - SQL table alias mapping - billings0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Billing)
                - SQL table alias mapping - billings0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-12-16 11:31:56.791 [http-nio-8080-exec-5] CollectionLoader - Static select for collection BillingSystem.entity.User.billings: select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:56.946 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-12-16 11:31:56.947 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-12-16 11:31:56.948 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-12-16 11:31:56.982 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-12-16 11:31:56.982 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-12-16 11:31:56.989 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-12-16 11:31:56.989 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-12-16 11:31:56.992 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@563ff7d1
[DEBUG] 2020-12-16 11:31:57.011 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 40adc432-bcce-4755-886b-c7d0bf247671 (<unnamed>)
[DEBUG] 2020-12-16 11:31:57.011 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-12-16 11:31:57.303 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-12-16 11:31:57.420 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-12-16 11:31:57.499 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@59037b5b
[DEBUG] 2020-12-16 11:31:57.664 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-16 11:31:57.682 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-16 11:31:57.728 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'BillingSystem'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-12-16 11:31:57.845 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-16 11:31:57.964 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : BillingSystem.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-16 11:31:57.965 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-16 11:31:57.978 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-16 11:31:57.978 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-12-16 11:31:58.033 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-16 11:31:58.034 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-16 11:31:58.034 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=BillingSystem.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=BillingSystem.entity.User}}

[DEBUG] 2020-12-16 11:31:58.034 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-16 11:31:58.078 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-16 11:31:58.078 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_ from user user0_
[DEBUG] 2020-12-16 11:31:58.078 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-16 11:31:58.171 [http-nio-8080-exec-5] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_ from user user0_
[DEBUG] 2020-12-16 11:31:58.260 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-12-16 11:31:58.266 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#1]
[DEBUG] 2020-12-16 11:31:58.321 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2020-12-16 11:31:58.321 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#2]
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#3]
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result set row: 3
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#5]
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result set row: 4
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#6]
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result set row: 5
[DEBUG] 2020-12-16 11:31:58.322 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#806]
[DEBUG] 2020-12-16 11:31:58.324 [http-nio-8080-exec-5] Loader - Result set row: 6
[DEBUG] 2020-12-16 11:31:58.324 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#808]
[DEBUG] 2020-12-16 11:31:58.332 [http-nio-8080-exec-5] Loader - Result set row: 7
[DEBUG] 2020-12-16 11:31:58.332 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#809]
[DEBUG] 2020-12-16 11:31:58.332 [http-nio-8080-exec-5] Loader - Result set row: 8
[DEBUG] 2020-12-16 11:31:58.332 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#810]
[DEBUG] 2020-12-16 11:31:58.332 [http-nio-8080-exec-5] Loader - Result set row: 9
[DEBUG] 2020-12-16 11:31:58.332 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#811]
[DEBUG] 2020-12-16 11:31:58.349 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-12-16 11:31:58.349 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-16 11:31:58.350 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.352 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.352 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret1
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-12-16 11:31:58.392 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.393 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.393 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.394 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.394 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.395 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = JCoyne
[DEBUG] 2020-12-16 11:31:58.395 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.395 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-16 11:31:58.395 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Fred Hanson
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret2
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = FHanson
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#3]
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Barney Curry
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret3
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 608625444
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.398 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.412 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = BCurry
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#3]
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#5]
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Dianne Klein
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret5
[DEBUG] 2020-12-16 11:31:58.414 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086252662
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = Dklein
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#5]
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#6]
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Sun Prairie
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret6
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086257722
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = DTilman
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#6]
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#806]
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 456 Street st
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = customer
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Guru Katuwal
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086925566
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.415 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = gkatuwal
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#806]
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#808]
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Nirmala Katuwal 
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = katuwal
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-16 11:31:58.424 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = nkatuwal
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#808]
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#809]
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 555 st st
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Rabina Dangol
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = password
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = rdangol
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#809]
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#810]
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 786 kurkuntar
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = ktm
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = customer
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.425 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Madan katuwal
[DEBUG] 2020-12-16 11:31:58.434 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.434 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = katuwal
[DEBUG] 2020-12-16 11:31:58.434 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 985246565
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = Nepal
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = mkatuwal
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 5687
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#810]
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#811]
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 987 madison st
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = mad
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Kevin Durrant
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = kevin
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-16 11:31:58.435 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.436 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = wi
[DEBUG] 2020-12-16 11:31:58.436 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.436 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = kDurrant
[DEBUG] 2020-12-16 11:31:58.436 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.436 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 56871
[DEBUG] 2020-12-16 11:31:58.436 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.436 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#811]
[DEBUG] 2020-12-16 11:31:58.447 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#811]
[DEBUG] 2020-12-16 11:31:58.450 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.461 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#811]
[DEBUG] 2020-12-16 11:31:58.494 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.494 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#811]
[DEBUG] 2020-12-16 11:31:58.494 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.494 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.494 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.494 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#811]
[DEBUG] 2020-12-16 11:31:58.494 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#811]
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#811]
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#810]
[DEBUG] 2020-12-16 11:31:58.496 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.509 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#810]
[DEBUG] 2020-12-16 11:31:58.509 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.509 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#810]
[DEBUG] 2020-12-16 11:31:58.509 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.510 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.510 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.510 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#810]
[DEBUG] 2020-12-16 11:31:58.510 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#810]
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#810]
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#809]
[DEBUG] 2020-12-16 11:31:58.512 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.516 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#809]
[DEBUG] 2020-12-16 11:31:58.521 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.521 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#809]
[DEBUG] 2020-12-16 11:31:58.521 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.522 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.522 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.522 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#809]
[DEBUG] 2020-12-16 11:31:58.522 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.528 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#809]
[DEBUG] 2020-12-16 11:31:58.528 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.528 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#809]
[DEBUG] 2020-12-16 11:31:58.528 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.528 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.529 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.529 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#808]
[DEBUG] 2020-12-16 11:31:58.529 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.535 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#808]
[DEBUG] 2020-12-16 11:31:58.536 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.536 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#808]
[DEBUG] 2020-12-16 11:31:58.536 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.536 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.537 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.537 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#808]
[DEBUG] 2020-12-16 11:31:58.537 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#808]
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#808]
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-16 11:31:58.545 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.555 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-16 11:31:58.555 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.555 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-16 11:31:58.557 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.557 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.557 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.560 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-16 11:31:58.560 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.570 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-16 11:31:58.570 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.570 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-16 11:31:58.570 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.571 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.571 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.571 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-16 11:31:58.571 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.572 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-16 11:31:58.575 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.575 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-16 11:31:58.575 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.575 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.575 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.575 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-16 11:31:58.575 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.584 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-16 11:31:58.584 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-16 11:31:58.607 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-16 11:31:58.633 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#450]
[DEBUG] 2020-12-16 11:31:58.633 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billAmount` : value = 500.0
[DEBUG] 2020-12-16 11:31:58.633 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.633 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `presentreading` : value = 200.0
[DEBUG] 2020-12-16 11:31:58.633 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.633 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `previousBalance` : value = 100.0
[DEBUG] 2020-12-16 11:31:58.635 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.636 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 6
[DEBUG] 2020-12-16 11:31:58.636 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.636 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#450]
[DEBUG] 2020-12-16 11:31:58.636 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.636 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-16 11:31:58.636 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.636 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.637 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.637 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-16 11:31:58.637 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-16 11:31:58.641 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.648 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-16 11:31:58.648 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-16 11:31:58.648 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#449]
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billAmount` : value = 175.0
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `presentreading` : value = 100.0
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `previousBalance` : value = 75.0
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#449]
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-16 11:31:58.649 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.660 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-16 11:31:58.673 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.673 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-16 11:31:58.673 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.673 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.674 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.674 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-16 11:31:58.674 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.688 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-16 11:31:58.688 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#447]
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billAmount` : value = 200.0
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `presentreading` : value = 50.0
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `previousBalance` : value = 150.0
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#447]
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-16 11:31:58.692 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.694 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-16 11:31:58.694 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.695 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-16 11:31:58.696 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.696 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.696 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.696 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-16 11:31:58.696 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.700 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-16 11:31:58.700 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-16 11:31:58.704 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#446]
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billAmount` : value = 100.0
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `presentreading` : value = 75.0
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `previousBalance` : value = 50.0
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2020-12-16 11:31:58.707 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#446]
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-16 11:31:58.714 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-16 11:31:58.720 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id5_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.presentreading as presentr3_0_1_, billings0_.previous_balance as previous4_0_1_, billings0_.user_id as user_id5_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-16 11:31:58.724 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-16 11:31:58.727 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#445]
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billAmount` : value = 140.0
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `presentreading` : value = 100.0
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `previousBalance` : value = 20.0
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#445]
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-16 11:31:58.729 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-16 11:31:58.731 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
