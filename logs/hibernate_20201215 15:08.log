[DEBUG] 2020-12-15 15:07:31.281 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-15 15:07:31.289 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-15 15:07:31.310 [http-nio-8080-exec-2] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-15 15:07:31.758 [http-nio-8080-exec-2] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-15 15:07:31.763 [http-nio-8080-exec-2] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-15 15:07:32.341 [http-nio-8080-exec-2] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-15 15:07:32.342 [http-nio-8080-exec-2] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-15 15:07:32.408 [http-nio-8080-exec-2] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-15 15:07:33.918 [http-nio-8080-exec-2] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-15 15:07:33.966 [http-nio-8080-exec-2] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-15 15:07:33.969 [http-nio-8080-exec-2] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-15 15:07:34.043 [http-nio-8080-exec-2] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-15 15:07:34.323 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7469d392
[DEBUG] 2020-12-15 15:07:34.323 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7469d392
[DEBUG] 2020-12-15 15:07:34.323 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7469d392
[DEBUG] 2020-12-15 15:07:34.325 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f49d801
[DEBUG] 2020-12-15 15:07:34.326 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6578717
[DEBUG] 2020-12-15 15:07:34.326 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@15ca6dbf
[DEBUG] 2020-12-15 15:07:34.328 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@57e1c908
[DEBUG] 2020-12-15 15:07:34.331 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@57e1c908
[DEBUG] 2020-12-15 15:07:34.331 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57e1c908
[DEBUG] 2020-12-15 15:07:34.340 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@629ac4aa
[DEBUG] 2020-12-15 15:07:34.341 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@629ac4aa
[DEBUG] 2020-12-15 15:07:34.342 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@629ac4aa
[DEBUG] 2020-12-15 15:07:34.343 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f67aaa8
[DEBUG] 2020-12-15 15:07:34.346 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f67aaa8
[DEBUG] 2020-12-15 15:07:34.354 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f67aaa8
[DEBUG] 2020-12-15 15:07:34.360 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@15878945
[DEBUG] 2020-12-15 15:07:34.361 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@15878945
[DEBUG] 2020-12-15 15:07:34.361 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@15878945
[DEBUG] 2020-12-15 15:07:34.378 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e090467
[DEBUG] 2020-12-15 15:07:34.379 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1e090467
[DEBUG] 2020-12-15 15:07:34.381 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e090467
[DEBUG] 2020-12-15 15:07:34.394 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@54a5016a
[DEBUG] 2020-12-15 15:07:34.394 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@54a5016a
[DEBUG] 2020-12-15 15:07:34.394 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54a5016a
[DEBUG] 2020-12-15 15:07:34.399 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5b02b862
[DEBUG] 2020-12-15 15:07:34.399 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5b02b862
[DEBUG] 2020-12-15 15:07:34.401 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5b02b862
[DEBUG] 2020-12-15 15:07:34.402 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a467f91
[DEBUG] 2020-12-15 15:07:34.403 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a467f91
[DEBUG] 2020-12-15 15:07:34.408 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5eede02e
[DEBUG] 2020-12-15 15:07:34.409 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5eede02e
[DEBUG] 2020-12-15 15:07:34.422 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@38e5b86e
[DEBUG] 2020-12-15 15:07:34.422 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@38e5b86e
[DEBUG] 2020-12-15 15:07:34.423 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@75a71d9
[DEBUG] 2020-12-15 15:07:34.424 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@60c8fdfa
[DEBUG] 2020-12-15 15:07:34.426 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1665b766
[DEBUG] 2020-12-15 15:07:34.428 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1665b766
[DEBUG] 2020-12-15 15:07:34.430 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@318bf193
[DEBUG] 2020-12-15 15:07:34.432 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@318bf193
[DEBUG] 2020-12-15 15:07:34.465 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@551853f8
[DEBUG] 2020-12-15 15:07:34.470 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@551853f8
[DEBUG] 2020-12-15 15:07:34.484 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@f0fad6
[DEBUG] 2020-12-15 15:07:34.484 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@f0fad6
[DEBUG] 2020-12-15 15:07:34.493 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10f77d7b
[DEBUG] 2020-12-15 15:07:34.494 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10f77d7b
[DEBUG] 2020-12-15 15:07:34.502 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@59db1d4d
[DEBUG] 2020-12-15 15:07:34.503 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@59db1d4d
[DEBUG] 2020-12-15 15:07:34.511 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40ad94fe
[DEBUG] 2020-12-15 15:07:34.514 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40ad94fe
[DEBUG] 2020-12-15 15:07:34.521 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1a88d740
[DEBUG] 2020-12-15 15:07:34.521 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1a88d740
[DEBUG] 2020-12-15 15:07:34.538 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7f4bda40
[DEBUG] 2020-12-15 15:07:34.538 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7f4bda40
[DEBUG] 2020-12-15 15:07:34.540 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7117a6bf
[DEBUG] 2020-12-15 15:07:34.540 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7117a6bf
[DEBUG] 2020-12-15 15:07:34.541 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5ed3066a
[DEBUG] 2020-12-15 15:07:34.543 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ed3066a
[DEBUG] 2020-12-15 15:07:34.558 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c2d05e6
[DEBUG] 2020-12-15 15:07:34.558 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c2d05e6
[DEBUG] 2020-12-15 15:07:34.559 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c2d05e6
[DEBUG] 2020-12-15 15:07:34.561 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@16ac0a5
[DEBUG] 2020-12-15 15:07:34.574 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@667a8a9f
[DEBUG] 2020-12-15 15:07:34.574 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@667a8a9f
[DEBUG] 2020-12-15 15:07:34.574 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@667a8a9f
[DEBUG] 2020-12-15 15:07:34.577 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c3f51d5
[DEBUG] 2020-12-15 15:07:34.581 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6706ae05
[DEBUG] 2020-12-15 15:07:34.582 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6706ae05
[DEBUG] 2020-12-15 15:07:34.594 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3368749c
[DEBUG] 2020-12-15 15:07:34.594 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3368749c
[DEBUG] 2020-12-15 15:07:34.595 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@18965257
[DEBUG] 2020-12-15 15:07:34.596 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@18965257
[DEBUG] 2020-12-15 15:07:34.600 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@253163a5
[DEBUG] 2020-12-15 15:07:34.600 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@253163a5
[DEBUG] 2020-12-15 15:07:34.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55dec632
[DEBUG] 2020-12-15 15:07:34.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55dec632
[DEBUG] 2020-12-15 15:07:34.601 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18dd99aa
[DEBUG] 2020-12-15 15:07:34.606 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2caa5833
[DEBUG] 2020-12-15 15:07:34.606 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2caa5833
[DEBUG] 2020-12-15 15:07:34.606 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2caa5833
[DEBUG] 2020-12-15 15:07:34.607 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36bd3e9b
[DEBUG] 2020-12-15 15:07:34.607 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36bd3e9b
[DEBUG] 2020-12-15 15:07:34.607 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36bd3e9b
[DEBUG] 2020-12-15 15:07:34.611 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@ab60dd4
[DEBUG] 2020-12-15 15:07:34.611 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@39633515
[DEBUG] 2020-12-15 15:07:34.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@245e188f
[DEBUG] 2020-12-15 15:07:34.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@245e188f
[DEBUG] 2020-12-15 15:07:34.625 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@245e188f
[DEBUG] 2020-12-15 15:07:34.626 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22e88eef
[DEBUG] 2020-12-15 15:07:34.626 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22e88eef
[DEBUG] 2020-12-15 15:07:34.627 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22e88eef
[DEBUG] 2020-12-15 15:07:34.627 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@245fa84
[DEBUG] 2020-12-15 15:07:34.634 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@62a68ce3
[DEBUG] 2020-12-15 15:07:34.642 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@179588e5
[DEBUG] 2020-12-15 15:07:34.642 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@179588e5
[DEBUG] 2020-12-15 15:07:34.646 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@266efd15
[DEBUG] 2020-12-15 15:07:34.660 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3b6cd824
[DEBUG] 2020-12-15 15:07:34.660 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b6cd824
[DEBUG] 2020-12-15 15:07:34.673 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2675a109
[DEBUG] 2020-12-15 15:07:34.673 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2675a109
[DEBUG] 2020-12-15 15:07:34.676 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3266415f
[DEBUG] 2020-12-15 15:07:34.679 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7566723b
[DEBUG] 2020-12-15 15:07:34.684 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5faa3431
[DEBUG] 2020-12-15 15:07:34.716 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@509e3212
[DEBUG] 2020-12-15 15:07:34.716 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@509e3212
[DEBUG] 2020-12-15 15:07:34.718 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8bf23af
[DEBUG] 2020-12-15 15:07:34.718 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19b58ec1
[DEBUG] 2020-12-15 15:07:34.718 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61328d72
[DEBUG] 2020-12-15 15:07:34.718 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c5e228b
[DEBUG] 2020-12-15 15:07:34.719 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d8dc2f4
[DEBUG] 2020-12-15 15:07:34.724 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@87b9002
[DEBUG] 2020-12-15 15:07:34.724 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d57c562
[DEBUG] 2020-12-15 15:07:34.724 [http-nio-8080-exec-2] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4020ea39
[DEBUG] 2020-12-15 15:07:34.923 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-15 15:07:34.927 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-15 15:07:34.936 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-15 15:07:34.936 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-15 15:07:34.941 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-15 15:07:34.942 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-15 15:07:34.961 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-15 15:07:34.964 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-15 15:07:34.965 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-15 15:07:34.965 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-15 15:07:34.965 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-15 15:07:34.970 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-15 15:07:34.970 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-15 15:07:34.972 [http-nio-8080-exec-2] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-15 15:07:35.008 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-12-15 15:07:35.008 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-15 15:07:35.008 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-15 15:07:36.334 [http-nio-8080-exec-2] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-15 15:07:37.502 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-15 15:07:37.505 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-15 15:07:37.505 [http-nio-8080-exec-2] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-15 15:07:37.750 [http-nio-8080-exec-2] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-15 15:07:37.859 [http-nio-8080-exec-2] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-15 15:07:37.992 [http-nio-8080-exec-2] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-15 15:07:38.210 [http-nio-8080-exec-2] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-15 15:07:38.229 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@782a9b55] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7da4e8f]
[DEBUG] 2020-12-15 15:07:38.560 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:38.694 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-15 15:07:38.755 [http-nio-8080-exec-2] EntityBinder - Import with entity name User
[DEBUG] 2020-12-15 15:07:38.777 [http-nio-8080-exec-2] EntityBinder - Bind entity BillingSystem.entity.User on table user
[DEBUG] 2020-12-15 15:07:38.974 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.013 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-15 15:07:39.021 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:id]
[DEBUG] 2020-12-15 15:07:39.034 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-15 15:07:39.039 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-15 15:07:39.062 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-15 15:07:39.087 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.090 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-12-15 15:07:39.090 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:address]
[DEBUG] 2020-12-15 15:07:39.090 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-12-15 15:07:39.091 [http-nio-8080-exec-2] PropertyBinder - Building property address
[DEBUG] 2020-12-15 15:07:39.094 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-15 15:07:39.111 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.116 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.156 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.160 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.161 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billings_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-15 15:07:39.181 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-15 15:07:39.181 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-15 15:07:39.183 [http-nio-8080-exec-2] CollectionBinder - Collection role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:39.206 [http-nio-8080-exec-2] PropertyBinder - Building property billings
[DEBUG] 2020-12-15 15:07:39.206 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.208 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-12-15 15:07:39.208 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:city]
[DEBUG] 2020-12-15 15:07:39.208 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-12-15 15:07:39.211 [http-nio-8080-exec-2] PropertyBinder - Building property city
[DEBUG] 2020-12-15 15:07:39.211 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.211 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-15 15:07:39.211 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:description]
[DEBUG] 2020-12-15 15:07:39.211 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-15 15:07:39.216 [http-nio-8080-exec-2] PropertyBinder - Building property description
[DEBUG] 2020-12-15 15:07:39.217 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.220 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-12-15 15:07:39.221 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:name]
[DEBUG] 2020-12-15 15:07:39.221 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-12-15 15:07:39.221 [http-nio-8080-exec-2] PropertyBinder - Building property name
[DEBUG] 2020-12-15 15:07:39.225 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.225 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-15 15:07:39.225 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:password]
[DEBUG] 2020-12-15 15:07:39.225 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-15 15:07:39.225 [http-nio-8080-exec-2] PropertyBinder - Building property password
[DEBUG] 2020-12-15 15:07:39.226 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.226 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-12-15 15:07:39.227 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:phone]
[DEBUG] 2020-12-15 15:07:39.227 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-12-15 15:07:39.227 [http-nio-8080-exec-2] PropertyBinder - Building property phone
[DEBUG] 2020-12-15 15:07:39.227 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-15 15:07:39.229 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.229 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.230 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.230 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.231 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-15 15:07:39.235 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-15 15:07:39.235 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-15 15:07:39.235 [http-nio-8080-exec-2] CollectionBinder - Collection role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:39.235 [http-nio-8080-exec-2] PropertyBinder - Building property roles
[DEBUG] 2020-12-15 15:07:39.235 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.235 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-12-15 15:07:39.246 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:state]
[DEBUG] 2020-12-15 15:07:39.246 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-12-15 15:07:39.246 [http-nio-8080-exec-2] PropertyBinder - Building property state
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:username]
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] PropertyBinder - Building property username
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=zip_code, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:zipcode]
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-12-15 15:07:39.247 [http-nio-8080-exec-2] PropertyBinder - Building property zipcode
[DEBUG] 2020-12-15 15:07:39.254 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:07:39.254 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-15 15:07:39.255 [http-nio-8080-exec-2] EntityBinder - Import with entity name Billing
[DEBUG] 2020-12-15 15:07:39.255 [http-nio-8080-exec-2] EntityBinder - Bind entity BillingSystem.entity.Billing on table billing
[DEBUG] 2020-12-15 15:07:39.282 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.282 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-15 15:07:39.282 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:id]
[DEBUG] 2020-12-15 15:07:39.282 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-15 15:07:39.282 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-15 15:07:39.283 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-15 15:07:39.283 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=bill_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property billAmount with lazy=false
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:billAmount]
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for billAmount
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] PropertyBinder - Building property billAmount
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=paid_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property paidAmount with lazy=false
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paidAmount]
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for paidAmount
[DEBUG] 2020-12-15 15:07:39.285 [http-nio-8080-exec-2] PropertyBinder - Building property paidAmount
[DEBUG] 2020-12-15 15:07:39.286 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=payment_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.287 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property paymentDate with lazy=false
[DEBUG] 2020-12-15 15:07:39.287 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paymentDate]
[DEBUG] 2020-12-15 15:07:39.287 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for paymentDate
[DEBUG] 2020-12-15 15:07:39.288 [http-nio-8080-exec-2] PropertyBinder - Building property paymentDate
[DEBUG] 2020-12-15 15:07:39.288 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=presentreading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.288 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property presentreading with lazy=false
[DEBUG] 2020-12-15 15:07:39.289 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:presentreading]
[DEBUG] 2020-12-15 15:07:39.291 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for presentreading
[DEBUG] 2020-12-15 15:07:39.292 [http-nio-8080-exec-2] PropertyBinder - Building property presentreading
[DEBUG] 2020-12-15 15:07:39.293 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previous_balance, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.294 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property previousBalance with lazy=false
[DEBUG] 2020-12-15 15:07:39.294 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousBalance]
[DEBUG] 2020-12-15 15:07:39.294 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for previousBalance
[DEBUG] 2020-12-15 15:07:39.294 [http-nio-8080-exec-2] PropertyBinder - Building property previousBalance
[DEBUG] 2020-12-15 15:07:39.294 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previousreading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.295 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property previousreading with lazy=false
[DEBUG] 2020-12-15 15:07:39.295 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousreading]
[DEBUG] 2020-12-15 15:07:39.295 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for previousreading
[DEBUG] 2020-12-15 15:07:39.295 [http-nio-8080-exec-2] PropertyBinder - Building property previousreading
[DEBUG] 2020-12-15 15:07:39.307 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=readingDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.314 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property readingDate with lazy=false
[DEBUG] 2020-12-15 15:07:39.315 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:readingDate]
[DEBUG] 2020-12-15 15:07:39.315 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for readingDate
[DEBUG] 2020-12-15 15:07:39.315 [http-nio-8080-exec-2] PropertyBinder - Building property readingDate
[DEBUG] 2020-12-15 15:07:39.318 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-15 15:07:39.319 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.323 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-12-15 15:07:39.324 [http-nio-8080-exec-2] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:07:39.330 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-15 15:07:39.330 [http-nio-8080-exec-2] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-15 15:07:39.330 [http-nio-8080-exec-2] EntityBinder - Bind entity BillingSystem.entity.Role on table role
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:id]
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] PropertyBinder - Building property id
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:role]
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] PropertyBinder - Building property role
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-15 15:07:39.337 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.341 [http-nio-8080-exec-2] PropertyBinder - Building property user
[DEBUG] 2020-12-15 15:07:39.341 [http-nio-8080-exec-2] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:07:39.341 [http-nio-8080-exec-2] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-15 15:07:39.342 [http-nio-8080-exec-2] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:username]
[DEBUG] 2020-12-15 15:07:39.342 [http-nio-8080-exec-2] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-15 15:07:39.342 [http-nio-8080-exec-2] PropertyBinder - Building property username
[DEBUG] 2020-12-15 15:07:39.354 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-15 15:07:39.361 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-12-15 15:07:39.362 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-12-15 15:07:39.362 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-15 15:07:39.362 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-12-15 15:07:39.362 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-15 15:07:39.362 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-12-15 15:07:39.362 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for state
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for billAmount
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for paidAmount
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for paymentDate
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for presentreading
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for previousBalance
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for previousreading
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for readingDate
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2020-12-15 15:07:39.363 [http-nio-8080-exec-2] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-15 15:07:39.392 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-15 15:07:39.392 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [billing]
[DEBUG] 2020-12-15 15:07:39.393 [http-nio-8080-exec-2] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-15 15:07:39.395 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:39.396 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.billings through a foreign key
[DEBUG] 2020-12-15 15:07:39.401 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: BillingSystem.entity.User.billings -> billing
[DEBUG] 2020-12-15 15:07:39.405 [http-nio-8080-exec-2] TableBinder - Retrieving property BillingSystem.entity.Billing.user
[DEBUG] 2020-12-15 15:07:39.405 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: user_id, one-to-many: BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:07:39.405 [http-nio-8080-exec-2] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:39.405 [http-nio-8080-exec-2] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.roles through a foreign key
[DEBUG] 2020-12-15 15:07:39.405 [http-nio-8080-exec-2] CollectionBinder - Mapping collection: BillingSystem.entity.User.roles -> role
[DEBUG] 2020-12-15 15:07:39.406 [http-nio-8080-exec-2] TableBinder - Retrieving property BillingSystem.entity.Role.role
[DEBUG] 2020-12-15 15:07:39.406 [http-nio-8080-exec-2] CollectionSecondPass - Mapped collection key: role, one-to-many: BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:07:39.407 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:39.408 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:39.410 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:39.444 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:39.444 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:39.444 [http-nio-8080-exec-2] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:39.610 [http-nio-8080-exec-2] SessionFactoryImpl - Building session factory
[DEBUG] 2020-12-15 15:07:39.614 [http-nio-8080-exec-2] Settings - SessionFactory name : null
[DEBUG] 2020-12-15 15:07:39.614 [http-nio-8080-exec-2] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-12-15 15:07:39.614 [http-nio-8080-exec-2] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-12-15 15:07:39.614 [http-nio-8080-exec-2] Settings - Statistics: disabled
[DEBUG] 2020-12-15 15:07:39.614 [http-nio-8080-exec-2] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-12-15 15:07:39.614 [http-nio-8080-exec-2] Settings - Default entity-mode: pojo
[DEBUG] 2020-12-15 15:07:39.614 [http-nio-8080-exec-2] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-12-15 15:07:39.615 [http-nio-8080-exec-2] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-12-15 15:07:39.615 [http-nio-8080-exec-2] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-12-15 15:07:39.615 [http-nio-8080-exec-2] Settings - Default batch fetch size: -1
[DEBUG] 2020-12-15 15:07:39.615 [http-nio-8080-exec-2] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-12-15 15:07:39.615 [http-nio-8080-exec-2] Settings - Default null ordering: NONE
[DEBUG] 2020-12-15 15:07:39.615 [http-nio-8080-exec-2] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-12-15 15:07:39.615 [http-nio-8080-exec-2] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Query language substitutions: {}
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Named query checking : enabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Second-level cache: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Second-level query cache: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Second-level query cache factory: null
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Second-level cache region prefix: null
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - JDBC batch size: 15
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Scrollable result sets: enabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Wrap result sets: disabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - JDBC result set fetch size: null
[DEBUG] 2020-12-15 15:07:39.617 [http-nio-8080-exec-2] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-12-15 15:07:39.618 [http-nio-8080-exec-2] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-12-15 15:07:39.618 [http-nio-8080-exec-2] Settings - JPA compliance - query : 
[DEBUG] 2020-12-15 15:07:39.618 [http-nio-8080-exec-2] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-12-15 15:07:39.618 [http-nio-8080-exec-2] Settings - JPA compliance - lists : 
[DEBUG] 2020-12-15 15:07:39.618 [http-nio-8080-exec-2] Settings - JPA compliance - transactions : 
[INFO ] 2020-12-15 15:07:39.969 [http-nio-8080-exec-2] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-12-15 15:07:40.115 [http-nio-8080-exec-2] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-12-15 15:07:40.117 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-11-04, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.9.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-58-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@14a48bd2, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-12-15 15:07:40.252 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-15 15:07:40.252 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:40.368 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-15 15:07:40.370 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:07:40.378 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-15 15:07:40.379 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:07:40.411 [http-nio-8080-exec-2] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-12-15 15:07:40.430 [http-nio-8080-exec-2] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-12-15 15:07:40.430 [http-nio-8080-exec-2] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@782a9b55] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a446ded]
[DEBUG] 2020-12-15 15:07:40.619 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-15 15:07:40.621 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:40.773 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-15 15:07:40.773 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:42.137 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-15 15:07:42.138 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:07:42.139 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-15 15:07:42.139 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:07:42.201 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-15 15:07:42.201 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:07:42.206 [http-nio-8080-exec-2] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-15 15:07:42.206 [http-nio-8080-exec-2] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:07:42.375 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:42.380 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update role set role=? where id=?
[DEBUG] 2020-12-15 15:07:42.380 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-12-15 15:07:42.380 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update role set role=null where role=? and id=?
[DEBUG] 2020-12-15 15:07:42.380 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update role set role=null where role=?
[DEBUG] 2020-12-15 15:07:42.380 [http-nio-8080-exec-2] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:42.381 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row insert: update billing set user_id=? where id=?
[DEBUG] 2020-12-15 15:07:42.383 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row update: update billing set  where id=?
[DEBUG] 2020-12-15 15:07:42.383 [http-nio-8080-exec-2] AbstractCollectionPersister -  Row delete: update billing set user_id=null where user_id=? and id=?
[DEBUG] 2020-12-15 15:07:42.383 [http-nio-8080-exec-2] AbstractCollectionPersister -  One-shot delete: update billing set user_id=null where user_id=?
[DEBUG] 2020-12-15 15:07:42.404 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:07:42.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-12-15 15:07:42.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_2_, user_.city as city3_2_, user_.description as descript4_2_, user_.name as name5_2_, user_.password as password6_2_, user_.phone as phone7_2_, user_.state as state8_2_, user_.username as username9_2_, user_.zip_code as zip_cod10_2_ from user user_ where user_.id=?
[DEBUG] 2020-12-15 15:07:42.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into user (address, city, description, name, password, phone, state, username, zip_code, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:07:42.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update user set address=?, city=?, description=?, name=?, password=?, phone=?, state=?, username=?, zip_code=? where id=?
[DEBUG] 2020-12-15 15:07:42.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-12-15 15:07:42.404 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into user (address, city, description, name, password, phone, state, username, zip_code) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:07:42.545 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dc9e742]
[DEBUG] 2020-12-15 15:07:42.551 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-15 15:07:42.551 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-15 15:07:42.586 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@232da6f1]
[DEBUG] 2020-12-15 15:07:42.612 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78406e8]
[DEBUG] 2020-12-15 15:07:42.620 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-15 15:07:42.621 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-12-15 15:07:42.621 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-12-15 15:07:42.621 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-15 15:07:42.621 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-15 15:07:42.621 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.previousreading
[DEBUG] 2020-12-15 15:07:42.621 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-12-15 15:07:42.621 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-15 15:07:42.623 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-15 15:07:42.625 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-15 15:07:42.625 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-15 15:07:42.625 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-15 15:07:42.625 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-15 15:07:42.625 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-15 15:07:42.625 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-15 15:07:42.625 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@197532be]
[DEBUG] 2020-12-15 15:07:42.627 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e1b33bc]
[DEBUG] 2020-12-15 15:07:42.627 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-15 15:07:42.627 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-15 15:07:42.627 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36da51f1]
[DEBUG] 2020-12-15 15:07:42.628 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-15 15:07:42.628 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-15 15:07:42.628 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-15 15:07:42.628 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-15 15:07:42.629 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.710 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.769 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-15 15:07:42.781 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:07:42.782 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cdc949c]
[DEBUG] 2020-12-15 15:07:42.784 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-15 15:07:42.785 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-15 15:07:42.785 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66e3e456]
[DEBUG] 2020-12-15 15:07:42.785 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e334390]
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.previousreading
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b4eed0a]
[DEBUG] 2020-12-15 15:07:42.786 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc50e30]
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e404a47]
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-15 15:07:42.787 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.788 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.788 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-15 15:07:42.789 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.User [READ]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:07:42.827 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.description as descript4_2_1_, user0_.name as name5_2_1_, user0_.password as password6_2_1_, user0_.phone as phone7_2_1_, user0_.state as state8_2_1_, user0_.username as username9_2_1_, user0_.zip_code as zip_cod10_2_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.presentreading as presentr5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.previousreading as previous7_0_0_, billings1_.readingDate as readingD8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-15 15:07:42.828 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.description as descript4_2_1_, user0_.name as name5_2_1_, user0_.password as password6_2_1_, user0_.phone as phone7_2_1_, user0_.state as state8_2_1_, user0_.username as username9_2_1_, user0_.zip_code as zip_cod10_2_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.presentreading as presentr5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.previousreading as previous7_0_0_, billings1_.readingDate as readingD8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-15 15:07:42.834 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:07:42.835 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role as role2_1_, role_.user_id as user_id4_1_, role_.username as username3_1_ from role role_ where role_.id=?
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into role (role, user_id, username, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update role set role=?, user_id=?, username=? where id=?
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into role (role, user_id, username) values (?, ?, ?)
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29e18b5d]
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-15 15:07:42.836 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:07:42.837 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79cc5677]
[DEBUG] 2020-12-15 15:07:42.837 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:07:42.837 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:07:42.837 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a520a52]
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43d51e8d]
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.paidAmount
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.paymentDate
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.previousreading
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.readingDate
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:07:42.838 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b42dbf1]
[DEBUG] 2020-12-15 15:07:42.839 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60088d62]
[DEBUG] 2020-12-15 15:07:42.839 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:07:42.839 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:07:42.845 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-15 15:07:42.848 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:07:42.848 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:07:42.848 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:07:42.848 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:07:42.848 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:07:42.848 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.848 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.855 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-15 15:07:42.855 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, billings2_.user_id as user_id9_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.paid_amt as paid_amt3_0_3_, billings2_.payment_date as payment_4_0_3_, billings2_.presentreading as presentr5_0_3_, billings2_.previous_balance as previous6_0_3_, billings2_.previousreading as previous7_0_3_, billings2_.readingDate as readingD8_0_3_, billings2_.user_id as user_id9_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-15 15:07:42.857 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a156b21]
[DEBUG] 2020-12-15 15:07:42.858 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-15 15:07:42.858 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:07:42.858 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d601c00]
[DEBUG] 2020-12-15 15:07:42.859 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:07:42.859 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:07:42.859 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16b9855a]
[DEBUG] 2020-12-15 15:07:42.861 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cf52161]
[DEBUG] 2020-12-15 15:07:42.862 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-15 15:07:42.862 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.paidAmount
[DEBUG] 2020-12-15 15:07:42.862 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.paymentDate
[DEBUG] 2020-12-15 15:07:42.862 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-15 15:07:42.862 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-15 15:07:42.863 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.previousreading
[DEBUG] 2020-12-15 15:07:42.864 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.readingDate
[DEBUG] 2020-12-15 15:07:42.864 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-15 15:07:42.864 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-15 15:07:42.867 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:07:42.867 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:07:42.867 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:07:42.870 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:07:42.870 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:07:42.871 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:07:42.873 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69b0d742]
[DEBUG] 2020-12-15 15:07:42.873 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c6b0d3c]
[DEBUG] 2020-12-15 15:07:42.873 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:07:42.873 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:07:42.873 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-15 15:07:42.873 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:07:42.874 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:07:42.874 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:07:42.874 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:07:42.874 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:07:42.874 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.875 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.877 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-15 15:07:42.878 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, billings2_.user_id as user_id9_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.paid_amt as paid_amt3_0_3_, billings2_.payment_date as payment_4_0_3_, billings2_.presentreading as presentr5_0_3_, billings2_.previous_balance as previous6_0_3_, billings2_.previousreading as previous7_0_3_, billings2_.readingDate as readingD8_0_3_, billings2_.user_id as user_id9_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-15 15:07:42.886 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-15 15:07:42.890 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] AbstractEntityPersister -  Version select: select id from billing where id =?
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] AbstractEntityPersister -  Snapshot select: select billing_.id, billing_.bill_amt as bill_amt2_0_, billing_.paid_amt as paid_amt3_0_, billing_.payment_date as payment_4_0_, billing_.presentreading as presentr5_0_, billing_.previous_balance as previous6_0_, billing_.previousreading as previous7_0_, billing_.readingDate as readingD8_0_, billing_.user_id as user_id9_0_ from billing billing_ where billing_.id=?
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] AbstractEntityPersister -  Insert 0: insert into billing (bill_amt, paid_amt, payment_date, presentreading, previous_balance, previousreading, readingDate, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] AbstractEntityPersister -  Update 0: update billing set bill_amt=?, paid_amt=?, payment_date=?, presentreading=?, previous_balance=?, previousreading=?, readingDate=?, user_id=? where id=?
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] AbstractEntityPersister -  Delete 0: delete from billing where id=?
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] AbstractEntityPersister -  Identity insert: insert into billing (bill_amt, paid_amt, payment_date, presentreading, previous_balance, previousreading, readingDate, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e3ab1]
[DEBUG] 2020-12-15 15:07:42.891 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ba079b]
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:07:42.892 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44819b81]
[DEBUG] 2020-12-15 15:07:42.893 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a806252]
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b9cb04]
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:07:42.894 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.906 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.910 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-15 15:07:42.911 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.Billing [NONE]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-15 15:07:42.911 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba2abf3]
[DEBUG] 2020-12-15 15:07:42.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-15 15:07:42.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-15 15:07:42.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-15 15:07:42.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-15 15:07:42.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-15 15:07:42.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-15 15:07:42.912 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-15 15:07:42.913 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@678162b0]
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35cfbf1a]
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5140bb81]
[DEBUG] 2020-12-15 15:07:42.914 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d868325]
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.915 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.917 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-15 15:07:42.918 [http-nio-8080-exec-2] EntityLoader - Static select for entity BillingSystem.entity.Billing [READ]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-15 15:07:42.918 [http-nio-8080-exec-2] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-15 15:07:42.918 [http-nio-8080-exec-2] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-15 15:07:42.924 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d369816]
[DEBUG] 2020-12-15 15:07:42.924 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e82d24]
[DEBUG] 2020-12-15 15:07:42.929 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-15 15:07:42.929 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:07:42.929 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@519275f2]
[DEBUG] 2020-12-15 15:07:42.930 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:07:42.930 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:07:42.935 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ebc4784]
[DEBUG] 2020-12-15 15:07:42.936 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba2d77a]
[DEBUG] 2020-12-15 15:07:42.937 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:07:42.939 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:07:42.940 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:07:42.941 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.945 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.947 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.roles].<elements>)
             - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:2>, path=[BillingSystem.entity.User.roles].<elements>.user)
                - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:3>, path=[BillingSystem.entity.User.roles].<elements>.user.billings)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:4>, path=[BillingSystem.entity.User.roles].<elements>.user.billings.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {role2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.User)
                      - SQL table alias mapping - user1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-12-15 15:07:42.947 [http-nio-8080-exec-2] CollectionLoader - Static select for collection BillingSystem.entity.User.roles: select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:42.948 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f93e371]
[DEBUG] 2020-12-15 15:07:42.948 [http-nio-8080-exec-2] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e66678d]
[DEBUG] 2020-12-15 15:07:42.948 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-15 15:07:42.948 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-15 15:07:42.948 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-15 15:07:42.948 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-15 15:07:42.948 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-15 15:07:42.949 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-15 15:07:42.949 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-15 15:07:42.949 [http-nio-8080-exec-2] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:07:42.949 [http-nio-8080-exec-2] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-15 15:07:42.949 [http-nio-8080-exec-2] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:07:42.949 [http-nio-8080-exec-2] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:07:42.950 [http-nio-8080-exec-2] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.billings)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.billings])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.billings].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.billings)
          - SQL table alias mapping - billings0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Billing)
                - SQL table alias mapping - billings0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-12-15 15:07:42.950 [http-nio-8080-exec-2] CollectionLoader - Static select for collection BillingSystem.entity.User.billings: select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:43.204 [http-nio-8080-exec-2] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-12-15 15:07:43.204 [http-nio-8080-exec-2] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-12-15 15:07:43.206 [http-nio-8080-exec-2] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-12-15 15:07:43.249 [http-nio-8080-exec-2] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-12-15 15:07:43.250 [http-nio-8080-exec-2] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-12-15 15:07:43.251 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-12-15 15:07:43.251 [http-nio-8080-exec-2] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-12-15 15:07:43.272 [http-nio-8080-exec-2] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7ed36a66
[DEBUG] 2020-12-15 15:07:43.302 [http-nio-8080-exec-2] SessionFactoryRegistry - Registering SessionFactory: 5b25839e-b383-417a-9d48-0476e05cfea6 (<unnamed>)
[DEBUG] 2020-12-15 15:07:43.302 [http-nio-8080-exec-2] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-12-15 15:07:43.863 [http-nio-8080-exec-2] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-12-15 15:07:43.978 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-12-15 15:07:44.019 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3aa26804
[DEBUG] 2020-12-15 15:07:44.160 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-15 15:07:44.165 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-15 15:07:44.186 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'BillingSystem'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-12-15 15:07:44.236 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-15 15:07:44.331 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : BillingSystem.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-15 15:07:44.333 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-15 15:07:44.334 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-15 15:07:44.334 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-12-15 15:07:44.362 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-15 15:07:44.362 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-15 15:07:44.362 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=BillingSystem.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=BillingSystem.entity.User}}

[DEBUG] 2020-12-15 15:07:44.362 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-15 15:07:44.372 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-15 15:07:44.372 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_ from user user0_
[DEBUG] 2020-12-15 15:07:44.372 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-15 15:07:44.428 [http-nio-8080-exec-2] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_ from user user0_
[DEBUG] 2020-12-15 15:07:44.754 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2020-12-15 15:07:44.979 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:07:45.072 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2020-12-15 15:07:45.073 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:07:45.073 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2020-12-15 15:07:45.073 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:07:45.073 [http-nio-8080-exec-2] Loader - Result set row: 3
[DEBUG] 2020-12-15 15:07:45.073 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:07:45.073 [http-nio-8080-exec-2] Loader - Result set row: 4
[DEBUG] 2020-12-15 15:07:45.073 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:07:45.074 [http-nio-8080-exec-2] Loader - Result set row: 5
[DEBUG] 2020-12-15 15:07:45.074 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:07:45.074 [http-nio-8080-exec-2] Loader - Result set row: 6
[DEBUG] 2020-12-15 15:07:45.074 [http-nio-8080-exec-2] Loader - Result row: EntityKey[BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:07:45.075 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:07:45.099 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:07:45.099 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.099 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.099 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.124 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:07:45.124 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.124 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret1
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.125 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = JCoyne
[DEBUG] 2020-12-15 15:07:45.139 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.150 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:07:45.150 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.154 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.155 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Fred Hanson
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret2
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = FHanson
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Barney Curry
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret3
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 608625444
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.156 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.161 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:45.161 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.164 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = BCurry
[DEBUG] 2020-12-15 15:07:45.164 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.164 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:07:45.164 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.164 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:07:45.165 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:07:45.165 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:07:45.165 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.165 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.165 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Dianne Klein
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret5
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086252662
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = Dklein
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.167 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Sun Prairie
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.168 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret6
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086257722
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = DTilman
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:07:45.194 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.195 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:07:45.195 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:07:45.195 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 456 Street st
[DEBUG] 2020-12-15 15:07:45.195 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = customer
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Guru Katuwal
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086925566
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = gkatuwal
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = paul sean
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = PSean
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.196 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:07:45.201 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:07:45.202 [http-nio-8080-exec-2] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:45.223 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:07:45.244 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.244 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:07:45.244 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.244 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.244 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.244 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:07:45.244 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:45.249 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:07:45.251 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.251 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:07:45.251 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.251 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.251 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.251 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:07:45.252 [http-nio-8080-exec-2] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:45.259 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:07:45.259 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.259 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:07:45.259 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.259 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.259 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.259 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:07:45.261 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:45.277 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:07:45.277 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:07:45.309 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billAmount` : value = 140.0
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `paidAmount` : value = 40.0
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`paidAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `paymentDate` : value = 2020-10-10
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`paymentDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `presentreading` : value = 90.0
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `previousBalance` : value = 200.0
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `previousreading` : value = 75.0
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`previousreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `readingDate` : value = 2020-10-10
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`readingDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 806
[DEBUG] 2020-12-15 15:07:45.323 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:45.324 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-15 15:07:45.324 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.324 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:07:45.324 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.324 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.324 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.324 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:07:45.326 [http-nio-8080-exec-2] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:45.330 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:07:45.330 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.330 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:07:45.330 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.331 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.331 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.333 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:07:45.333 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:45.334 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:07:45.334 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.335 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:07:45.335 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.335 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.335 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.335 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:07:45.335 [http-nio-8080-exec-2] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:45.353 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:07:45.354 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.354 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:07:45.354 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.354 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.354 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.354 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:07:45.354 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:07:45.356 [http-nio-8080-exec-2] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:45.367 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:07:45.371 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.372 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:07:45.372 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.372 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.372 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.373 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:07:45.373 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:45.374 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:07:45.374 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.374 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:07:45.374 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.375 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.375 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.375 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:07:45.375 [http-nio-8080-exec-2] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:07:45.379 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:45.390 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:07:45.391 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.391 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:07:45.392 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.392 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.392 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.392 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:07:45.392 [http-nio-8080-exec-2] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:07:45.395 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:07:45.395 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.395 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:07:45.395 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:45.395 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.395 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.395 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:07:45.396 [http-nio-8080-exec-2] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:07:45.407 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:07:45.408 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.408 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:07:45.408 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:45.408 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:45.408 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:07:45.409 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:07:52.379 [http-nio-8080-exec-4] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:07:52.399 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:07:52.403 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.404 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `name` : value = paul sean
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `username` : value = PSean
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:07:52.406 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:52.409 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:07:52.409 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:07:52.409 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:07:52.409 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : BillingSystem.entity.User#807
[DEBUG] 2020-12-15 15:07:52.409 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:08:04.305 [http-nio-8080-exec-6] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:08:04.321 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:08:04.321 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = paul sean
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `username` : value = PSean
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-15 15:08:04.322 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:08:04.332 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:08:04.332 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:08:04.332 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:08:04.332 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:08:04.332 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:08:04.332 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:08:04.332 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:08:04.334 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:08:04.335 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : BillingSystem.entity.User#807
[DEBUG] 2020-12-15 15:08:04.335 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:08:04.418 [http-nio-8080-exec-6] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-12-15 15:08:04.422 [http-nio-8080-exec-6] TransactionImpl - begin
[DEBUG] 2020-12-15 15:08:04.474 [http-nio-8080-exec-6] TransactionImpl - committing
[DEBUG] 2020-12-15 15:08:04.485 [http-nio-8080-exec-6] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-12-15 15:08:04.486 [http-nio-8080-exec-6] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-12-15 15:08:04.535 [http-nio-8080-exec-6] Collections - Collection found: [BillingSystem.entity.User.billings#807], was: [BillingSystem.entity.User.billings#807] (initialized)
[DEBUG] 2020-12-15 15:08:04.535 [http-nio-8080-exec-6] Collections - Collection found: [BillingSystem.entity.User.roles#807], was: [BillingSystem.entity.User.roles#807] (initialized)
[DEBUG] 2020-12-15 15:08:04.535 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-12-15 15:08:04.535 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2020-12-15 15:08:04.537 [http-nio-8080-exec-6] EntityPrinter - Listing entities:
[DEBUG] 2020-12-15 15:08:04.537 [http-nio-8080-exec-6] EntityPrinter - BillingSystem.entity.User{zipcode=53719, password=null, address=666 kottke dr, city=Madison, phone=6086925862, roles=[], billings=[], name=paul sean, description=Employee, id=807, state=WI, username=null}
[DEBUG] 2020-12-15 15:08:04.603 [http-nio-8080-exec-6] SQL - update user set address=?, city=?, description=?, name=?, password=?, phone=?, state=?, username=?, zip_code=? where id=?
[DEBUG] 2020-12-15 15:08:04.696 [http-nio-8080-exec-6] SqlExceptionHelper - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Column 'password' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1094) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1042) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1345) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1027) ~[mysql-connector-java-8.0.16.jar:?]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:410) ~[c3p0-0.9.5.3.jar:0.9.5.3]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3398) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:3271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3672) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:149) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:361) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1493) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at BillingSystem.persistence.GenericDao.saveOrUpdate(GenericDao.java:79) [classes/:?]
	at BillingSystem.controller.EditUser.doPost(EditUser.java:50) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) [servlet-api.jar:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [servlet-api.jar:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-websocket.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137) [catalina.jar:8.5.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBSecurityListener$RequestCapturer.invoke(OpenEJBSecurityListener.java:97) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [catalina.jar:8.5.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [catalina.jar:8.5.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:798) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:808) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.41]
	at java.lang.Thread.run(Thread.java:834) [?:?]
[WARN ] 2020-12-15 15:08:04.747 [http-nio-8080-exec-6] SqlExceptionHelper - SQL Error: 1048, SQLState: 23000
[ERROR] 2020-12-15 15:08:04.747 [http-nio-8080-exec-6] SqlExceptionHelper - Column 'password' cannot be null
[DEBUG] 2020-12-15 15:08:04.749 [http-nio-8080-exec-6] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1499) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at BillingSystem.persistence.GenericDao.saveOrUpdate(GenericDao.java:79) [classes/:?]
	at BillingSystem.controller.EditUser.doPost(EditUser.java:50) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) [servlet-api.jar:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [servlet-api.jar:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-websocket.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137) [catalina.jar:8.5.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBSecurityListener$RequestCapturer.invoke(OpenEJBSecurityListener.java:97) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [catalina.jar:8.5.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [catalina.jar:8.5.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:798) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:808) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.41]
	at java.lang.Thread.run(Thread.java:834) [?:?]
[DEBUG] 2020-12-15 15:08:04.753 [http-nio-8080-exec-6] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at BillingSystem.persistence.GenericDao.saveOrUpdate(GenericDao.java:79) [classes/:?]
	at BillingSystem.controller.EditUser.doPost(EditUser.java:50) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) [servlet-api.jar:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [servlet-api.jar:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-websocket.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137) [catalina.jar:8.5.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBSecurityListener$RequestCapturer.invoke(OpenEJBSecurityListener.java:97) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [catalina.jar:8.5.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [catalina.jar:8.5.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:798) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:808) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.41]
	at java.lang.Thread.run(Thread.java:834) [?:?]
[DEBUG] 2020-12-15 15:08:04.756 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:08:04.756 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
