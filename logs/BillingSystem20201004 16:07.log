[DEBUG] 2020-10-04 16:07:50.546 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 16:07:50.555 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 16:07:50.576 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-10-04 16:07:50.790 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-10-04 16:07:50.795 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-10-04 16:07:51.144 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 16:07:51.144 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 16:07:51.159 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 16:07:51.717 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 16:07:51.746 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 16:07:51.751 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-10-04 16:07:51.784 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-10-04 16:07:51.845 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:51.857 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:51.857 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:51.857 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43da41e
[DEBUG] 2020-10-04 16:07:51.865 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39ad12b6
[DEBUG] 2020-10-04 16:07:51.867 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6aba5d30
[DEBUG] 2020-10-04 16:07:51.879 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:51.879 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:51.879 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:51.880 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:51.880 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:51.880 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:51.882 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:51.883 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:51.883 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:51.893 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:51.893 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:51.893 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:51.894 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:51.905 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:51.906 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:51.907 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:51.907 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:51.908 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:51.917 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:51.917 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:51.917 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:51.918 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:51.918 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:51.920 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:51.920 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:51.921 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:51.932 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:51.932 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11b377c5
[DEBUG] 2020-10-04 16:07:51.933 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@702c436b
[DEBUG] 2020-10-04 16:07:51.934 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:51.934 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:51.934 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:51.934 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:51.950 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:51.959 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:51.972 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:51.972 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:51.973 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:51.973 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:51.974 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:51.974 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:51.975 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:51.976 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:51.978 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:51.988 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:51.999 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:51.999 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:52.000 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:52.000 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:52.005 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:52.005 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:52.008 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:52.008 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:52.009 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:52.009 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5fbdc49b
[DEBUG] 2020-10-04 16:07:52.017 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:52.017 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:52.021 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:52.022 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed2acf
[DEBUG] 2020-10-04 16:07:52.023 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:52.023 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:52.033 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:52.033 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:52.034 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:52.034 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:52.035 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:52.035 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:52.044 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:52.045 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:52.045 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@46a953cf
[DEBUG] 2020-10-04 16:07:52.046 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:52.046 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:52.046 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:52.048 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:52.048 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:52.049 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:52.049 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5fcfca62
[DEBUG] 2020-10-04 16:07:52.049 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@288214b1
[DEBUG] 2020-10-04 16:07:52.050 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:52.050 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:52.050 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:52.059 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:52.060 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:52.062 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:52.062 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@523d6bdb
[DEBUG] 2020-10-04 16:07:52.063 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a87b51
[DEBUG] 2020-10-04 16:07:52.063 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:52.063 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:52.067 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64524dd
[DEBUG] 2020-10-04 16:07:52.072 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:52.073 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:52.075 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:52.075 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:52.077 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46c3a14d
[DEBUG] 2020-10-04 16:07:52.077 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64968732
[DEBUG] 2020-10-04 16:07:52.079 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25cd49a4
[DEBUG] 2020-10-04 16:07:52.089 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:52.089 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:52.092 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@37af1f93
[DEBUG] 2020-10-04 16:07:52.092 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@778d82e9
[DEBUG] 2020-10-04 16:07:52.093 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@408e96d9
[DEBUG] 2020-10-04 16:07:52.093 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@59901c4d
[DEBUG] 2020-10-04 16:07:52.093 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@168cd36b
[DEBUG] 2020-10-04 16:07:52.094 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d8d9199
[DEBUG] 2020-10-04 16:07:52.094 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3901f6af
[DEBUG] 2020-10-04 16:07:52.095 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@602ae7b6
[DEBUG] 2020-10-04 16:07:52.144 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 16:07:52.144 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 16:07:52.145 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:52.145 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:52.145 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 16:07:52.146 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 16:07:52.147 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 16:07:52.149 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:52.150 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 16:07:52.150 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 16:07:52.151 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 16:07:52.151 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 16:07:52.151 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:52.156 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-04 16:07:52.162 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-10-04 16:07:52.162 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 16:07:52.162 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-04 16:07:52.392 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 16:07:52.573 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:52.576 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:52.577 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 16:07:52.656 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 16:07:52.681 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 16:07:52.756 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 16:07:52.813 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 16:07:52.820 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a50d9fc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@106d77da]
[DEBUG] 2020-10-04 16:07:52.930 [main] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Customer
[DEBUG] 2020-10-04 16:07:53.008 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 16:07:53.027 [main] EntityBinder - Import with entity name Customer
[DEBUG] 2020-10-04 16:07:53.034 [main] EntityBinder - Bind entity BillingSystem.entity.Customer on table customer
[DEBUG] 2020-10-04 16:07:53.074 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.075 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-04 16:07:53.083 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:id]
[DEBUG] 2020-10-04 16:07:53.088 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-04 16:07:53.090 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-04 16:07:53.097 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 16:07:53.104 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.105 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-10-04 16:07:53.105 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:address]
[DEBUG] 2020-10-04 16:07:53.105 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-10-04 16:07:53.105 [main] PropertyBinder - Building property address
[DEBUG] 2020-10-04 16:07:53.106 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:53.106 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.146 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billingSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 16:07:53.152 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:53.152 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:53.153 [main] CollectionBinder - Collection role: BillingSystem.entity.Customer.billingSet
[DEBUG] 2020-10-04 16:07:53.156 [main] PropertyBinder - Building property billingSet
[DEBUG] 2020-10-04 16:07:53.156 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.156 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-10-04 16:07:53.156 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:city]
[DEBUG] 2020-10-04 16:07:53.156 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-10-04 16:07:53.157 [main] PropertyBinder - Building property city
[DEBUG] 2020-10-04 16:07:53.157 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.157 [main] PropertyBinder - MetadataSourceProcessor property customerName with lazy=false
[DEBUG] 2020-10-04 16:07:53.157 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:customerName]
[DEBUG] 2020-10-04 16:07:53.159 [main] SimpleValueBinder - building SimpleValue for customerName
[DEBUG] 2020-10-04 16:07:53.160 [main] PropertyBinder - Building property customerName
[DEBUG] 2020-10-04 16:07:53.160 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_login, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.161 [main] PropertyBinder - MetadataSourceProcessor property login with lazy=false
[DEBUG] 2020-10-04 16:07:53.161 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:login]
[DEBUG] 2020-10-04 16:07:53.161 [main] SimpleValueBinder - building SimpleValue for login
[DEBUG] 2020-10-04 16:07:53.161 [main] PropertyBinder - Building property login
[DEBUG] 2020-10-04 16:07:53.162 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.162 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 16:07:53.162 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:password]
[DEBUG] 2020-10-04 16:07:53.162 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 16:07:53.162 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 16:07:53.162 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.163 [main] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-10-04 16:07:53.164 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:state]
[DEBUG] 2020-10-04 16:07:53.164 [main] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-10-04 16:07:53.164 [main] PropertyBinder - Building property state
[DEBUG] 2020-10-04 16:07:53.283 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 16:07:53.285 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 16:07:53.286 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-10-04 16:07:53.305 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 16:07:53.305 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 16:07:53.308 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 16:07:53.408 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 16:07:53.410 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 16:07:53.411 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43da41e
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39ad12b6
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6aba5d30
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:53.411 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:53.415 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:53.415 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:53.415 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:53.416 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:53.417 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:53.417 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:53.417 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:53.418 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:53.418 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:53.418 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:53.418 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11b377c5
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@702c436b
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:53.419 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:53.420 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:53.420 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:53.420 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:53.420 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:53.421 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:53.422 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:53.424 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:53.424 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:53.424 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:53.424 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:53.424 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:53.424 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5fbdc49b
[DEBUG] 2020-10-04 16:07:53.424 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed2acf
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@46a953cf
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5fcfca62
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@288214b1
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@523d6bdb
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a87b51
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:53.425 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64524dd
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46c3a14d
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64968732
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25cd49a4
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c6b4ed7
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21263314
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ca30b8a
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a92c6a9
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c9934da
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4cb702ce
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@383caf89
[DEBUG] 2020-10-04 16:07:53.426 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64c781a9
[DEBUG] 2020-10-04 16:07:53.431 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 16:07:53.431 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 16:07:53.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:53.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:53.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 16:07:53.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:53.437 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-04 16:07:53.438 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-10-04 16:07:53.438 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 16:07:53.438 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-04 16:07:53.467 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 16:07:53.600 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:53.600 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:53.600 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 16:07:53.601 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 16:07:53.601 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 16:07:53.601 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 16:07:53.622 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 16:07:53.623 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a3ed300] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1984212d]
[DEBUG] 2020-10-04 16:07:53.623 [main] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Customer
[DEBUG] 2020-10-04 16:07:53.623 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 16:07:53.623 [main] EntityBinder - Import with entity name Customer
[DEBUG] 2020-10-04 16:07:53.623 [main] EntityBinder - Bind entity BillingSystem.entity.Customer on table customer
[DEBUG] 2020-10-04 16:07:53.624 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.624 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-04 16:07:53.624 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:id]
[DEBUG] 2020-10-04 16:07:53.624 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-04 16:07:53.624 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-04 16:07:53.624 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 16:07:53.645 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.645 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-10-04 16:07:53.645 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:address]
[DEBUG] 2020-10-04 16:07:53.646 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-10-04 16:07:53.646 [main] PropertyBinder - Building property address
[DEBUG] 2020-10-04 16:07:53.646 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:53.646 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.646 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.647 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.647 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.665 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billingSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 16:07:53.665 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:53.665 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:53.665 [main] CollectionBinder - Collection role: BillingSystem.entity.Customer.billingSet
[DEBUG] 2020-10-04 16:07:53.665 [main] PropertyBinder - Building property billingSet
[DEBUG] 2020-10-04 16:07:53.665 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.665 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-10-04 16:07:53.665 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:city]
[DEBUG] 2020-10-04 16:07:53.665 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-10-04 16:07:53.665 [main] PropertyBinder - Building property city
[DEBUG] 2020-10-04 16:07:53.665 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.665 [main] PropertyBinder - MetadataSourceProcessor property customerName with lazy=false
[DEBUG] 2020-10-04 16:07:53.665 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:customerName]
[DEBUG] 2020-10-04 16:07:53.665 [main] SimpleValueBinder - building SimpleValue for customerName
[DEBUG] 2020-10-04 16:07:53.665 [main] PropertyBinder - Building property customerName
[DEBUG] 2020-10-04 16:07:53.666 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_login, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.666 [main] PropertyBinder - MetadataSourceProcessor property login with lazy=false
[DEBUG] 2020-10-04 16:07:53.666 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:login]
[DEBUG] 2020-10-04 16:07:53.666 [main] SimpleValueBinder - building SimpleValue for login
[DEBUG] 2020-10-04 16:07:53.666 [main] PropertyBinder - Building property login
[DEBUG] 2020-10-04 16:07:53.666 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.666 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 16:07:53.666 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:password]
[DEBUG] 2020-10-04 16:07:53.666 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 16:07:53.666 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 16:07:53.675 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:53.675 [main] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-10-04 16:07:53.675 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:state]
[DEBUG] 2020-10-04 16:07:53.675 [main] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-10-04 16:07:53.676 [main] PropertyBinder - Building property state
[DEBUG] 2020-10-04 16:07:53.791 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 16:07:53.792 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 16:07:53.792 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-10-04 16:07:53.798 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 16:07:53.812 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 16:07:53.813 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 16:07:53.889 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 16:07:53.890 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 16:07:53.890 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43da41e
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39ad12b6
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6aba5d30
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:53.890 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:53.891 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:53.891 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11b377c5
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@702c436b
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:53.892 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:53.893 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5fbdc49b
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed2acf
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@46a953cf
[DEBUG] 2020-10-04 16:07:53.896 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5fcfca62
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@288214b1
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@523d6bdb
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a87b51
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64524dd
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46c3a14d
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64968732
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25cd49a4
[DEBUG] 2020-10-04 16:07:53.897 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:53.899 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:53.899 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32d5279
[DEBUG] 2020-10-04 16:07:53.899 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c067c0d
[DEBUG] 2020-10-04 16:07:53.899 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d0b0cb9
[DEBUG] 2020-10-04 16:07:53.900 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f7b6639
[DEBUG] 2020-10-04 16:07:53.900 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16ac5d35
[DEBUG] 2020-10-04 16:07:53.900 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3965bdf9
[DEBUG] 2020-10-04 16:07:53.900 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3c0e00a8
[DEBUG] 2020-10-04 16:07:53.902 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1860f3be
[DEBUG] 2020-10-04 16:07:53.903 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:53.904 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-04 16:07:53.904 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-10-04 16:07:53.904 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 16:07:53.904 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-04 16:07:53.936 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 16:07:54.045 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:54.045 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:54.045 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 16:07:54.045 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 16:07:54.046 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 16:07:54.049 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 16:07:54.094 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 16:07:54.095 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46e190ed] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@383c3eb3]
[DEBUG] 2020-10-04 16:07:54.095 [main] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Customer
[DEBUG] 2020-10-04 16:07:54.095 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 16:07:54.095 [main] EntityBinder - Import with entity name Customer
[DEBUG] 2020-10-04 16:07:54.095 [main] EntityBinder - Bind entity BillingSystem.entity.Customer on table customer
[DEBUG] 2020-10-04 16:07:54.096 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.108 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-04 16:07:54.108 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:id]
[DEBUG] 2020-10-04 16:07:54.108 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-04 16:07:54.108 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-04 16:07:54.108 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 16:07:54.108 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.108 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-10-04 16:07:54.108 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:address]
[DEBUG] 2020-10-04 16:07:54.108 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-10-04 16:07:54.109 [main] PropertyBinder - Building property address
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billingSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.109 [main] CollectionBinder - Collection role: BillingSystem.entity.Customer.billingSet
[DEBUG] 2020-10-04 16:07:54.109 [main] PropertyBinder - Building property billingSet
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.109 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-10-04 16:07:54.109 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:city]
[DEBUG] 2020-10-04 16:07:54.109 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-10-04 16:07:54.109 [main] PropertyBinder - Building property city
[DEBUG] 2020-10-04 16:07:54.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.109 [main] PropertyBinder - MetadataSourceProcessor property customerName with lazy=false
[DEBUG] 2020-10-04 16:07:54.109 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:customerName]
[DEBUG] 2020-10-04 16:07:54.109 [main] SimpleValueBinder - building SimpleValue for customerName
[DEBUG] 2020-10-04 16:07:54.109 [main] PropertyBinder - Building property customerName
[DEBUG] 2020-10-04 16:07:54.110 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_login, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.110 [main] PropertyBinder - MetadataSourceProcessor property login with lazy=false
[DEBUG] 2020-10-04 16:07:54.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:login]
[DEBUG] 2020-10-04 16:07:54.110 [main] SimpleValueBinder - building SimpleValue for login
[DEBUG] 2020-10-04 16:07:54.110 [main] PropertyBinder - Building property login
[DEBUG] 2020-10-04 16:07:54.110 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.110 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 16:07:54.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:password]
[DEBUG] 2020-10-04 16:07:54.110 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 16:07:54.110 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 16:07:54.110 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.110 [main] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-10-04 16:07:54.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:state]
[DEBUG] 2020-10-04 16:07:54.110 [main] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-10-04 16:07:54.110 [main] PropertyBinder - Building property state
[DEBUG] 2020-10-04 16:07:54.210 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 16:07:54.210 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 16:07:54.210 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-10-04 16:07:54.231 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 16:07:54.231 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 16:07:54.243 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 16:07:54.294 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 16:07:54.294 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 16:07:54.295 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43da41e
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39ad12b6
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6aba5d30
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:54.295 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:54.299 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:54.299 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:54.299 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:54.299 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11b377c5
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@702c436b
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5fbdc49b
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed2acf
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@46a953cf
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5fcfca62
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@288214b1
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:54.300 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@523d6bdb
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a87b51
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64524dd
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46c3a14d
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64968732
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25cd49a4
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32456db0
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f5827d0
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58a2d9f9
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4337afd
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d02af26
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fa7df1
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4dd90166
[DEBUG] 2020-10-04 16:07:54.301 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52227eb2
[DEBUG] 2020-10-04 16:07:54.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 16:07:54.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 16:07:54.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:54.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:54.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 16:07:54.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:54.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-04 16:07:54.313 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-10-04 16:07:54.313 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 16:07:54.313 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-04 16:07:54.343 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 16:07:54.429 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:54.430 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:54.430 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 16:07:54.430 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 16:07:54.430 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 16:07:54.430 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 16:07:54.465 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 16:07:54.466 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e8799f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b353651]
[DEBUG] 2020-10-04 16:07:54.466 [main] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Customer
[DEBUG] 2020-10-04 16:07:54.466 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 16:07:54.466 [main] EntityBinder - Import with entity name Customer
[DEBUG] 2020-10-04 16:07:54.477 [main] EntityBinder - Bind entity BillingSystem.entity.Customer on table customer
[DEBUG] 2020-10-04 16:07:54.483 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.484 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-04 16:07:54.484 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:id]
[DEBUG] 2020-10-04 16:07:54.484 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-04 16:07:54.484 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-04 16:07:54.484 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 16:07:54.484 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.485 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-10-04 16:07:54.485 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:address]
[DEBUG] 2020-10-04 16:07:54.498 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-10-04 16:07:54.498 [main] PropertyBinder - Building property address
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billingSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.499 [main] CollectionBinder - Collection role: BillingSystem.entity.Customer.billingSet
[DEBUG] 2020-10-04 16:07:54.499 [main] PropertyBinder - Building property billingSet
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.499 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-10-04 16:07:54.499 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:city]
[DEBUG] 2020-10-04 16:07:54.499 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-10-04 16:07:54.499 [main] PropertyBinder - Building property city
[DEBUG] 2020-10-04 16:07:54.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.499 [main] PropertyBinder - MetadataSourceProcessor property customerName with lazy=false
[DEBUG] 2020-10-04 16:07:54.499 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:customerName]
[DEBUG] 2020-10-04 16:07:54.499 [main] SimpleValueBinder - building SimpleValue for customerName
[DEBUG] 2020-10-04 16:07:54.499 [main] PropertyBinder - Building property customerName
[DEBUG] 2020-10-04 16:07:54.500 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_login, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.500 [main] PropertyBinder - MetadataSourceProcessor property login with lazy=false
[DEBUG] 2020-10-04 16:07:54.500 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:login]
[DEBUG] 2020-10-04 16:07:54.500 [main] SimpleValueBinder - building SimpleValue for login
[DEBUG] 2020-10-04 16:07:54.500 [main] PropertyBinder - Building property login
[DEBUG] 2020-10-04 16:07:54.500 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.500 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 16:07:54.500 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:password]
[DEBUG] 2020-10-04 16:07:54.500 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 16:07:54.500 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 16:07:54.500 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.500 [main] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-10-04 16:07:54.500 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:state]
[DEBUG] 2020-10-04 16:07:54.500 [main] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-10-04 16:07:54.500 [main] PropertyBinder - Building property state
[DEBUG] 2020-10-04 16:07:54.681 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-10-04 16:07:54.682 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-10-04 16:07:54.683 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2020-10-04 16:07:54.694 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-10-04 16:07:54.694 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-10-04 16:07:54.696 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-10-04 16:07:54.745 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-10-04 16:07:54.745 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-10-04 16:07:54.745 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5496c165
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43da41e
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39ad12b6
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6aba5d30
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e322ec9
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@719bb3b4
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c782d8e
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bbe50c9
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5eb2172
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1744a475
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:54.746 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ca93621
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9d3c67
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71466383
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@129fed45
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11b377c5
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@702c436b
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37303f12
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ab5afc7
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69a2b3b6
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46731692
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@151ef57f
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:54.750 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@497aec8c
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@336880df
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@129bd55d
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4defd42
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aa6311a
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d654825
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3964d79
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5fbdc49b
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e1459ea
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed2acf
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d9f64c9
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1abfe081
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@acdcf71
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@cbc8d0f
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17b6d426
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@46a953cf
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2dd8239
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f92a84e
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5fcfca62
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@288214b1
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@58cf8f94
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:54.751 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:54.755 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fabb651
[DEBUG] 2020-10-04 16:07:54.756 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@523d6bdb
[DEBUG] 2020-10-04 16:07:54.757 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a87b51
[DEBUG] 2020-10-04 16:07:54.757 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:54.757 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e2a3040
[DEBUG] 2020-10-04 16:07:54.757 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64524dd
[DEBUG] 2020-10-04 16:07:54.757 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:54.758 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c42f2a1
[DEBUG] 2020-10-04 16:07:54.758 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:54.758 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@59e43e8c
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46c3a14d
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64968732
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25cd49a4
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5d5160e6
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@40bb4f87
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51a651c1
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@173f1614
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c184d4d
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7645f03e
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@158e9f6e
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7a6ea47d
[DEBUG] 2020-10-04 16:07:54.759 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54b2fc58
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-10-04 16:07:54.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-10-04 16:07:54.760 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-10-04 16:07:54.760 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-10-04 16:07:54.760 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-10-04 16:07:54.791 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-10-04 16:07:54.852 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:54.852 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-10-04 16:07:54.852 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-10-04 16:07:54.852 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-10-04 16:07:54.853 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-10-04 16:07:54.853 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-10-04 16:07:54.857 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-10-04 16:07:54.858 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@460b50df] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1cf336fd]
[DEBUG] 2020-10-04 16:07:54.858 [main] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Customer
[DEBUG] 2020-10-04 16:07:54.858 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-10-04 16:07:54.858 [main] EntityBinder - Import with entity name Customer
[DEBUG] 2020-10-04 16:07:54.858 [main] EntityBinder - Bind entity BillingSystem.entity.Customer on table customer
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.859 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-10-04 16:07:54.859 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:id]
[DEBUG] 2020-10-04 16:07:54.859 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-10-04 16:07:54.859 [main] PropertyBinder - Building property id
[DEBUG] 2020-10-04 16:07:54.859 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.859 [main] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-10-04 16:07:54.859 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:address]
[DEBUG] 2020-10-04 16:07:54.859 [main] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-10-04 16:07:54.859 [main] PropertyBinder - Building property address
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=billingSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.859 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billingSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-10-04 16:07:54.887 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.888 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='customer'}
[DEBUG] 2020-10-04 16:07:54.888 [main] CollectionBinder - Collection role: BillingSystem.entity.Customer.billingSet
[DEBUG] 2020-10-04 16:07:54.888 [main] PropertyBinder - Building property billingSet
[DEBUG] 2020-10-04 16:07:54.888 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.888 [main] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-10-04 16:07:54.888 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:city]
[DEBUG] 2020-10-04 16:07:54.888 [main] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-10-04 16:07:54.888 [main] PropertyBinder - Building property city
[DEBUG] 2020-10-04 16:07:54.889 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - MetadataSourceProcessor property customerName with lazy=false
[DEBUG] 2020-10-04 16:07:54.896 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:customerName]
[DEBUG] 2020-10-04 16:07:54.896 [main] SimpleValueBinder - building SimpleValue for customerName
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - Building property customerName
[DEBUG] 2020-10-04 16:07:54.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_login, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - MetadataSourceProcessor property login with lazy=false
[DEBUG] 2020-10-04 16:07:54.896 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:login]
[DEBUG] 2020-10-04 16:07:54.896 [main] SimpleValueBinder - building SimpleValue for login
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - Building property login
[DEBUG] 2020-10-04 16:07:54.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-10-04 16:07:54.896 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:password]
[DEBUG] 2020-10-04 16:07:54.896 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - Building property password
[DEBUG] 2020-10-04 16:07:54.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer), mappingColumn=cust_state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-10-04 16:07:54.896 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Customer:state]
[DEBUG] 2020-10-04 16:07:54.896 [main] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-10-04 16:07:54.896 [main] PropertyBinder - Building property state
