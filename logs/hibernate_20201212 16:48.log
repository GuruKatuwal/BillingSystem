[DEBUG] 2020-12-12 16:47:40.974 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-12 16:47:40.993 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-12 16:47:41.017 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-12 16:47:41.574 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-12 16:47:41.582 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-12 16:47:42.518 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-12 16:47:42.525 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-12 16:47:42.598 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-12 16:47:44.383 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-12 16:47:44.489 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-12 16:47:44.498 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-12 16:47:44.636 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-12 16:47:44.815 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@344036a9
[DEBUG] 2020-12-12 16:47:44.818 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@344036a9
[DEBUG] 2020-12-12 16:47:44.819 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@344036a9
[DEBUG] 2020-12-12 16:47:44.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@553831e6
[DEBUG] 2020-12-12 16:47:44.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@15014cbb
[DEBUG] 2020-12-12 16:47:44.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@30c9b7ca
[DEBUG] 2020-12-12 16:47:44.829 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@b109424
[DEBUG] 2020-12-12 16:47:44.829 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@b109424
[DEBUG] 2020-12-12 16:47:44.829 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b109424
[DEBUG] 2020-12-12 16:47:44.830 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6b02c04d
[DEBUG] 2020-12-12 16:47:44.831 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6b02c04d
[DEBUG] 2020-12-12 16:47:44.831 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6b02c04d
[DEBUG] 2020-12-12 16:47:44.833 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@12bd708d
[DEBUG] 2020-12-12 16:47:44.834 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@12bd708d
[DEBUG] 2020-12-12 16:47:44.834 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@12bd708d
[DEBUG] 2020-12-12 16:47:44.835 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2c33f351
[DEBUG] 2020-12-12 16:47:44.835 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2c33f351
[DEBUG] 2020-12-12 16:47:44.835 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2c33f351
[DEBUG] 2020-12-12 16:47:44.836 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@21c8a91e
[DEBUG] 2020-12-12 16:47:44.838 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@21c8a91e
[DEBUG] 2020-12-12 16:47:44.838 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@21c8a91e
[DEBUG] 2020-12-12 16:47:44.849 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@462a220f
[DEBUG] 2020-12-12 16:47:44.849 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@462a220f
[DEBUG] 2020-12-12 16:47:44.849 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@462a220f
[DEBUG] 2020-12-12 16:47:44.859 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65b3f8f6
[DEBUG] 2020-12-12 16:47:44.860 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65b3f8f6
[DEBUG] 2020-12-12 16:47:44.863 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65b3f8f6
[DEBUG] 2020-12-12 16:47:44.864 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8e4bfa8
[DEBUG] 2020-12-12 16:47:44.864 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8e4bfa8
[DEBUG] 2020-12-12 16:47:44.865 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@a425ed5
[DEBUG] 2020-12-12 16:47:44.867 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@a425ed5
[DEBUG] 2020-12-12 16:47:44.877 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@663a0df6
[DEBUG] 2020-12-12 16:47:44.877 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@663a0df6
[DEBUG] 2020-12-12 16:47:44.879 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@69d6097a
[DEBUG] 2020-12-12 16:47:44.881 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1037d8ab
[DEBUG] 2020-12-12 16:47:44.885 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@64e9ec07
[DEBUG] 2020-12-12 16:47:44.886 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@64e9ec07
[DEBUG] 2020-12-12 16:47:44.887 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@715eccee
[DEBUG] 2020-12-12 16:47:44.887 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@715eccee
[DEBUG] 2020-12-12 16:47:44.918 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@28ebbd1a
[DEBUG] 2020-12-12 16:47:44.921 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@28ebbd1a
[DEBUG] 2020-12-12 16:47:44.925 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7201d141
[DEBUG] 2020-12-12 16:47:44.925 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7201d141
[DEBUG] 2020-12-12 16:47:44.927 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b089c03
[DEBUG] 2020-12-12 16:47:44.927 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b089c03
[DEBUG] 2020-12-12 16:47:44.930 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@314cc867
[DEBUG] 2020-12-12 16:47:44.930 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@314cc867
[DEBUG] 2020-12-12 16:47:44.934 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@695fc974
[DEBUG] 2020-12-12 16:47:44.935 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@695fc974
[DEBUG] 2020-12-12 16:47:44.950 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b68a855
[DEBUG] 2020-12-12 16:47:44.950 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b68a855
[DEBUG] 2020-12-12 16:47:44.954 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17f6c2b6
[DEBUG] 2020-12-12 16:47:44.955 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17f6c2b6
[DEBUG] 2020-12-12 16:47:44.956 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@17eb336f
[DEBUG] 2020-12-12 16:47:44.956 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@17eb336f
[DEBUG] 2020-12-12 16:47:44.958 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@64213dc9
[DEBUG] 2020-12-12 16:47:44.958 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64213dc9
[DEBUG] 2020-12-12 16:47:44.961 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@34afe04c
[DEBUG] 2020-12-12 16:47:44.961 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34afe04c
[DEBUG] 2020-12-12 16:47:44.963 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34afe04c
[DEBUG] 2020-12-12 16:47:44.970 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30129eab
[DEBUG] 2020-12-12 16:47:44.973 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6e54caf
[DEBUG] 2020-12-12 16:47:44.975 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6e54caf
[DEBUG] 2020-12-12 16:47:44.975 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6e54caf
[DEBUG] 2020-12-12 16:47:44.981 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@46bedf74
[DEBUG] 2020-12-12 16:47:44.983 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@259c8bb8
[DEBUG] 2020-12-12 16:47:44.983 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@259c8bb8
[DEBUG] 2020-12-12 16:47:44.998 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7f5dd514
[DEBUG] 2020-12-12 16:47:44.998 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f5dd514
[DEBUG] 2020-12-12 16:47:45.025 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@26995a66
[DEBUG] 2020-12-12 16:47:45.029 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@26995a66
[DEBUG] 2020-12-12 16:47:45.031 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7c65e74d
[DEBUG] 2020-12-12 16:47:45.032 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7c65e74d
[DEBUG] 2020-12-12 16:47:45.032 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51104a7d
[DEBUG] 2020-12-12 16:47:45.035 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51104a7d
[DEBUG] 2020-12-12 16:47:45.035 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54b027d
[DEBUG] 2020-12-12 16:47:45.045 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@42bd7d93
[DEBUG] 2020-12-12 16:47:45.048 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@42bd7d93
[DEBUG] 2020-12-12 16:47:45.048 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@42bd7d93
[DEBUG] 2020-12-12 16:47:45.053 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f0d5b29
[DEBUG] 2020-12-12 16:47:45.059 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f0d5b29
[DEBUG] 2020-12-12 16:47:45.060 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f0d5b29
[DEBUG] 2020-12-12 16:47:45.064 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@36f9c6bd
[DEBUG] 2020-12-12 16:47:45.065 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@22174b1f
[DEBUG] 2020-12-12 16:47:45.071 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2b2e7ce9
[DEBUG] 2020-12-12 16:47:45.072 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2b2e7ce9
[DEBUG] 2020-12-12 16:47:45.072 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2b2e7ce9
[DEBUG] 2020-12-12 16:47:45.073 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8908aa5
[DEBUG] 2020-12-12 16:47:45.073 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8908aa5
[DEBUG] 2020-12-12 16:47:45.073 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8908aa5
[DEBUG] 2020-12-12 16:47:45.078 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4397207d
[DEBUG] 2020-12-12 16:47:45.085 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5204b883
[DEBUG] 2020-12-12 16:47:45.094 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@57022ab8
[DEBUG] 2020-12-12 16:47:45.097 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57022ab8
[DEBUG] 2020-12-12 16:47:45.101 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4d988140
[DEBUG] 2020-12-12 16:47:45.108 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@32ffc0da
[DEBUG] 2020-12-12 16:47:45.108 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@32ffc0da
[DEBUG] 2020-12-12 16:47:45.115 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@75bd24d9
[DEBUG] 2020-12-12 16:47:45.115 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@75bd24d9
[DEBUG] 2020-12-12 16:47:45.117 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64ed2d6d
[DEBUG] 2020-12-12 16:47:45.118 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@57af1e40
[DEBUG] 2020-12-12 16:47:45.130 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5ea842c9
[DEBUG] 2020-12-12 16:47:45.140 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7b8e9002
[DEBUG] 2020-12-12 16:47:45.141 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7b8e9002
[DEBUG] 2020-12-12 16:47:45.144 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@346438d7
[DEBUG] 2020-12-12 16:47:45.144 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@595e82d8
[DEBUG] 2020-12-12 16:47:45.147 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@50570388
[DEBUG] 2020-12-12 16:47:45.147 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@46ad8cc2
[DEBUG] 2020-12-12 16:47:45.147 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@531ab640
[DEBUG] 2020-12-12 16:47:45.150 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e7fa6b9
[DEBUG] 2020-12-12 16:47:45.150 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@165cb1bd
[DEBUG] 2020-12-12 16:47:45.150 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c3df428
[DEBUG] 2020-12-12 16:47:45.216 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-12 16:47:45.217 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-12 16:47:45.219 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-12 16:47:45.219 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-12 16:47:45.230 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-12 16:47:45.233 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-12 16:47:45.234 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-12 16:47:45.238 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-12 16:47:45.243 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-12 16:47:45.248 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-12 16:47:45.249 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-12 16:47:45.249 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-12 16:47:45.249 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-12 16:47:45.250 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-12 16:47:45.261 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-12-12 16:47:45.261 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-12 16:47:45.261 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-12 16:47:45.918 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-12 16:47:47.290 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-12 16:47:47.301 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-12 16:47:47.302 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-12 16:47:47.613 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-12 16:47:47.786 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-12 16:47:47.947 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-12 16:47:48.222 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-12 16:47:48.236 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@329cc43f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19927870]
[DEBUG] 2020-12-12 16:47:48.725 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:48.943 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-12 16:47:49.013 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2020-12-12 16:47:49.031 [http-nio-8080-exec-5] EntityBinder - Bind entity BillingSystem.entity.User on table user
[DEBUG] 2020-12-12 16:47:49.124 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.133 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-12 16:47:49.141 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:id]
[DEBUG] 2020-12-12 16:47:49.163 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-12 16:47:49.168 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2020-12-12 16:47:49.195 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-12 16:47:49.198 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.199 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-12-12 16:47:49.199 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:address]
[DEBUG] 2020-12-12 16:47:49.199 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-12-12 16:47:49.199 [http-nio-8080-exec-5] PropertyBinder - Building property address
[DEBUG] 2020-12-12 16:47:49.217 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-12 16:47:49.226 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.236 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.266 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.280 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.284 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billings_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-12 16:47:49.301 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-12 16:47:49.302 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-12 16:47:49.305 [http-nio-8080-exec-5] CollectionBinder - Collection role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:49.315 [http-nio-8080-exec-5] PropertyBinder - Building property billings
[DEBUG] 2020-12-12 16:47:49.316 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.318 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-12-12 16:47:49.318 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:city]
[DEBUG] 2020-12-12 16:47:49.318 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-12-12 16:47:49.331 [http-nio-8080-exec-5] PropertyBinder - Building property city
[DEBUG] 2020-12-12 16:47:49.331 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.334 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property dateOfBirth with lazy=false
[DEBUG] 2020-12-12 16:47:49.334 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:dateOfBirth]
[DEBUG] 2020-12-12 16:47:49.334 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for dateOfBirth
[DEBUG] 2020-12-12 16:47:49.334 [http-nio-8080-exec-5] PropertyBinder - Building property dateOfBirth
[DEBUG] 2020-12-12 16:47:49.334 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.340 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-12 16:47:49.340 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:description]
[DEBUG] 2020-12-12 16:47:49.340 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-12 16:47:49.340 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2020-12-12 16:47:49.340 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.340 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:name]
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] PropertyBinder - Building property name
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:password]
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:phone]
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-12-12 16:47:49.341 [http-nio-8080-exec-5] PropertyBinder - Building property phone
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-12 16:47:49.342 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-12 16:47:49.345 [http-nio-8080-exec-5] CollectionBinder - Collection role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:49.345 [http-nio-8080-exec-5] PropertyBinder - Building property roles
[DEBUG] 2020-12-12 16:47:49.347 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.347 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-12-12 16:47:49.348 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:state]
[DEBUG] 2020-12-12 16:47:49.348 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] PropertyBinder - Building property state
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:username]
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=zip_code, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.349 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-12-12 16:47:49.350 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:zipcode]
[DEBUG] 2020-12-12 16:47:49.350 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-12-12 16:47:49.350 [http-nio-8080-exec-5] PropertyBinder - Building property zipcode
[DEBUG] 2020-12-12 16:47:49.368 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Billing
[DEBUG] 2020-12-12 16:47:49.369 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-12 16:47:49.370 [http-nio-8080-exec-5] EntityBinder - Import with entity name Billing
[DEBUG] 2020-12-12 16:47:49.370 [http-nio-8080-exec-5] EntityBinder - Bind entity BillingSystem.entity.Billing on table billing
[DEBUG] 2020-12-12 16:47:49.384 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.384 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-12 16:47:49.384 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:id]
[DEBUG] 2020-12-12 16:47:49.384 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-12 16:47:49.385 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2020-12-12 16:47:49.385 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-12 16:47:49.385 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=bill_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.385 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property billAmount with lazy=false
[DEBUG] 2020-12-12 16:47:49.385 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:billAmount]
[DEBUG] 2020-12-12 16:47:49.385 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for billAmount
[DEBUG] 2020-12-12 16:47:49.385 [http-nio-8080-exec-5] PropertyBinder - Building property billAmount
[DEBUG] 2020-12-12 16:47:49.386 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=paid_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.386 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property paidAmount with lazy=false
[DEBUG] 2020-12-12 16:47:49.395 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paidAmount]
[DEBUG] 2020-12-12 16:47:49.397 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for paidAmount
[DEBUG] 2020-12-12 16:47:49.397 [http-nio-8080-exec-5] PropertyBinder - Building property paidAmount
[DEBUG] 2020-12-12 16:47:49.399 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=payment_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.399 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property paymentDate with lazy=false
[DEBUG] 2020-12-12 16:47:49.399 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paymentDate]
[DEBUG] 2020-12-12 16:47:49.399 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for paymentDate
[DEBUG] 2020-12-12 16:47:49.407 [http-nio-8080-exec-5] PropertyBinder - Building property paymentDate
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=presentreading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property presentreading with lazy=false
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:presentreading]
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for presentreading
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] PropertyBinder - Building property presentreading
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previous_balance, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property previousBalance with lazy=false
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousBalance]
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for previousBalance
[DEBUG] 2020-12-12 16:47:49.409 [http-nio-8080-exec-5] PropertyBinder - Building property previousBalance
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previousreading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property previousreading with lazy=false
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousreading]
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for previousreading
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] PropertyBinder - Building property previousreading
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=readingDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property readingDate with lazy=false
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:readingDate]
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for readingDate
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] PropertyBinder - Building property readingDate
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-12 16:47:49.410 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.420 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-12-12 16:47:49.431 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Role
[DEBUG] 2020-12-12 16:47:49.434 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-12 16:47:49.435 [http-nio-8080-exec-5] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-12 16:47:49.435 [http-nio-8080-exec-5] EntityBinder - Bind entity BillingSystem.entity.Role on table role
[DEBUG] 2020-12-12 16:47:49.458 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.459 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-12 16:47:49.459 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:id]
[DEBUG] 2020-12-12 16:47:49.459 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-12 16:47:49.459 [http-nio-8080-exec-5] PropertyBinder - Building property id
[DEBUG] 2020-12-12 16:47:49.459 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-12 16:47:49.464 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.464 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2020-12-12 16:47:49.464 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:role]
[DEBUG] 2020-12-12 16:47:49.464 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2020-12-12 16:47:49.464 [http-nio-8080-exec-5] PropertyBinder - Building property role
[DEBUG] 2020-12-12 16:47:49.465 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-12 16:47:49.465 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.466 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2020-12-12 16:47:49.466 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-12 16:47:49.469 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-12 16:47:49.470 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:username]
[DEBUG] 2020-12-12 16:47:49.470 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-12 16:47:49.470 [http-nio-8080-exec-5] PropertyBinder - Building property username
[DEBUG] 2020-12-12 16:47:49.474 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-12 16:47:49.474 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-12-12 16:47:49.474 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-12-12 16:47:49.474 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for dateOfBirth
[DEBUG] 2020-12-12 16:47:49.474 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-12 16:47:49.474 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for state
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for billAmount
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for paidAmount
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for paymentDate
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for presentreading
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for previousBalance
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for previousreading
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for readingDate
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2020-12-12 16:47:49.479 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-12 16:47:49.497 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-12 16:47:49.497 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [billing]
[DEBUG] 2020-12-12 16:47:49.498 [http-nio-8080-exec-5] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-12 16:47:49.499 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:49.500 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.billings through a foreign key
[DEBUG] 2020-12-12 16:47:49.501 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: BillingSystem.entity.User.billings -> billing
[DEBUG] 2020-12-12 16:47:49.518 [http-nio-8080-exec-5] TableBinder - Retrieving property BillingSystem.entity.Billing.user
[DEBUG] 2020-12-12 16:47:49.519 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_id, one-to-many: BillingSystem.entity.Billing
[DEBUG] 2020-12-12 16:47:49.519 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:49.519 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.roles through a foreign key
[DEBUG] 2020-12-12 16:47:49.521 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: BillingSystem.entity.User.roles -> role
[DEBUG] 2020-12-12 16:47:49.524 [http-nio-8080-exec-5] TableBinder - Retrieving property BillingSystem.entity.Role.role
[DEBUG] 2020-12-12 16:47:49.528 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: role, one-to-many: BillingSystem.entity.Role
[DEBUG] 2020-12-12 16:47:49.529 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:49.541 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:49.541 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:49.551 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:49.552 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:49.552 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:49.703 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2020-12-12 16:47:49.706 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2020-12-12 16:47:49.711 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-12-12 16:47:49.711 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-12-12 16:47:49.711 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-12-12 16:47:49.712 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-12-12 16:47:49.713 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2020-12-12 16:47:49.714 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-12-12 16:47:49.714 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2020-12-12 16:47:49.714 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2020-12-12 16:47:49.971 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-12-12 16:47:50.126 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-12-12 16:47:50.127 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-11-04, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.9.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-56-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a8858ac, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-12-12 16:47:50.240 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-12 16:47:50.240 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:50.353 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-12 16:47:50.354 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-12 16:47:50.357 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-12 16:47:50.358 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-12 16:47:50.369 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-12-12 16:47:50.383 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-12-12 16:47:50.386 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@329cc43f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@339834f]
[DEBUG] 2020-12-12 16:47:50.621 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-12 16:47:50.625 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:50.679 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-12 16:47:50.679 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:51.918 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-12 16:47:51.918 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-12 16:47:51.919 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-12 16:47:51.919 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-12 16:47:52.010 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-12 16:47:52.010 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-12 16:47:52.010 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-12 16:47:52.010 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-12 16:47:52.144 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:52.145 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update role set role=? where id=?
[DEBUG] 2020-12-12 16:47:52.145 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-12-12 16:47:52.145 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update role set role=null where role=? and id=?
[DEBUG] 2020-12-12 16:47:52.145 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update role set role=null where role=?
[DEBUG] 2020-12-12 16:47:52.145 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:52.146 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update billing set user_id=? where id=?
[DEBUG] 2020-12-12 16:47:52.146 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update billing set  where id=?
[DEBUG] 2020-12-12 16:47:52.146 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update billing set user_id=null where user_id=? and id=?
[DEBUG] 2020-12-12 16:47:52.146 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update billing set user_id=null where user_id=?
[DEBUG] 2020-12-12 16:47:52.159 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.User
[DEBUG] 2020-12-12 16:47:52.160 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-12-12 16:47:52.160 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_2_, user_.city as city3_2_, user_.date_of_birth as date_of_4_2_, user_.description as descript5_2_, user_.name as name6_2_, user_.password as password7_2_, user_.phone as phone8_2_, user_.state as state9_2_, user_.username as usernam10_2_, user_.zip_code as zip_cod11_2_ from user user_ where user_.id=?
[DEBUG] 2020-12-12 16:47:52.160 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into user (address, city, date_of_birth, description, name, password, phone, state, username, zip_code, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-12 16:47:52.160 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update user set address=?, city=?, date_of_birth=?, description=?, name=?, password=?, phone=?, state=?, username=?, zip_code=? where id=?
[DEBUG] 2020-12-12 16:47:52.160 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-12-12 16:47:52.160 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into user (address, city, date_of_birth, description, name, password, phone, state, username, zip_code) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-12 16:47:52.246 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31039021]
[DEBUG] 2020-12-12 16:47:52.248 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-12 16:47:52.248 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-12 16:47:52.276 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61dc1b8d]
[DEBUG] 2020-12-12 16:47:52.287 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@627925fd]
[DEBUG] 2020-12-12 16:47:52.288 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-12 16:47:52.288 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-12-12 16:47:52.289 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-12-12 16:47:52.289 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-12 16:47:52.289 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-12 16:47:52.289 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.previousreading
[DEBUG] 2020-12-12 16:47:52.289 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-12-12 16:47:52.289 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-12 16:47:52.290 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : dateOfBirth
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5db489ad]
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e795683]
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-12 16:47:52.291 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@421414ab]
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.dateOfBirth
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-12 16:47:52.292 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-12 16:47:52.293 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-12 16:47:52.293 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-12 16:47:52.293 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-12 16:47:52.293 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-12 16:47:52.293 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-12 16:47:52.293 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.330 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.366 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-12 16:47:52.369 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.date_of_birth as date_of_4_2_0_, user0_.description as descript5_2_0_, user0_.name as name6_2_0_, user0_.password as password7_2_0_, user0_.phone as phone8_2_0_, user0_.state as state9_2_0_, user0_.username as usernam10_2_0_, user0_.zip_code as zip_cod11_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.date_of_birth as date_of_4_2_5_, user3_.description as descript5_2_5_, user3_.name as name6_2_5_, user3_.password as password7_2_5_, user3_.phone as phone8_2_5_, user3_.state as state9_2_5_, user3_.username as usernam10_2_5_, user3_.zip_code as zip_cod11_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-12 16:47:52.369 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3819bbe0]
[DEBUG] 2020-12-12 16:47:52.369 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-12 16:47:52.369 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-12 16:47:52.369 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a3fe356]
[DEBUG] 2020-12-12 16:47:52.369 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec661d6]
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.previousreading
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : dateOfBirth
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@460c8f7a]
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd98ebc]
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e907267]
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.dateOfBirth
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-12 16:47:52.370 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-12 16:47:52.371 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-12 16:47:52.371 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-12 16:47:52.371 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-12 16:47:52.373 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-12 16:47:52.374 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-12 16:47:52.378 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-12 16:47:52.378 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-12 16:47:52.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-12 16:47:52.380 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-12 16:47:52.380 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.381 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.383 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-12 16:47:52.383 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.User [READ]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.date_of_birth as date_of_4_2_0_, user0_.description as descript5_2_0_, user0_.name as name6_2_0_, user0_.password as password7_2_0_, user0_.phone as phone8_2_0_, user0_.state as state9_2_0_, user0_.username as usernam10_2_0_, user0_.zip_code as zip_cod11_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.date_of_birth as date_of_4_2_5_, user3_.description as descript5_2_5_, user3_.name as name6_2_5_, user3_.password as password7_2_5_, user3_.phone as phone8_2_5_, user3_.state as state9_2_5_, user3_.username as usernam10_2_5_, user3_.zip_code as zip_cod11_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-12 16:47:52.425 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.date_of_birth as date_of_4_2_1_, user0_.description as descript5_2_1_, user0_.name as name6_2_1_, user0_.password as password7_2_1_, user0_.phone as phone8_2_1_, user0_.state as state9_2_1_, user0_.username as usernam10_2_1_, user0_.zip_code as zip_cod11_2_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.presentreading as presentr5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.previousreading as previous7_0_0_, billings1_.readingDate as readingD8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-12 16:47:52.429 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.date_of_birth as date_of_4_2_1_, user0_.description as descript5_2_1_, user0_.name as name6_2_1_, user0_.password as password7_2_1_, user0_.phone as phone8_2_1_, user0_.state as state9_2_1_, user0_.username as usernam10_2_1_, user0_.zip_code as zip_cod11_2_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.presentreading as presentr5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.previousreading as previous7_0_0_, billings1_.readingDate as readingD8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-12 16:47:52.430 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Role
[DEBUG] 2020-12-12 16:47:52.430 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-12-12 16:47:52.430 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role as role2_1_, role_.user_id as user_id4_1_, role_.username as username3_1_ from role role_ where role_.id=?
[DEBUG] 2020-12-12 16:47:52.430 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into role (role, user_id, username, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-12 16:47:52.430 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update role set role=?, user_id=?, username=? where id=?
[DEBUG] 2020-12-12 16:47:52.430 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-12-12 16:47:52.430 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into role (role, user_id, username) values (?, ?, ?)
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1daae72]
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@265b0879]
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e476fd2]
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff178f1]
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.paidAmount
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.paymentDate
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.previousreading
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.readingDate
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-12 16:47:52.431 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79521fc0]
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d50d6eb]
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-12 16:47:52.432 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.433 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.date_of_birth as date_of_4_2_1_, user1_.description as descript5_2_1_, user1_.name as name6_2_1_, user1_.password as password7_2_1_, user1_.phone as phone8_2_1_, user1_.state as state9_2_1_, user1_.username as usernam10_2_1_, user1_.zip_code as zip_cod11_2_1_, billings2_.user_id as user_id9_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.paid_amt as paid_amt3_0_3_, billings2_.payment_date as payment_4_0_3_, billings2_.presentreading as presentr5_0_3_, billings2_.previous_balance as previous6_0_3_, billings2_.previousreading as previous7_0_3_, billings2_.readingDate as readingD8_0_3_, billings2_.user_id as user_id9_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2448b89]
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7b988b]
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f0f622b]
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc4cbc]
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-12 16:47:52.447 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.paidAmount
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.paymentDate
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.previousreading
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.readingDate
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46c9d404]
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b3e9cd]
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-12 16:47:52.448 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-12 16:47:52.450 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-12 16:47:52.450 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.450 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.451 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-12 16:47:52.451 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.date_of_birth as date_of_4_2_1_, user1_.description as descript5_2_1_, user1_.name as name6_2_1_, user1_.password as password7_2_1_, user1_.phone as phone8_2_1_, user1_.state as state9_2_1_, user1_.username as usernam10_2_1_, user1_.zip_code as zip_cod11_2_1_, billings2_.user_id as user_id9_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.paid_amt as paid_amt3_0_3_, billings2_.payment_date as payment_4_0_3_, billings2_.presentreading as presentr5_0_3_, billings2_.previous_balance as previous6_0_3_, billings2_.previousreading as previous7_0_3_, billings2_.readingDate as readingD8_0_3_, billings2_.user_id as user_id9_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-12 16:47:52.451 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-12 16:47:52.451 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Billing
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select id from billing where id =?
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select billing_.id, billing_.bill_amt as bill_amt2_0_, billing_.paid_amt as paid_amt3_0_, billing_.payment_date as payment_4_0_, billing_.presentreading as presentr5_0_, billing_.previous_balance as previous6_0_, billing_.previousreading as previous7_0_, billing_.readingDate as readingD8_0_, billing_.user_id as user_id9_0_ from billing billing_ where billing_.id=?
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into billing (bill_amt, paid_amt, payment_date, presentreading, previous_balance, previousreading, readingDate, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update billing set bill_amt=?, paid_amt=?, payment_date=?, presentreading=?, previous_balance=?, previousreading=?, readingDate=?, user_id=? where id=?
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from billing where id=?
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into billing (bill_amt, paid_amt, payment_date, presentreading, previous_balance, previousreading, readingDate, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37933328]
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ddce4b8]
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6969aa1e]
[DEBUG] 2020-12-12 16:47:52.452 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46de465c]
[DEBUG] 2020-12-12 16:47:52.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-12 16:47:52.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-12 16:47:52.453 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41894eef]
[DEBUG] 2020-12-12 16:47:52.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-12 16:47:52.453 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-12 16:47:52.454 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-12 16:47:52.464 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-12 16:47:52.464 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.465 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.472 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-12 16:47:52.472 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Billing [NONE]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.date_of_birth as date_of_4_2_1_, user1_.description as descript5_2_1_, user1_.name as name6_2_1_, user1_.password as password7_2_1_, user1_.phone as phone8_2_1_, user1_.state as state9_2_1_, user1_.username as usernam10_2_1_, user1_.zip_code as zip_cod11_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75511c24]
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-12 16:47:52.473 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119c1396]
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67244639]
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1574748f]
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75a3df68]
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-12 16:47:52.474 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.475 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.476 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-12 16:47:52.477 [http-nio-8080-exec-5] EntityLoader - Static select for entity BillingSystem.entity.Billing [READ]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.date_of_birth as date_of_4_2_1_, user1_.description as descript5_2_1_, user1_.name as name6_2_1_, user1_.password as password7_2_1_, user1_.phone as phone8_2_1_, user1_.state as state9_2_1_, user1_.username as usernam10_2_1_, user1_.zip_code as zip_cod11_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-12 16:47:52.477 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-12 16:47:52.477 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-12 16:47:52.501 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8dfa105]
[DEBUG] 2020-12-12 16:47:52.502 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13db0095]
[DEBUG] 2020-12-12 16:47:52.502 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-12 16:47:52.502 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-12 16:47:52.502 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ece4bfc]
[DEBUG] 2020-12-12 16:47:52.502 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-12 16:47:52.502 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-12 16:47:52.502 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4c62e6]
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546bc56c]
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-12 16:47:52.503 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.513 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.514 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.roles].<elements>)
             - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:2>, path=[BillingSystem.entity.User.roles].<elements>.user)
                - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:3>, path=[BillingSystem.entity.User.roles].<elements>.user.billings)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:4>, path=[BillingSystem.entity.User.roles].<elements>.user.billings.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {role2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.User)
                      - SQL table alias mapping - user1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] CollectionLoader - Static select for collection BillingSystem.entity.User.roles: select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60c332e2]
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a536e2d]
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-12 16:47:52.515 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-12 16:47:52.516 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-12 16:47:52.517 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.billings)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.billings])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.billings].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.billings)
          - SQL table alias mapping - billings0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Billing)
                - SQL table alias mapping - billings0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-12-12 16:47:52.517 [http-nio-8080-exec-5] CollectionLoader - Static select for collection BillingSystem.entity.User.billings: select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:52.664 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-12-12 16:47:52.667 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-12-12 16:47:52.672 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-12-12 16:47:52.701 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-12-12 16:47:52.701 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-12-12 16:47:52.701 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-12-12 16:47:52.701 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-12-12 16:47:52.726 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6158cf42
[DEBUG] 2020-12-12 16:47:52.733 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 1a20e89f-e5e1-4b80-8cb7-5c68c01863d0 (<unnamed>)
[DEBUG] 2020-12-12 16:47:52.733 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-12-12 16:47:53.186 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-12-12 16:47:53.266 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-12-12 16:47:53.316 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@36a95583
[DEBUG] 2020-12-12 16:47:53.404 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-12 16:47:53.410 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-12 16:47:53.439 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'BillingSystem'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-12-12 16:47:53.479 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-12 16:47:53.558 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : BillingSystem.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-12 16:47:53.560 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-12 16:47:53.566 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-12 16:47:53.569 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-12-12 16:47:53.613 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-12 16:47:53.613 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-12 16:47:53.613 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=BillingSystem.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_2_, user0_.city as city3_2_, user0_.date_of_birth as date_of_4_2_, user0_.description as descript5_2_, user0_.name as name6_2_, user0_.password as password7_2_, user0_.phone as phone8_2_, user0_.state as state9_2_, user0_.username as usernam10_2_, user0_.zip_code as zip_cod11_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=BillingSystem.entity.User}}

[DEBUG] 2020-12-12 16:47:53.614 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-12 16:47:53.636 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-12 16:47:53.636 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.date_of_birth as date_of_4_2_, user0_.description as descript5_2_, user0_.name as name6_2_, user0_.password as password7_2_, user0_.phone as phone8_2_, user0_.state as state9_2_, user0_.username as usernam10_2_, user0_.zip_code as zip_cod11_2_ from user user0_
[DEBUG] 2020-12-12 16:47:53.636 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-12 16:47:53.682 [http-nio-8080-exec-5] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.date_of_birth as date_of_4_2_, user0_.description as descript5_2_, user0_.name as name6_2_, user0_.password as password7_2_, user0_.phone as phone8_2_, user0_.state as state9_2_, user0_.username as usernam10_2_, user0_.zip_code as zip_cod11_2_ from user user0_
[DEBUG] 2020-12-12 16:47:53.793 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2020-12-12 16:47:53.796 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:47:53.836 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2020-12-12 16:47:53.836 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#2]
[DEBUG] 2020-12-12 16:47:53.839 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2020-12-12 16:47:53.840 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#3]
[DEBUG] 2020-12-12 16:47:53.841 [http-nio-8080-exec-5] Loader - Result set row: 3
[DEBUG] 2020-12-12 16:47:53.841 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#4]
[DEBUG] 2020-12-12 16:47:53.841 [http-nio-8080-exec-5] Loader - Result set row: 4
[DEBUG] 2020-12-12 16:47:53.841 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#5]
[DEBUG] 2020-12-12 16:47:53.842 [http-nio-8080-exec-5] Loader - Result set row: 5
[DEBUG] 2020-12-12 16:47:53.842 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#6]
[DEBUG] 2020-12-12 16:47:53.842 [http-nio-8080-exec-5] Loader - Result set row: 6
[DEBUG] 2020-12-12 16:47:53.842 [http-nio-8080-exec-5] Loader - Result row: EntityKey[BillingSystem.entity.User#806]
[DEBUG] 2020-12-12 16:47:53.845 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:47:53.851 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:47:53.852 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.852 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.852 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1963-01-01
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret1
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.878 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = JCoyne
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:47:53.879 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1973-01-01
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Fred Hanson
[DEBUG] 2020-12-12 16:47:53.881 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.888 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret2
[DEBUG] 2020-12-12 16:47:53.890 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = FHanson
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:47:53.891 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.897 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-12-12 16:47:53.897 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#3]
[DEBUG] 2020-12-12 16:47:53.897 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:47:53.897 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1983-01-01
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:47:53.898 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Barney Curry
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret3
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 608625444
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = BCurry
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.900 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#3]
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#4]
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Verona
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1993-01-01
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Karen Kmack
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret4
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 608625111
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.901 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.903 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.903 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:47:53.903 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.904 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = KKmack
[DEBUG] 2020-12-12 16:47:53.905 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.907 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:47:53.908 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.910 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#4]
[DEBUG] 2020-12-12 16:47:53.910 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#5]
[DEBUG] 2020-12-12 16:47:53.910 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:47:53.911 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.911 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.911 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1984-01-01
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Dianne Klein
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret5
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086252662
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = Dklein
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:47:53.916 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#5]
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#6]
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Sun Prairie
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 2001-01-01
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret6
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086257722
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = DTilman
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#6]
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#806]
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 456 Street st
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1984-01-01
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = customer
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Guru Katuwal
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086925566
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = gkatuwal
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:47:53.917 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.918 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#806]
[DEBUG] 2020-12-12 16:47:53.921 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-12 16:47:53.921 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:53.939 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-12 16:47:53.943 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:53.943 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-12 16:47:53.943 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:53.943 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:53.943 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:53.944 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:47:53.944 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:53.952 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:47:53.952 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-12 16:47:53.962 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billAmount` : value = 140.0
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `paidAmount` : value = 40.0
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`paidAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `paymentDate` : value = 2020-10-10
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`paymentDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `presentreading` : value = 90.0
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `previousBalance` : value = 200.0
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `previousreading` : value = 75.0
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`previousreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `readingDate` : value = 2020-10-10
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`readingDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 806
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:47:53.971 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-12 16:47:53.972 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:53.972 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:47:53.972 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:53.972 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:53.972 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:53.972 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-12 16:47:53.972 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:53.976 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-12 16:47:53.976 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:53.976 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-12 16:47:53.976 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:53.977 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:53.977 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:53.981 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-12 16:47:53.981 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-12 16:47:53.985 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:53.999 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-12 16:47:54.000 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.000 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-12 16:47:54.000 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.000 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.000 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.000 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-12 16:47:54.000 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:54.002 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-12 16:47:54.002 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.002 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-12 16:47:54.002 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.002 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.002 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.002 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#4]
[DEBUG] 2020-12-12 16:47:54.003 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:54.011 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#4]
[DEBUG] 2020-12-12 16:47:54.012 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.012 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#4]
[DEBUG] 2020-12-12 16:47:54.012 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.012 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.012 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.012 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-12-12 16:47:54.012 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:54.013 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-12-12 16:47:54.013 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.014 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-12-12 16:47:54.014 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.014 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.014 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.014 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-12 16:47:54.014 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:54.020 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-12 16:47:54.021 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.021 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-12 16:47:54.021 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.021 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.021 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.021 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-12 16:47:54.021 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-12 16:47:54.027 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:54.033 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-12 16:47:54.033 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.033 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-12 16:47:54.033 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.033 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.033 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.033 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-12 16:47:54.034 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:54.036 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-12 16:47:54.036 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.036 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-12 16:47:54.036 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.036 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.036 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.036 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:47:54.037 [http-nio-8080-exec-5] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:47:54.046 [http-nio-8080-exec-5] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:47:54.051 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:47:54.051 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.051 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:47:54.051 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:47:54.051 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:47:54.055 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:47:54.064 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-12 16:48:10.755 [http-nio-8080-exec-8] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.date_of_birth as date_of_4_2_0_, user0_.description as descript5_2_0_, user0_.name as name6_2_0_, user0_.password as password7_2_0_, user0_.phone as phone8_2_0_, user0_.state as state9_2_0_, user0_.username as usernam10_2_0_, user0_.zip_code as zip_cod11_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.date_of_birth as date_of_4_2_5_, user3_.description as descript5_2_5_, user3_.name as name6_2_5_, user3_.password as password7_2_5_, user3_.phone as phone8_2_5_, user3_.state as state9_2_5_, user3_.username as usernam10_2_5_, user3_.zip_code as zip_cod11_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-12 16:48:10.771 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-12 16:48:10.771 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-12 16:48:10.772 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.roles#4]
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#4]
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `city` : value = Verona
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1993-01-01
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Karen Kmack
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret4
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `phone` : value = 608625111
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = KKmack
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:10.773 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#4]
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#4]
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.778 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : BillingSystem.entity.User#4
[DEBUG] 2020-12-12 16:48:10.779 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-12 16:48:10.782 [http-nio-8080-exec-8] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-12-12 16:48:10.783 [http-nio-8080-exec-8] TransactionImpl - begin
[DEBUG] 2020-12-12 16:48:10.814 [http-nio-8080-exec-8] TransactionImpl - committing
[DEBUG] 2020-12-12 16:48:10.814 [http-nio-8080-exec-8] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-12-12 16:48:10.818 [http-nio-8080-exec-8] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-12-12 16:48:10.824 [http-nio-8080-exec-8] Collections - Collection dereferenced: [BillingSystem.entity.User.billings#4]
[DEBUG] 2020-12-12 16:48:10.824 [http-nio-8080-exec-8] Collections - Collection dereferenced: [BillingSystem.entity.User.roles#4]
[DEBUG] 2020-12-12 16:48:10.824 [http-nio-8080-exec-8] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-12-12 16:48:10.824 [http-nio-8080-exec-8] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 2 removals to 2 collections
[DEBUG] 2020-12-12 16:48:10.828 [http-nio-8080-exec-8] EntityPrinter - Listing entities:
[DEBUG] 2020-12-12 16:48:10.828 [http-nio-8080-exec-8] EntityPrinter - BillingSystem.entity.User{address=123 Street st, city=Verona, roles=[], billings=[], description=Employee, dateOfBirth=1993-01-01, zipcode=53711, password=SuperSecret4, phone=608625111, name=Karen Kmack, id=4, state=WI, username=KKmack}
[DEBUG] 2020-12-12 16:48:10.842 [http-nio-8080-exec-8] SQL - delete from user where id=?
[DEBUG] 2020-12-12 16:48:10.853 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-12 16:48:10.857 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-12 16:48:10.857 [http-nio-8080-exec-8] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-12-12 16:48:10.858 [http-nio-8080-exec-8] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-12-12 16:48:10.859 [http-nio-8080-exec-8] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.date_of_birth as date_of_4_2_, user0_.description as descript5_2_, user0_.name as name6_2_, user0_.password as password7_2_, user0_.phone as phone8_2_, user0_.state as state9_2_, user0_.username as usernam10_2_, user0_.zip_code as zip_cod11_2_ from user user0_
[DEBUG] 2020-12-12 16:48:10.869 [http-nio-8080-exec-8] Loader - Result set row: 0
[DEBUG] 2020-12-12 16:48:10.869 [http-nio-8080-exec-8] Loader - Result row: EntityKey[BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:48:10.869 [http-nio-8080-exec-8] Loader - Result set row: 1
[DEBUG] 2020-12-12 16:48:10.871 [http-nio-8080-exec-8] Loader - Result row: EntityKey[BillingSystem.entity.User#2]
[DEBUG] 2020-12-12 16:48:10.871 [http-nio-8080-exec-8] Loader - Result set row: 2
[DEBUG] 2020-12-12 16:48:10.871 [http-nio-8080-exec-8] Loader - Result row: EntityKey[BillingSystem.entity.User#3]
[DEBUG] 2020-12-12 16:48:10.871 [http-nio-8080-exec-8] Loader - Result set row: 3
[DEBUG] 2020-12-12 16:48:10.871 [http-nio-8080-exec-8] Loader - Result row: EntityKey[BillingSystem.entity.User#5]
[DEBUG] 2020-12-12 16:48:10.872 [http-nio-8080-exec-8] Loader - Result set row: 4
[DEBUG] 2020-12-12 16:48:10.872 [http-nio-8080-exec-8] Loader - Result row: EntityKey[BillingSystem.entity.User#6]
[DEBUG] 2020-12-12 16:48:10.872 [http-nio-8080-exec-8] Loader - Result set row: 5
[DEBUG] 2020-12-12 16:48:10.872 [http-nio-8080-exec-8] Loader - Result row: EntityKey[BillingSystem.entity.User#806]
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1963-01-01
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret1
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = JCoyne
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:10.873 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1973-01-01
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Fred Hanson
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret2
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = FHanson
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:10.874 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#3]
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1983-01-01
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Barney Curry
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret3
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `phone` : value = 608625444
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = BCurry
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:10.875 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#3]
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#5]
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1984-01-01
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Dianne Klein
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret5
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `phone` : value = 6086252662
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = Dklein
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:10.877 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#5]
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#6]
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `city` : value = Sun Prairie
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 2001-01-01
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret6
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `phone` : value = 6086257722
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.878 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = DTilman
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#6]
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#806]
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `address` : value = 456 Street st
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1984-01-01
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `description` : value = customer
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Guru Katuwal
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `phone` : value = 6086925566
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `username` : value = gkatuwal
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.879 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#806]
[DEBUG] 2020-12-12 16:48:10.880 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-12 16:48:10.880 [http-nio-8080-exec-8] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:48:10.884 [http-nio-8080-exec-8] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:48:10.891 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:48:10.891 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-12 16:48:10.891 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:48:10.892 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-12 16:48:10.892 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `billAmount` : value = 140.0
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `paidAmount` : value = 40.0
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`paidAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `paymentDate` : value = 2020-10-10
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`paymentDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `presentreading` : value = 90.0
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `previousBalance` : value = 200.0
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `previousreading` : value = 75.0
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`previousreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `readingDate` : value = 2020-10-10
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`readingDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 806
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-12 16:48:10.893 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.895 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.895 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.895 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-12 16:48:10.895 [http-nio-8080-exec-8] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:48:10.896 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-12 16:48:10.896 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.896 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-12 16:48:10.896 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.896 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.898 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.899 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-12 16:48:10.899 [http-nio-8080-exec-8] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-12 16:48:10.902 [http-nio-8080-exec-8] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:48:10.903 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-12 16:48:10.904 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.904 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-12 16:48:10.904 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.904 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.904 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.905 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-12 16:48:10.905 [http-nio-8080-exec-8] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:48:10.908 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-12 16:48:10.909 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.910 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-12 16:48:10.910 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.910 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.910 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.910 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-12 16:48:10.910 [http-nio-8080-exec-8] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-12 16:48:10.911 [http-nio-8080-exec-8] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:48:10.914 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-12 16:48:10.915 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.915 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-12 16:48:10.915 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.915 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.915 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.915 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-12 16:48:10.915 [http-nio-8080-exec-8] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:48:10.917 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-12 16:48:10.917 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.917 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-12 16:48:10.917 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.918 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.918 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.918 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-12 16:48:10.918 [http-nio-8080-exec-8] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:48:10.919 [http-nio-8080-exec-8] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.date_of_birth as date_of_4_2_2_, user1_.description as descript5_2_2_, user1_.name as name6_2_2_, user1_.password as password7_2_2_, user1_.phone as phone8_2_2_, user1_.state as state9_2_2_, user1_.username as usernam10_2_2_, user1_.zip_code as zip_cod11_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:48:10.925 [http-nio-8080-exec-8] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-12 16:48:10.927 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:48:10.927 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.927 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:48:10.927 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:10.927 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:10.928 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-12 16:48:10.928 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-12 16:48:16.766 [http-nio-8080-exec-9] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.date_of_birth as date_of_4_2_0_, user0_.description as descript5_2_0_, user0_.name as name6_2_0_, user0_.password as password7_2_0_, user0_.phone as phone8_2_0_, user0_.state as state9_2_0_, user0_.username as usernam10_2_0_, user0_.zip_code as zip_cod11_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.date_of_birth as date_of_4_2_5_, user3_.description as descript5_2_5_, user3_.name as name6_2_5_, user3_.password as password7_2_5_, user3_.phone as phone8_2_5_, user3_.state as state9_2_5_, user3_.username as usernam10_2_5_, user3_.zip_code as zip_cod11_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-12 16:48:16.774 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-12 16:48:16.780 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-12 16:48:16.785 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:48:16.785 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:48:16.785 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:48:16.785 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-12 16:48:16.785 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.785 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1963-01-01
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret1
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `username` : value = JCoyne
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-12 16:48:16.786 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:16.787 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-12 16:48:16.787 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-12 16:48:16.788 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-12 16:48:16.788 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : BillingSystem.entity.User#1
[DEBUG] 2020-12-12 16:48:16.795 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
