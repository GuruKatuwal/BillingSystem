[DEBUG] 2020-12-15 15:10:29.183 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-12-15 15:10:29.209 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-12-15 15:10:29.235 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-12-15 15:10:29.607 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-12-15 15:10:29.611 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-12-15 15:10:29.987 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-12-15 15:10:29.993 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-12-15 15:10:30.099 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-12-15 15:10:31.122 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-12-15 15:10:31.214 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-12-15 15:10:31.219 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-12-15 15:10:31.270 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-12-15 15:10:31.417 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@290ac850
[DEBUG] 2020-12-15 15:10:31.417 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@290ac850
[DEBUG] 2020-12-15 15:10:31.417 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@290ac850
[DEBUG] 2020-12-15 15:10:31.419 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@68d1ac1
[DEBUG] 2020-12-15 15:10:31.440 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5392a117
[DEBUG] 2020-12-15 15:10:31.440 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@9f6b86a
[DEBUG] 2020-12-15 15:10:31.445 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5cffb48c
[DEBUG] 2020-12-15 15:10:31.445 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5cffb48c
[DEBUG] 2020-12-15 15:10:31.446 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5cffb48c
[DEBUG] 2020-12-15 15:10:31.447 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2145f56e
[DEBUG] 2020-12-15 15:10:31.448 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2145f56e
[DEBUG] 2020-12-15 15:10:31.448 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2145f56e
[DEBUG] 2020-12-15 15:10:31.452 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6056e15e
[DEBUG] 2020-12-15 15:10:31.454 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6056e15e
[DEBUG] 2020-12-15 15:10:31.462 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6056e15e
[DEBUG] 2020-12-15 15:10:31.474 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@56f9af6e
[DEBUG] 2020-12-15 15:10:31.474 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@56f9af6e
[DEBUG] 2020-12-15 15:10:31.474 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56f9af6e
[DEBUG] 2020-12-15 15:10:31.481 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45fdfda1
[DEBUG] 2020-12-15 15:10:31.481 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@45fdfda1
[DEBUG] 2020-12-15 15:10:31.481 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@45fdfda1
[DEBUG] 2020-12-15 15:10:31.485 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1b945616
[DEBUG] 2020-12-15 15:10:31.486 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1b945616
[DEBUG] 2020-12-15 15:10:31.486 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b945616
[DEBUG] 2020-12-15 15:10:31.487 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@763c93e3
[DEBUG] 2020-12-15 15:10:31.487 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@763c93e3
[DEBUG] 2020-12-15 15:10:31.497 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@763c93e3
[DEBUG] 2020-12-15 15:10:31.501 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@359c486a
[DEBUG] 2020-12-15 15:10:31.501 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@359c486a
[DEBUG] 2020-12-15 15:10:31.502 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2552c78b
[DEBUG] 2020-12-15 15:10:31.506 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2552c78b
[DEBUG] 2020-12-15 15:10:31.510 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@fb737b7
[DEBUG] 2020-12-15 15:10:31.510 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@fb737b7
[DEBUG] 2020-12-15 15:10:31.510 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9faff0
[DEBUG] 2020-12-15 15:10:31.517 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ba15106
[DEBUG] 2020-12-15 15:10:31.525 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@ac12f10
[DEBUG] 2020-12-15 15:10:31.526 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@ac12f10
[DEBUG] 2020-12-15 15:10:31.527 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4135816
[DEBUG] 2020-12-15 15:10:31.527 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4135816
[DEBUG] 2020-12-15 15:10:31.545 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2d34dd19
[DEBUG] 2020-12-15 15:10:31.545 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2d34dd19
[DEBUG] 2020-12-15 15:10:31.547 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d227e41
[DEBUG] 2020-12-15 15:10:31.547 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d227e41
[DEBUG] 2020-12-15 15:10:31.553 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@53755b4d
[DEBUG] 2020-12-15 15:10:31.553 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@53755b4d
[DEBUG] 2020-12-15 15:10:31.575 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@46897292
[DEBUG] 2020-12-15 15:10:31.576 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@46897292
[DEBUG] 2020-12-15 15:10:31.585 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@24f4c0b
[DEBUG] 2020-12-15 15:10:31.585 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@24f4c0b
[DEBUG] 2020-12-15 15:10:31.587 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@79ab2be0
[DEBUG] 2020-12-15 15:10:31.587 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@79ab2be0
[DEBUG] 2020-12-15 15:10:31.592 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4a2c5eeb
[DEBUG] 2020-12-15 15:10:31.593 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4a2c5eeb
[DEBUG] 2020-12-15 15:10:31.602 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@b1cf6aa
[DEBUG] 2020-12-15 15:10:31.602 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b1cf6aa
[DEBUG] 2020-12-15 15:10:31.603 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@35e48380
[DEBUG] 2020-12-15 15:10:31.607 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@35e48380
[DEBUG] 2020-12-15 15:10:31.613 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f3836b9
[DEBUG] 2020-12-15 15:10:31.613 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f3836b9
[DEBUG] 2020-12-15 15:10:31.615 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f3836b9
[DEBUG] 2020-12-15 15:10:31.617 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@72aa79ae
[DEBUG] 2020-12-15 15:10:31.623 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2f212386
[DEBUG] 2020-12-15 15:10:31.623 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f212386
[DEBUG] 2020-12-15 15:10:31.623 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f212386
[DEBUG] 2020-12-15 15:10:31.624 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2f8b772e
[DEBUG] 2020-12-15 15:10:31.625 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@22647271
[DEBUG] 2020-12-15 15:10:31.625 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22647271
[DEBUG] 2020-12-15 15:10:31.630 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@66a6d020
[DEBUG] 2020-12-15 15:10:31.630 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66a6d020
[DEBUG] 2020-12-15 15:10:31.631 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1f6278ac
[DEBUG] 2020-12-15 15:10:31.631 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1f6278ac
[DEBUG] 2020-12-15 15:10:31.632 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4d8a36e1
[DEBUG] 2020-12-15 15:10:31.632 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d8a36e1
[DEBUG] 2020-12-15 15:10:31.633 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28f9c872
[DEBUG] 2020-12-15 15:10:31.633 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28f9c872
[DEBUG] 2020-12-15 15:10:31.633 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2c881f15
[DEBUG] 2020-12-15 15:10:31.634 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@144bea68
[DEBUG] 2020-12-15 15:10:31.634 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@144bea68
[DEBUG] 2020-12-15 15:10:31.634 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@144bea68
[DEBUG] 2020-12-15 15:10:31.636 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50ceee33
[DEBUG] 2020-12-15 15:10:31.636 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50ceee33
[DEBUG] 2020-12-15 15:10:31.641 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50ceee33
[DEBUG] 2020-12-15 15:10:31.647 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@465c0794
[DEBUG] 2020-12-15 15:10:31.648 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@63d99d61
[DEBUG] 2020-12-15 15:10:31.650 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@14ecd231
[DEBUG] 2020-12-15 15:10:31.650 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@14ecd231
[DEBUG] 2020-12-15 15:10:31.650 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@14ecd231
[DEBUG] 2020-12-15 15:10:31.651 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d80bb7f
[DEBUG] 2020-12-15 15:10:31.651 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d80bb7f
[DEBUG] 2020-12-15 15:10:31.651 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d80bb7f
[DEBUG] 2020-12-15 15:10:31.652 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7006aa40
[DEBUG] 2020-12-15 15:10:31.652 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@34c912f6
[DEBUG] 2020-12-15 15:10:31.654 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@223f04c1
[DEBUG] 2020-12-15 15:10:31.654 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@223f04c1
[DEBUG] 2020-12-15 15:10:31.654 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@50114d85
[DEBUG] 2020-12-15 15:10:31.656 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7973ae7e
[DEBUG] 2020-12-15 15:10:31.656 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7973ae7e
[DEBUG] 2020-12-15 15:10:31.657 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@e421bdc
[DEBUG] 2020-12-15 15:10:31.657 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e421bdc
[DEBUG] 2020-12-15 15:10:31.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@847bddf
[DEBUG] 2020-12-15 15:10:31.659 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4abcec68
[DEBUG] 2020-12-15 15:10:31.660 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3ba228c7
[DEBUG] 2020-12-15 15:10:31.667 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@766fd72f
[DEBUG] 2020-12-15 15:10:31.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@766fd72f
[DEBUG] 2020-12-15 15:10:31.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c8a1bfc
[DEBUG] 2020-12-15 15:10:31.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@20243164
[DEBUG] 2020-12-15 15:10:31.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d8af866
[DEBUG] 2020-12-15 15:10:31.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a6e36fb
[DEBUG] 2020-12-15 15:10:31.668 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@462793b1
[DEBUG] 2020-12-15 15:10:31.678 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@47092500
[DEBUG] 2020-12-15 15:10:31.678 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2daabc4f
[DEBUG] 2020-12-15 15:10:31.679 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6588eef
[DEBUG] 2020-12-15 15:10:31.785 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-12-15 15:10:31.786 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-12-15 15:10:31.789 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-15 15:10:31.791 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-12-15 15:10:31.795 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-12-15 15:10:31.799 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-12-15 15:10:31.801 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-12-15 15:10:31.803 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-15 15:10:31.803 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-12-15 15:10:31.804 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-12-15 15:10:31.804 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-12-15 15:10:31.805 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-12-15 15:10:31.805 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-12-15 15:10:31.808 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-12-15 15:10:31.818 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/BillingSystem
[INFO ] 2020-12-15 15:10:31.819 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-12-15 15:10:31.819 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-12-15 15:10:32.317 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-12-15 15:10:33.161 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-12-15 15:10:33.164 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-12-15 15:10:33.164 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-12-15 15:10:33.335 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-12-15 15:10:33.425 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-12-15 15:10:33.527 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-12-15 15:10:33.683 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-12-15 15:10:33.712 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2819511e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ccec473]
[DEBUG] 2020-12-15 15:10:33.964 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:34.093 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-15 15:10:34.140 [http-nio-8080-exec-3] EntityBinder - Import with entity name User
[DEBUG] 2020-12-15 15:10:34.151 [http-nio-8080-exec-3] EntityBinder - Bind entity BillingSystem.entity.User on table user
[DEBUG] 2020-12-15 15:10:34.300 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.319 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-15 15:10:34.331 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:id]
[DEBUG] 2020-12-15 15:10:34.343 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-15 15:10:34.355 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2020-12-15 15:10:34.370 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-15 15:10:34.375 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.379 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property address with lazy=false
[DEBUG] 2020-12-15 15:10:34.379 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:address]
[DEBUG] 2020-12-15 15:10:34.379 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for address
[DEBUG] 2020-12-15 15:10:34.379 [http-nio-8080-exec-3] PropertyBinder - Building property address
[DEBUG] 2020-12-15 15:10:34.381 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-15 15:10:34.392 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.401 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.443 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.444 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=billings_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.448 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='billings_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-15 15:10:34.452 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-15 15:10:34.452 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-12-15 15:10:34.453 [http-nio-8080-exec-3] CollectionBinder - Collection role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:34.457 [http-nio-8080-exec-3] PropertyBinder - Building property billings
[DEBUG] 2020-12-15 15:10:34.457 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=city, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.458 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property city with lazy=false
[DEBUG] 2020-12-15 15:10:34.458 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:city]
[DEBUG] 2020-12-15 15:10:34.458 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for city
[DEBUG] 2020-12-15 15:10:34.463 [http-nio-8080-exec-3] PropertyBinder - Building property city
[DEBUG] 2020-12-15 15:10:34.463 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.463 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2020-12-15 15:10:34.463 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:description]
[DEBUG] 2020-12-15 15:10:34.463 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2020-12-15 15:10:34.463 [http-nio-8080-exec-3] PropertyBinder - Building property description
[DEBUG] 2020-12-15 15:10:34.463 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.464 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-12-15 15:10:34.464 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:name]
[DEBUG] 2020-12-15 15:10:34.464 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-12-15 15:10:34.464 [http-nio-8080-exec-3] PropertyBinder - Building property name
[DEBUG] 2020-12-15 15:10:34.464 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.464 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-12-15 15:10:34.464 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:password]
[DEBUG] 2020-12-15 15:10:34.467 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-12-15 15:10:34.468 [http-nio-8080-exec-3] PropertyBinder - Building property password
[DEBUG] 2020-12-15 15:10:34.468 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=phone, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.468 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property phone with lazy=false
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:phone]
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for phone
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] PropertyBinder - Building property phone
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.469 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-12-15 15:10:34.470 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-15 15:10:34.470 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
[DEBUG] 2020-12-15 15:10:34.472 [http-nio-8080-exec-3] CollectionBinder - Collection role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:34.474 [http-nio-8080-exec-3] PropertyBinder - Building property roles
[DEBUG] 2020-12-15 15:10:34.477 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=state, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.479 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property state with lazy=false
[DEBUG] 2020-12-15 15:10:34.481 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:state]
[DEBUG] 2020-12-15 15:10:34.485 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for state
[DEBUG] 2020-12-15 15:10:34.486 [http-nio-8080-exec-3] PropertyBinder - Building property state
[DEBUG] 2020-12-15 15:10:34.487 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.487 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-15 15:10:34.487 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:username]
[DEBUG] 2020-12-15 15:10:34.487 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-15 15:10:34.487 [http-nio-8080-exec-3] PropertyBinder - Building property username
[DEBUG] 2020-12-15 15:10:34.487 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=zip_code, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.488 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property zipcode with lazy=false
[DEBUG] 2020-12-15 15:10:34.488 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.User:zipcode]
[DEBUG] 2020-12-15 15:10:34.488 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for zipcode
[DEBUG] 2020-12-15 15:10:34.488 [http-nio-8080-exec-3] PropertyBinder - Building property zipcode
[DEBUG] 2020-12-15 15:10:34.489 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:10:34.489 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-15 15:10:34.490 [http-nio-8080-exec-3] EntityBinder - Import with entity name Billing
[DEBUG] 2020-12-15 15:10:34.490 [http-nio-8080-exec-3] EntityBinder - Bind entity BillingSystem.entity.Billing on table billing
[DEBUG] 2020-12-15 15:10:34.500 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.500 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-15 15:10:34.500 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:id]
[DEBUG] 2020-12-15 15:10:34.500 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-15 15:10:34.501 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2020-12-15 15:10:34.501 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-15 15:10:34.513 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=bill_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.517 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property billAmount with lazy=false
[DEBUG] 2020-12-15 15:10:34.517 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:billAmount]
[DEBUG] 2020-12-15 15:10:34.517 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for billAmount
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] PropertyBinder - Building property billAmount
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=paid_amt, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property paidAmount with lazy=false
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paidAmount]
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for paidAmount
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] PropertyBinder - Building property paidAmount
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=payment_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.518 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property paymentDate with lazy=false
[DEBUG] 2020-12-15 15:10:34.519 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:paymentDate]
[DEBUG] 2020-12-15 15:10:34.519 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for paymentDate
[DEBUG] 2020-12-15 15:10:34.519 [http-nio-8080-exec-3] PropertyBinder - Building property paymentDate
[DEBUG] 2020-12-15 15:10:34.519 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=presentreading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.519 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property presentreading with lazy=false
[DEBUG] 2020-12-15 15:10:34.520 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:presentreading]
[DEBUG] 2020-12-15 15:10:34.521 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for presentreading
[DEBUG] 2020-12-15 15:10:34.522 [http-nio-8080-exec-3] PropertyBinder - Building property presentreading
[DEBUG] 2020-12-15 15:10:34.522 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previous_balance, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.522 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property previousBalance with lazy=false
[DEBUG] 2020-12-15 15:10:34.522 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousBalance]
[DEBUG] 2020-12-15 15:10:34.522 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for previousBalance
[DEBUG] 2020-12-15 15:10:34.522 [http-nio-8080-exec-3] PropertyBinder - Building property previousBalance
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=previousreading, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property previousreading with lazy=false
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:previousreading]
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for previousreading
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] PropertyBinder - Building property previousreading
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=readingDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property readingDate with lazy=false
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Billing:readingDate]
[DEBUG] 2020-12-15 15:10:34.523 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for readingDate
[DEBUG] 2020-12-15 15:10:34.524 [http-nio-8080-exec-3] PropertyBinder - Building property readingDate
[DEBUG] 2020-12-15 15:10:34.524 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-15 15:10:34.524 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(billing), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.533 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-12-15 15:10:34.534 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:10:34.537 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-12-15 15:10:34.537 [http-nio-8080-exec-3] EntityBinder - Import with entity name Role
[DEBUG] 2020-12-15 15:10:34.537 [http-nio-8080-exec-3] EntityBinder - Bind entity BillingSystem.entity.Role on table role
[DEBUG] 2020-12-15 15:10:34.553 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.554 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-12-15 15:10:34.554 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:id]
[DEBUG] 2020-12-15 15:10:34.554 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-12-15 15:10:34.554 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:role]
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] PropertyBinder - Building property role
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2020-12-15 15:10:34.555 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [BillingSystem.entity.Role:username]
[DEBUG] 2020-12-15 15:10:34.556 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2020-12-15 15:10:34.556 [http-nio-8080-exec-3] PropertyBinder - Building property username
[DEBUG] 2020-12-15 15:10:34.565 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-15 15:10:34.565 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for address
[DEBUG] 2020-12-15 15:10:34.565 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for city
[DEBUG] 2020-12-15 15:10:34.565 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2020-12-15 15:10:34.565 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for phone
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for state
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for zipcode
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for billAmount
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for paidAmount
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for paymentDate
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for presentreading
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for previousBalance
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for previousreading
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for readingDate
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2020-12-15 15:10:34.566 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2020-12-15 15:10:34.583 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2020-12-15 15:10:34.583 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [billing]
[DEBUG] 2020-12-15 15:10:34.583 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [role]
[DEBUG] 2020-12-15 15:10:34.584 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:34.584 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.billings through a foreign key
[DEBUG] 2020-12-15 15:10:34.585 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: BillingSystem.entity.User.billings -> billing
[DEBUG] 2020-12-15 15:10:34.595 [http-nio-8080-exec-3] TableBinder - Retrieving property BillingSystem.entity.Billing.user
[DEBUG] 2020-12-15 15:10:34.595 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user_id, one-to-many: BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:10:34.595 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:34.595 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: BillingSystem.entity.User.roles through a foreign key
[DEBUG] 2020-12-15 15:10:34.595 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: BillingSystem.entity.User.roles -> role
[DEBUG] 2020-12-15 15:10:34.598 [http-nio-8080-exec-3] TableBinder - Retrieving property BillingSystem.entity.Role.role
[DEBUG] 2020-12-15 15:10:34.599 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: role, one-to-many: BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:10:34.605 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:34.607 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:34.607 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:34.629 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:34.629 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:34.629 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:34.775 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2020-12-15 15:10:34.780 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2020-12-15 15:10:34.780 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-12-15 15:10:34.780 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-12-15 15:10:34.780 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2020-12-15 15:10:34.780 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-12-15 15:10:34.780 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2020-12-15 15:10:34.781 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-12-15 15:10:34.782 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2020-12-15 15:10:34.783 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2020-12-15 15:10:35.044 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-12-15 15:10:35.117 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-12-15 15:10:35.118 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2020-11-04, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.9.1, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-58-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, tomee.remote.support=true, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_BillingSystem_2, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@783a13, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.9.1+1-Ubuntu-0ubuntu1.18.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/BillingSystem, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2020-12-15 15:10:35.168 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-15 15:10:35.168 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:35.208 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-15 15:10:35.208 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:10:35.210 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-15 15:10:35.213 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:10:35.230 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-12-15 15:10:35.231 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-12-15 15:10:35.232 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2819511e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bc7faab]
[DEBUG] 2020-12-15 15:10:35.391 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-15 15:10:35.396 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:35.492 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.User] is safe
[DEBUG] 2020-12-15 15:10:35.492 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:36.434 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-15 15:10:36.435 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:10:36.445 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Role] is safe
[DEBUG] 2020-12-15 15:10:36.445 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:10:36.508 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-15 15:10:36.509 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:10:36.511 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [BillingSystem.entity.Billing] is safe
[DEBUG] 2020-12-15 15:10:36.511 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:10:36.600 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:36.600 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update role set role=? where id=?
[DEBUG] 2020-12-15 15:10:36.600 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update role set  where id=?
[DEBUG] 2020-12-15 15:10:36.600 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update role set role=null where role=? and id=?
[DEBUG] 2020-12-15 15:10:36.601 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update role set role=null where role=?
[DEBUG] 2020-12-15 15:10:36.601 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:36.601 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update billing set user_id=? where id=?
[DEBUG] 2020-12-15 15:10:36.601 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update billing set  where id=?
[DEBUG] 2020-12-15 15:10:36.601 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update billing set user_id=null where user_id=? and id=?
[DEBUG] 2020-12-15 15:10:36.601 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update billing set user_id=null where user_id=?
[DEBUG] 2020-12-15 15:10:36.605 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.User
[DEBUG] 2020-12-15 15:10:36.605 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2020-12-15 15:10:36.605 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select user_.id, user_.address as address2_2_, user_.city as city3_2_, user_.description as descript4_2_, user_.name as name5_2_, user_.password as password6_2_, user_.phone as phone7_2_, user_.state as state8_2_, user_.username as username9_2_, user_.zip_code as zip_cod10_2_ from user user_ where user_.id=?
[DEBUG] 2020-12-15 15:10:36.605 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into user (address, city, description, name, password, phone, state, username, zip_code, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:10:36.605 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update user set address=?, city=?, description=?, name=?, password=?, phone=?, state=?, username=?, zip_code=? where id=?
[DEBUG] 2020-12-15 15:10:36.605 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2020-12-15 15:10:36.606 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into user (address, city, description, name, password, phone, state, username, zip_code) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:10:36.701 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@230322c3]
[DEBUG] 2020-12-15 15:10:36.715 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-15 15:10:36.715 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-15 15:10:36.747 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f8b773c]
[DEBUG] 2020-12-15 15:10:36.751 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d92c3f8]
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.previousreading
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-12-15 15:10:36.753 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-15 15:10:36.755 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7873ce2c]
[DEBUG] 2020-12-15 15:10:36.756 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f4bcb2c]
[DEBUG] 2020-12-15 15:10:36.757 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-15 15:10:36.757 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-15 15:10:36.757 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@318c86c1]
[DEBUG] 2020-12-15 15:10:36.757 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-15 15:10:36.758 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.789 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.800 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-15 15:10:36.814 [http-nio-8080-exec-3] EntityLoader - Static select for entity BillingSystem.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:10:36.814 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@596a6b09]
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : address
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d10b8ef]
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dddf76f]
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.billAmount
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.paidAmount
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.paymentDate
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.presentreading
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.previousBalance
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.previousreading
[DEBUG] 2020-12-15 15:10:36.815 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.readingDate
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billings.user
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : billings.user
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : city
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : phone
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@427d0055]
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4019e1fa]
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.role
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c7d99e]
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.address
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.billings
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user.billings
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.city
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.description
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.name
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.password
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.phone
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.roles
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : roles.user.roles
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.state
[DEBUG] 2020-12-15 15:10:36.816 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.username
[DEBUG] 2020-12-15 15:10:36.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.user.zipcode
[DEBUG] 2020-12-15 15:10:36.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : roles.username
[DEBUG] 2020-12-15 15:10:36.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : state
[DEBUG] 2020-12-15 15:10:36.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:10:36.817 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : zipcode
[DEBUG] 2020-12-15 15:10:36.817 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.817 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.819 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.User)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:0>, path=BillingSystem.entity.User)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:1>, path=BillingSystem.entity.User.billings)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:2>, path=BillingSystem.entity.User.billings.<elements>)
          - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:3>, path=BillingSystem.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:4>, path=BillingSystem.entity.User.roles.<elements>)
                - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:5>, path=BillingSystem.entity.User.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(billings)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=BillingSystem.entity.User.billings)
                - SQL table alias mapping - billings1_
                - alias suffix - 1_
                - suffixed key columns - {user_id9_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.Billing)
                      - SQL table alias mapping - billings1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=BillingSystem.entity.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 3_
                - suffixed key columns - {role2_1_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_1_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=BillingSystem.entity.Role)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_1_4_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_2_5_}

[DEBUG] 2020-12-15 15:10:36.819 [http-nio-8080-exec-3] EntityLoader - Static select for entity BillingSystem.entity.User [READ]: select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:10:36.856 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.description as descript4_2_1_, user0_.name as name5_2_1_, user0_.password as password6_2_1_, user0_.phone as phone7_2_1_, user0_.state as state8_2_1_, user0_.username as username9_2_1_, user0_.zip_code as zip_cod10_2_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.presentreading as presentr5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.previousreading as previous7_0_0_, billings1_.readingDate as readingD8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-15 15:10:36.857 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.User: select user0_.id as id1_2_1_, user0_.address as address2_2_1_, user0_.city as city3_2_1_, user0_.description as descript4_2_1_, user0_.name as name5_2_1_, user0_.password as password6_2_1_, user0_.phone as phone7_2_1_, user0_.state as state8_2_1_, user0_.username as username9_2_1_, user0_.zip_code as zip_cod10_2_1_, billings1_.user_id as user_id9_0_3_, billings1_.id as id1_0_3_, billings1_.id as id1_0_0_, billings1_.bill_amt as bill_amt2_0_0_, billings1_.paid_amt as paid_amt3_0_0_, billings1_.payment_date as payment_4_0_0_, billings1_.presentreading as presentr5_0_0_, billings1_.previous_balance as previous6_0_0_, billings1_.previousreading as previous7_0_0_, billings1_.readingDate as readingD8_0_0_, billings1_.user_id as user_id9_0_0_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id where user0_.id=?
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Role
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from role where id =?
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select role_.id, role_.role as role2_1_, role_.user_id as user_id4_1_, role_.username as username3_1_ from role role_ where role_.id=?
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into role (role, user_id, username, id) values (?, ?, ?, ?)
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update role set role=?, user_id=?, username=? where id=?
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from role where id=?
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into role (role, user_id, username) values (?, ?, ?)
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac2d04b]
[DEBUG] 2020-12-15 15:10:36.860 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c7291b6]
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2037768a]
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e54c25]
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.paidAmount
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.paymentDate
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.previousreading
[DEBUG] 2020-12-15 15:10:36.861 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.readingDate
[DEBUG] 2020-12-15 15:10:36.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-15 15:10:36.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-15 15:10:36.862 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21eee9fb]
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78331d87]
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:10:36.863 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.864 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.877 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-15 15:10:36.877 [http-nio-8080-exec-3] EntityLoader - Static select for entity BillingSystem.entity.Role [NONE]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, billings2_.user_id as user_id9_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.paid_amt as paid_amt3_0_3_, billings2_.payment_date as payment_4_0_3_, billings2_.presentreading as presentr5_0_3_, billings2_.previous_balance as previous6_0_3_, billings2_.previousreading as previous7_0_3_, billings2_.readingDate as readingD8_0_3_, billings2_.user_id as user_id9_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-15 15:10:36.878 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@979f667]
[DEBUG] 2020-12-15 15:10:36.878 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-15 15:10:36.878 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:10:36.878 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78aa3fb3]
[DEBUG] 2020-12-15 15:10:36.878 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:10:36.878 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:10:36.879 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@126e57d2]
[DEBUG] 2020-12-15 15:10:36.881 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b9e3138]
[DEBUG] 2020-12-15 15:10:36.881 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.billAmount
[DEBUG] 2020-12-15 15:10:36.881 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.paidAmount
[DEBUG] 2020-12-15 15:10:36.881 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.paymentDate
[DEBUG] 2020-12-15 15:10:36.881 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.presentreading
[DEBUG] 2020-12-15 15:10:36.881 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.previousBalance
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.previousreading
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.readingDate
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings.user
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.billings.user
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@443b8b01]
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e16754f]
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:10:36.882 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles.user
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.883 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.886 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Role)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Role, querySpaceUid=<gen:0>, path=BillingSystem.entity.Role)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:2>, path=BillingSystem.entity.Role.user.billings)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:3>, path=BillingSystem.entity.Role.user.billings.<elements>)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:4>, path=BillingSystem.entity.Role.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:5>, path=BillingSystem.entity.Role.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(billings)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.billings)
                      - SQL table alias mapping - billings2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id9_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_0_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Billing)
                            - SQL table alias mapping - billings2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_0_3_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:4>
                   - CollectionQuerySpaceImpl(uid=<gen:4>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles3_
                      - alias suffix - 4_
                      - suffixed key columns - {role2_1_4_}
                      - entity-element alias suffix - 5_
                      - 5_entity-element suffixed key columns - id1_1_5_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:4> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles3_
                            - alias suffix - 5_
                            - suffixed key columns - {id1_1_5_}

[DEBUG] 2020-12-15 15:10:36.886 [http-nio-8080-exec-3] EntityLoader - Static select for entity BillingSystem.entity.Role [READ]: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, billings2_.user_id as user_id9_0_2_, billings2_.id as id1_0_2_, billings2_.id as id1_0_3_, billings2_.bill_amt as bill_amt2_0_3_, billings2_.paid_amt as paid_amt3_0_3_, billings2_.payment_date as payment_4_0_3_, billings2_.presentreading as presentr5_0_3_, billings2_.previous_balance as previous6_0_3_, billings2_.previousreading as previous7_0_3_, billings2_.readingDate as readingD8_0_3_, billings2_.user_id as user_id9_0_3_, roles3_.role as role2_1_4_, roles3_.id as id1_1_4_, roles3_.id as id1_1_5_, roles3_.role as role2_1_5_, roles3_.user_id as user_id4_1_5_, roles3_.username as username3_1_5_ from role role0_ left outer join user user1_ on role0_.user_id=user1_.id left outer join billing billings2_ on user1_.id=billings2_.user_id left outer join role roles3_ on user1_.id=roles3_.role where role0_.id=?
[DEBUG] 2020-12-15 15:10:36.886 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-15 15:10:36.892 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Role: select role0_.id as id1_1_0_, role0_.role as role2_1_0_, role0_.user_id as user_id4_1_0_, role0_.username as username3_1_0_ from role role0_ where role0_.id=?
[DEBUG] 2020-12-15 15:10:36.893 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: BillingSystem.entity.Billing
[DEBUG] 2020-12-15 15:10:36.893 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from billing where id =?
[DEBUG] 2020-12-15 15:10:36.894 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select billing_.id, billing_.bill_amt as bill_amt2_0_, billing_.paid_amt as paid_amt3_0_, billing_.payment_date as payment_4_0_, billing_.presentreading as presentr5_0_, billing_.previous_balance as previous6_0_, billing_.previousreading as previous7_0_, billing_.readingDate as readingD8_0_, billing_.user_id as user_id9_0_ from billing billing_ where billing_.id=?
[DEBUG] 2020-12-15 15:10:36.894 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into billing (bill_amt, paid_amt, payment_date, presentreading, previous_balance, previousreading, readingDate, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:10:36.894 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update billing set bill_amt=?, paid_amt=?, payment_date=?, presentreading=?, previous_balance=?, previousreading=?, readingDate=?, user_id=? where id=?
[DEBUG] 2020-12-15 15:10:36.894 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from billing where id=?
[DEBUG] 2020-12-15 15:10:36.894 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into billing (bill_amt, paid_amt, payment_date, presentreading, previous_balance, previousreading, readingDate, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-12-15 15:10:36.894 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a9cf853]
[DEBUG] 2020-12-15 15:10:36.897 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-15 15:10:36.897 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e632fa5]
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6939a534]
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@343b2117]
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750bc40]
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:10:36.898 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.903 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] EntityLoader - Static select for entity BillingSystem.entity.Billing [NONE]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a8e1624]
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef500ae]
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:10:36.911 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.billings
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66601706]
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642add2d]
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.role
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.user
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af0c39]
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles.username
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.912 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=BillingSystem.entity.Billing)
    - Returns
       - EntityReturnImpl(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:0>, path=BillingSystem.entity.Billing)
          - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:1>, path=BillingSystem.entity.Billing.user)
             - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:2>, path=BillingSystem.entity.Billing.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:3>, path=BillingSystem.entity.Billing.user.roles.<elements>)
                   - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:4>, path=BillingSystem.entity.Billing.user.roles.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=BillingSystem.entity.Billing)
          - SQL table alias mapping - billing0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=BillingSystem.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {role2_1_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=BillingSystem.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2020-12-15 15:10:36.913 [http-nio-8080-exec-3] EntityLoader - Static select for entity BillingSystem.entity.Billing [READ]: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_, user1_.id as id1_2_1_, user1_.address as address2_2_1_, user1_.city as city3_2_1_, user1_.description as descript4_2_1_, user1_.name as name5_2_1_, user1_.password as password6_2_1_, user1_.phone as phone7_2_1_, user1_.state as state8_2_1_, user1_.username as username9_2_1_, user1_.zip_code as zip_cod10_2_1_, roles2_.role as role2_1_2_, roles2_.id as id1_1_2_, roles2_.id as id1_1_3_, roles2_.role as role2_1_3_, roles2_.user_id as user_id4_1_3_, roles2_.username as username3_1_3_ from billing billing0_ left outer join user user1_ on billing0_.user_id=user1_.id left outer join role roles2_ on user1_.id=roles2_.role where billing0_.id=?
[DEBUG] 2020-12-15 15:10:36.916 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-15 15:10:36.916 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity BillingSystem.entity.Billing: select billing0_.id as id1_0_0_, billing0_.bill_amt as bill_amt2_0_0_, billing0_.paid_amt as paid_amt3_0_0_, billing0_.payment_date as payment_4_0_0_, billing0_.presentreading as presentr5_0_0_, billing0_.previous_balance as previous6_0_0_, billing0_.previousreading as previous7_0_0_, billing0_.readingDate as readingD8_0_0_, billing0_.user_id as user_id9_0_0_ from billing billing0_ where billing0_.id=?
[DEBUG] 2020-12-15 15:10:36.933 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c418a2e]
[DEBUG] 2020-12-15 15:10:36.933 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d63c511]
[DEBUG] 2020-12-15 15:10:36.935 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2020-12-15 15:10:36.935 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:10:36.935 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f61da19]
[DEBUG] 2020-12-15 15:10:36.935 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.address
[DEBUG] 2020-12-15 15:10:36.935 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.billings
[DEBUG] 2020-12-15 15:10:36.936 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5001c719]
[DEBUG] 2020-12-15 15:10:36.936 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ef720f]
[DEBUG] 2020-12-15 15:10:36.936 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.city
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.description
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.name
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.phone
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.state
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.username
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.zipcode
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2020-12-15 15:10:36.937 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.939 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.940 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.roles, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Role, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.roles].<elements>)
             - EntityAttributeFetchImpl(entity=BillingSystem.entity.User, querySpaceUid=<gen:2>, path=[BillingSystem.entity.User.roles].<elements>.user)
                - CollectionAttributeFetchImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:3>, path=[BillingSystem.entity.User.roles].<elements>.user.billings)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:4>, path=[BillingSystem.entity.User.roles].<elements>.user.billings.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {role2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=BillingSystem.entity.User)
                      - SQL table alias mapping - user1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2020-12-15 15:10:36.940 [http-nio-8080-exec-3] CollectionLoader - Static select for collection BillingSystem.entity.User.roles: select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12cc0fd]
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666437f6]
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : billAmount
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : paidAmount
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : paymentDate
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : presentreading
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : previousBalance
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : previousreading
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : readingDate
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-12-15 15:10:36.941 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-12-15 15:10:36.943 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=BillingSystem.entity.User.billings)
    - Returns
       - CollectionReturnImpl(collection=BillingSystem.entity.User.billings, querySpaceUid=<gen:0>, path=[BillingSystem.entity.User.billings])
          - (collection element) CollectionFetchableElementEntityGraph(entity=BillingSystem.entity.Billing, querySpaceUid=<gen:1>, path=[BillingSystem.entity.User.billings].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=BillingSystem.entity.User.billings)
          - SQL table alias mapping - billings0_
          - alias suffix - 0_
          - suffixed key columns - {user_id9_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=BillingSystem.entity.Billing)
                - SQL table alias mapping - billings0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-12-15 15:10:36.943 [http-nio-8080-exec-3] CollectionLoader - Static select for collection BillingSystem.entity.User.billings: select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:37.083 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-12-15 15:10:37.083 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-12-15 15:10:37.091 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-12-15 15:10:37.115 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-12-15 15:10:37.116 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-12-15 15:10:37.116 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-12-15 15:10:37.116 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-12-15 15:10:37.126 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6e0f2d41
[DEBUG] 2020-12-15 15:10:37.148 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: 3c92b193-059e-41c8-ba56-b5d253e23389 (<unnamed>)
[DEBUG] 2020-12-15 15:10:37.148 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-12-15 15:10:37.468 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-12-15 15:10:37.592 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-12-15 15:10:37.669 [http-nio-8080-exec-3] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6b812759
[DEBUG] 2020-12-15 15:10:37.772 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-15 15:10:37.801 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-15 15:10:37.842 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'BillingSystem'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2020-12-15 15:10:37.935 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-12-15 15:10:38.021 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : BillingSystem.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-12-15 15:10:38.022 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-12-15 15:10:38.034 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-12-15 15:10:38.035 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2020-12-15 15:10:38.099 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2020-12-15 15:10:38.099 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-12-15 15:10:38.101 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=BillingSystem.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=BillingSystem.entity.User}}

[DEBUG] 2020-12-15 15:10:38.101 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-15 15:10:38.142 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from BillingSystem.entity.User as generatedAlias0
[DEBUG] 2020-12-15 15:10:38.142 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_ from user user0_
[DEBUG] 2020-12-15 15:10:38.142 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-12-15 15:10:38.244 [http-nio-8080-exec-3] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_ from user user0_
[DEBUG] 2020-12-15 15:10:38.356 [http-nio-8080-exec-3] Loader - Result set row: 0
[DEBUG] 2020-12-15 15:10:38.378 [http-nio-8080-exec-3] Loader - Result row: EntityKey[BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:10:38.442 [http-nio-8080-exec-3] Loader - Result set row: 1
[DEBUG] 2020-12-15 15:10:38.445 [http-nio-8080-exec-3] Loader - Result row: EntityKey[BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:10:38.445 [http-nio-8080-exec-3] Loader - Result set row: 2
[DEBUG] 2020-12-15 15:10:38.445 [http-nio-8080-exec-3] Loader - Result row: EntityKey[BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:10:38.446 [http-nio-8080-exec-3] Loader - Result set row: 3
[DEBUG] 2020-12-15 15:10:38.446 [http-nio-8080-exec-3] Loader - Result row: EntityKey[BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:10:38.446 [http-nio-8080-exec-3] Loader - Result set row: 4
[DEBUG] 2020-12-15 15:10:38.446 [http-nio-8080-exec-3] Loader - Result row: EntityKey[BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:10:38.450 [http-nio-8080-exec-3] Loader - Result set row: 5
[DEBUG] 2020-12-15 15:10:38.450 [http-nio-8080-exec-3] Loader - Result row: EntityKey[BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:10:38.453 [http-nio-8080-exec-3] Loader - Result set row: 6
[DEBUG] 2020-12-15 15:10:38.454 [http-nio-8080-exec-3] Loader - Result row: EntityKey[BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:38.461 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:10:38.467 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:38.479 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.479 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.479 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret1
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.521 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = JCoyne
[DEBUG] 2020-12-15 15:10:38.533 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.533 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:38.533 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.534 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:10:38.539 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:10:38.539 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:38.545 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.545 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.545 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.545 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-12-15 15:10:38.545 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.546 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:38.546 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.546 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Fred Hanson
[DEBUG] 2020-12-15 15:10:38.546 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.546 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret2
[DEBUG] 2020-12-15 15:10:38.546 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = FHanson
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:38.552 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Barney Curry
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret3
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `phone` : value = 608625444
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:38.553 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = BCurry
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Dianne Klein
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret5
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `phone` : value = 6086252662
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.558 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = Dklein
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `city` : value = Sun Prairie
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret6
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `phone` : value = 6086257722
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = DTilman
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `address` : value = 456 Street st
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = customer
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Guru Katuwal
[DEBUG] 2020-12-15 15:10:38.559 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `phone` : value = 6086925566
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = gkatuwal
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:38.560 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:38.567 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.578 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-15 15:10:38.578 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = paul sean
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `username` : value = PSean
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.579 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:38.596 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:38.606 [http-nio-8080-exec-3] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:38.628 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:38.659 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.659 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:38.659 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.663 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.663 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.663 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:38.663 [http-nio-8080-exec-3] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:10:38.673 [http-nio-8080-exec-3] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:38.680 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:10:38.680 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.680 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:10:38.680 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.680 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.681 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.681 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:38.681 [http-nio-8080-exec-3] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:38.691 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:38.692 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:10:38.704 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:38.747 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `billAmount` : value = 140.0
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `paidAmount` : value = 40.0
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`paidAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `paymentDate` : value = 2020-10-10
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`paymentDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `presentreading` : value = 90.0
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `previousBalance` : value = 200.0
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `previousreading` : value = 75.0
[DEBUG] 2020-12-15 15:10:38.749 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`previousreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `readingDate` : value = 2020-10-10
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`readingDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 806
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.750 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.751 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:10:38.751 [http-nio-8080-exec-3] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:10:38.762 [http-nio-8080-exec-3] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:38.767 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:10:38.767 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.767 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:10:38.767 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.767 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.767 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.769 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:10:38.769 [http-nio-8080-exec-3] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:38.774 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:10:38.774 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.774 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:10:38.775 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.775 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.775 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.775 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:10:38.775 [http-nio-8080-exec-3] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:38.782 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:10:38.782 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.782 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:10:38.782 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.782 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.782 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.783 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:10:38.783 [http-nio-8080-exec-3] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:38.794 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:10:38.794 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.794 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:10:38.794 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.794 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.794 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.795 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:10:38.796 [http-nio-8080-exec-3] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:38.802 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:10:38.802 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.807 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:10:38.807 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.807 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.807 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.807 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:10:38.807 [http-nio-8080-exec-3] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:38.809 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:10:38.810 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.810 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:10:38.810 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.810 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.810 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.810 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:10:38.810 [http-nio-8080-exec-3] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:38.830 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:10:38.830 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.830 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:10:38.832 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.832 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.832 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.833 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:10:38.834 [http-nio-8080-exec-3] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:38.836 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:10:38.836 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.836 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:10:38.836 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:38.836 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.836 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.836 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:10:38.840 [http-nio-8080-exec-3] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:38.851 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:10:38.851 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.851 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:10:38.851 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:38.851 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:38.851 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:38.858 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:10:45.053 [http-nio-8080-exec-5] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:10:45.073 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:10:45.074 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-15 15:10:45.074 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:45.074 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:45.074 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:45.074 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-15 15:10:45.074 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.074 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = paul sean
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-15 15:10:45.077 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `username` : value = PSean
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:45.078 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : BillingSystem.entity.User#807
[DEBUG] 2020-12-15 15:10:45.079 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:10:53.637 [http-nio-8080-exec-6] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:10:53.660 [http-nio-8080-exec-6] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:10:53.660 [http-nio-8080-exec-6] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `description` : value = Customer
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `name` : value = paul sean
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `username` : value = PSean
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-15 15:10:53.661 [http-nio-8080-exec-6] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:53.664 [http-nio-8080-exec-6] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:53.665 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:53.665 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:53.665 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:53.665 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:53.665 [http-nio-8080-exec-6] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:53.665 [http-nio-8080-exec-6] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:53.669 [http-nio-8080-exec-6] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:53.669 [http-nio-8080-exec-6] AbstractLoadPlanBasedEntityLoader - Done entity load : BillingSystem.entity.User#807
[DEBUG] 2020-12-15 15:10:53.669 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:10:53.699 [http-nio-8080-exec-6] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-12-15 15:10:53.700 [http-nio-8080-exec-6] TransactionImpl - begin
[DEBUG] 2020-12-15 15:10:53.747 [http-nio-8080-exec-6] TransactionImpl - committing
[DEBUG] 2020-12-15 15:10:53.753 [http-nio-8080-exec-6] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-12-15 15:10:53.754 [http-nio-8080-exec-6] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-12-15 15:10:53.797 [http-nio-8080-exec-6] Collections - Collection found: [BillingSystem.entity.User.billings#807], was: [BillingSystem.entity.User.billings#807] (initialized)
[DEBUG] 2020-12-15 15:10:53.797 [http-nio-8080-exec-6] Collections - Collection found: [BillingSystem.entity.User.roles#807], was: [BillingSystem.entity.User.roles#807] (initialized)
[DEBUG] 2020-12-15 15:10:53.797 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-12-15 15:10:53.797 [http-nio-8080-exec-6] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] 2020-12-15 15:10:53.801 [http-nio-8080-exec-6] EntityPrinter - Listing entities:
[DEBUG] 2020-12-15 15:10:53.802 [http-nio-8080-exec-6] EntityPrinter - BillingSystem.entity.User{zipcode=53719, password=Madison, address=666 kottke dr, city=Madison, phone=6086925862, roles=[], billings=[], name=paul sean, description=Employee, id=807, state=WI, username=PSean}
[DEBUG] 2020-12-15 15:10:53.836 [http-nio-8080-exec-6] SQL - update user set address=?, city=?, description=?, name=?, password=?, phone=?, state=?, username=?, zip_code=? where id=?
[DEBUG] 2020-12-15 15:10:53.882 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:10:53.883 [http-nio-8080-exec-6] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:10:57.375 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2020-12-15 15:10:57.378 [http-nio-8080-exec-7] SQL - select user0_.id as id1_2_, user0_.address as address2_2_, user0_.city as city3_2_, user0_.description as descript4_2_, user0_.name as name5_2_, user0_.password as password6_2_, user0_.phone as phone7_2_, user0_.state as state8_2_, user0_.username as username9_2_, user0_.zip_code as zip_cod10_2_ from user user0_
[DEBUG] 2020-12-15 15:10:57.395 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2020-12-15 15:10:57.395 [http-nio-8080-exec-7] Loader - Result row: EntityKey[BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:10:57.395 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2020-12-15 15:10:57.395 [http-nio-8080-exec-7] Loader - Result row: EntityKey[BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:10:57.395 [http-nio-8080-exec-7] Loader - Result set row: 2
[DEBUG] 2020-12-15 15:10:57.395 [http-nio-8080-exec-7] Loader - Result row: EntityKey[BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:10:57.395 [http-nio-8080-exec-7] Loader - Result set row: 3
[DEBUG] 2020-12-15 15:10:57.396 [http-nio-8080-exec-7] Loader - Result row: EntityKey[BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:10:57.396 [http-nio-8080-exec-7] Loader - Result set row: 4
[DEBUG] 2020-12-15 15:10:57.396 [http-nio-8080-exec-7] Loader - Result row: EntityKey[BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:10:57.396 [http-nio-8080-exec-7] Loader - Result set row: 5
[DEBUG] 2020-12-15 15:10:57.396 [http-nio-8080-exec-7] Loader - Result row: EntityKey[BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] Loader - Result set row: 6
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] Loader - Result row: EntityKey[BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Joe Coyne
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret1
[DEBUG] 2020-12-15 15:10:57.406 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `phone` : value = 6086252222
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = JCoyne
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#1]
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Fred Hanson
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret2
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = FHanson
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Barney Curry
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret3
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `phone` : value = 608625444
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = BCurry
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#3]
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:10:57.407 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Dianne Klein
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret5
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `phone` : value = 6086252662
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.408 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = Dklein
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#5]
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.417 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.419 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `city` : value = Sun Prairie
[DEBUG] 2020-12-15 15:10:57.419 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.419 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:57.419 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.419 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Dawn Tilman
[DEBUG] 2020-12-15 15:10:57.420 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.420 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret6
[DEBUG] 2020-12-15 15:10:57.420 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.420 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `phone` : value = 6086257722
[DEBUG] 2020-12-15 15:10:57.420 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.420 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.429 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.429 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:57.429 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.429 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = DTilman
[DEBUG] 2020-12-15 15:10:57.429 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.429 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:57.429 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.430 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#6]
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `address` : value = 456 Street st
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = customer
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = Guru Katuwal
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `phone` : value = 6086925566
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = gkatuwal
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.432 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#806]
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `address` : value = 666 kottke dr
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `city` : value = Madison
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `name` : value = paul sean
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = Madison
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `phone` : value = 6086925862
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `username` : value = PSean
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `zipcode` : value = 53719
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.433 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#807]
[DEBUG] 2020-12-15 15:10:57.434 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:57.439 [http-nio-8080-exec-7] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:57.451 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:57.452 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.452 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#807]
[DEBUG] 2020-12-15 15:10:57.452 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.452 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.452 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.452 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:57.452 [http-nio-8080-exec-7] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:57.464 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:57.464 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.464 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#807]
[DEBUG] 2020-12-15 15:10:57.464 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.464 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.464 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.465 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:10:57.465 [http-nio-8080-exec-7] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:57.469 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:10:57.469 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.469 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#806]
[DEBUG] 2020-12-15 15:10:57.469 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.470 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.470 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.470 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:57.471 [http-nio-8080-exec-7] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:57.486 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:57.489 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:10:57.490 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:57.490 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-15 15:10:57.490 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `billAmount` : value = 140.0
[DEBUG] 2020-12-15 15:10:57.490 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`billAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.490 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `paidAmount` : value = 40.0
[DEBUG] 2020-12-15 15:10:57.490 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`paidAmount`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `paymentDate` : value = 2020-10-10
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`paymentDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `presentreading` : value = 90.0
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`presentreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `previousBalance` : value = 200.0
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`previousBalance`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `previousreading` : value = 75.0
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`previousreading`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `readingDate` : value = 2020-10-10
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`readingDate`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 806
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.Billing#440]
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#806]
[DEBUG] 2020-12-15 15:10:57.491 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.492 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.492 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.492 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:10:57.492 [http-nio-8080-exec-7] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:57.498 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:10:57.498 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.498 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#6]
[DEBUG] 2020-12-15 15:10:57.498 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.498 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.499 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.499 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:10:57.499 [http-nio-8080-exec-7] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:57.510 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:10:57.516 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.517 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#6]
[DEBUG] 2020-12-15 15:10:57.517 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.517 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.517 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.517 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:10:57.517 [http-nio-8080-exec-7] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:57.519 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:10:57.519 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.521 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#5]
[DEBUG] 2020-12-15 15:10:57.523 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.526 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.528 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.529 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:10:57.529 [http-nio-8080-exec-7] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:57.534 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:10:57.537 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.537 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#5]
[DEBUG] 2020-12-15 15:10:57.537 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.537 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.537 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.537 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:10:57.537 [http-nio-8080-exec-7] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:57.539 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:10:57.539 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.539 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#3]
[DEBUG] 2020-12-15 15:10:57.539 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.539 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.539 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.539 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:10:57.540 [http-nio-8080-exec-7] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:57.541 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:10:57.545 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.546 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#3]
[DEBUG] 2020-12-15 15:10:57.547 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.547 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.547 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.549 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:10:57.549 [http-nio-8080-exec-7] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:57.556 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:10:57.564 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.564 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:10:57.564 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.564 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.564 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.564 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:10:57.564 [http-nio-8080-exec-7] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:57.574 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:10:57.575 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.576 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:10:57.576 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.576 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.576 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.576 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:10:57.576 [http-nio-8080-exec-7] SQL - select roles0_.role as role2_1_0_, roles0_.id as id1_1_0_, roles0_.id as id1_1_1_, roles0_.role as role2_1_1_, roles0_.user_id as user_id4_1_1_, roles0_.username as username3_1_1_, user1_.id as id1_2_2_, user1_.address as address2_2_2_, user1_.city as city3_2_2_, user1_.description as descript4_2_2_, user1_.name as name5_2_2_, user1_.password as password6_2_2_, user1_.phone as phone7_2_2_, user1_.state as state8_2_2_, user1_.username as username9_2_2_, user1_.zip_code as zip_cod10_2_2_ from role roles0_ left outer join user user1_ on roles0_.user_id=user1_.id where roles0_.role=?
[DEBUG] 2020-12-15 15:10:57.585 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:10:57.585 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.586 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#1]
[DEBUG] 2020-12-15 15:10:57.586 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:10:57.586 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.586 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.586 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:10:57.586 [http-nio-8080-exec-7] SQL - select billings0_.user_id as user_id9_0_0_, billings0_.id as id1_0_0_, billings0_.id as id1_0_1_, billings0_.bill_amt as bill_amt2_0_1_, billings0_.paid_amt as paid_amt3_0_1_, billings0_.payment_date as payment_4_0_1_, billings0_.presentreading as presentr5_0_1_, billings0_.previous_balance as previous6_0_1_, billings0_.previousreading as previous7_0_1_, billings0_.readingDate as readingD8_0_1_, billings0_.user_id as user_id9_0_1_ from billing billings0_ where billings0_.user_id=?
[DEBUG] 2020-12-15 15:10:57.587 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:10:57.587 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.587 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#1]
[DEBUG] 2020-12-15 15:10:57.587 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:10:57.594 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:10:57.594 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-12-15 15:10:57.594 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-12-15 15:14:49.247 [http-nio-8080-exec-2] SQL - select user0_.id as id1_2_0_, user0_.address as address2_2_0_, user0_.city as city3_2_0_, user0_.description as descript4_2_0_, user0_.name as name5_2_0_, user0_.password as password6_2_0_, user0_.phone as phone7_2_0_, user0_.state as state8_2_0_, user0_.username as username9_2_0_, user0_.zip_code as zip_cod10_2_0_, billings1_.user_id as user_id9_0_1_, billings1_.id as id1_0_1_, billings1_.id as id1_0_2_, billings1_.bill_amt as bill_amt2_0_2_, billings1_.paid_amt as paid_amt3_0_2_, billings1_.payment_date as payment_4_0_2_, billings1_.presentreading as presentr5_0_2_, billings1_.previous_balance as previous6_0_2_, billings1_.previousreading as previous7_0_2_, billings1_.readingDate as readingD8_0_2_, billings1_.user_id as user_id9_0_2_, roles2_.role as role2_1_3_, roles2_.id as id1_1_3_, roles2_.id as id1_1_4_, roles2_.role as role2_1_4_, roles2_.user_id as user_id4_1_4_, roles2_.username as username3_1_4_, user3_.id as id1_2_5_, user3_.address as address2_2_5_, user3_.city as city3_2_5_, user3_.description as descript4_2_5_, user3_.name as name5_2_5_, user3_.password as password6_2_5_, user3_.phone as phone7_2_5_, user3_.state as state8_2_5_, user3_.username as username9_2_5_, user3_.zip_code as zip_cod10_2_5_ from user user0_ left outer join billing billings1_ on user0_.id=billings1_.user_id left outer join role roles2_ on user0_.id=roles2_.role left outer join user user3_ on roles2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2020-12-15 15:14:49.255 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `address` : value = 123 Street st
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`address`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `billings` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`billings`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `city` : value = Fitchberg
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`city`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `description` : value = Employee
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Fred Hanson
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = SuperSecret2
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `phone` : value = 608625333
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`phone`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `state` : value = WI
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`state`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `username` : value = FHanson
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`username`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `zipcode` : value = 53711
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`zipcode`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [BillingSystem.entity.User#2]
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.billings#2]
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.billings
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [BillingSystem.entity.User.roles#2]
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: BillingSystem.entity.User.roles
[DEBUG] 2020-12-15 15:14:49.257 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-12-15 15:14:49.258 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : BillingSystem.entity.User#2
[DEBUG] 2020-12-15 15:14:49.258 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
